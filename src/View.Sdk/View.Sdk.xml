<?xml version="1.0"?>
<doc>
    <assembly>
        <name>View.Sdk</name>
    </assembly>
    <members>
        <member name="T:View.Sdk.Account">
            <summary>
            Account.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.Account.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Administrator">
            <summary>
            Administrator.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.AccountGUID">
            <summary>
            Account GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.FullName">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.PasswordSha256">
            <summary>
            Password SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Telephone">
            <summary>
            Telephone.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.Administrator.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ApiErrorEnum">
            <summary>
            API error codes.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoObjectMetadata">
            <summary>
            No object metadata supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoObjectData">
            <summary>
            No object data supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoMetadataRule">
            <summary>
            No metadata rule supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.RequestBodyMissing">
            <summary>
            Request body missing.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.RequiredPropertiesMissing">
            <summary>
            Required properties were missing.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoDataRepositoryConnectivity">
            <summary>
            No connectivity to the specified data repository.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoGraphConnectivity">
            <summary>
            No connectivity to the specified graph.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.GraphOperationFailed">
            <summary>
            A graph operation has failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoTypeDetectorConnectivity">
            <summary>
            No connectivity to the type detection endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownTypeDetected">
            <summary>
            Unable to discern type of supplied data.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.PdfConversionFailed">
            <summary>
            PDF conversion failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoUdrConnectivity">
            <summary>
            No connectivity to the UDR endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UdrGenerationFailed">
            <summary>
            UDR generation failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoSemanticCellConnectivity">
            <summary>
            No connectivity to the semantic cell extraction endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.SemanticCellExtractionFailed">
            <summary>
            Semantic cell extraction failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoDataCatalogConnectivity">
            <summary>
            No data catalog connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.DataCatalogPersistFailed">
            <summary>
            Persisting data in the data catalog failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownDataCatalogType">
            <summary>
            Unknown data catalog type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoEmbeddingsConnectivity">
            <summary>
            No embeddings processor connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownEmbeddingsGeneratorType">
            <summary>
            Unknown embeddings generator type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.EmbeddingsGenerationFailed">
            <summary>
            Embeddings generation failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoVectorConnectivity">
            <summary>
            No vector repository connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownVectorRepositoryType">
            <summary>
            Unknown vector repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.VectorPersistFailed">
            <summary>
            Vector persistence failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.AuthenticationFailed">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.AuthorizationFailed">
            <summary>
            Authorization failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.BadGateway">
            <summary>
            Bad gateway.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.BadRequest">
            <summary>
            Bad request.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Conflict">
            <summary>
            Conflict.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.DeserializationError">
            <summary>
            DeserializationError.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Inactive">
            <summary>
            Inactive.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InternalError">
            <summary>
            Internal error.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InvalidEmail">
            <summary>
            Invalid email.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InvalidRange">
            <summary>
            Invalid range.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InUse">
            <summary>
            In use.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NotEmpty">
            <summary>
            Not empty.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NotFound">
            <summary>
            Not found.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Timeout">
            <summary>
            Timeout.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.TokenExpired">
            <summary>
            Token expired.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.TooLarge">
            <summary>
            Request too large.
            </summary>
        </member>
        <member name="T:View.Sdk.ApiErrorResponse">
            <summary>
            API error response.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Message">
            <summary>
            Human-readable message.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Context">
            <summary>
            Additional contextual information.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="M:View.Sdk.ApiErrorResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.ApiErrorResponse.#ctor(View.Sdk.ApiErrorEnum,System.Object,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="error">Error code.</param>
            <param name="context">Context.</param>
            <param name="description">Description.</param>
            
        </member>
        <member name="T:View.Sdk.ApiVersionEnum">
            <summary>
            API versions.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.V1_0">
            <summary>
            V1.0.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.V2_0">
            <summary>
            V2.0.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantChatRequest">
            <summary>
            View Assistant chat request.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Question">
            <summary>
            Question.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Temperature">
            <summary>
            Temperature, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate, between 1 and 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.GenerationModel">
            <summary>
            Generation model and tag; default is llama3.1:latest.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.GenerationProvider">
            <summary>
            Generation provider.  Value values are: ollama.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.OllamaPort">
            <summary>
            Ollama TCP port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Stream">
            <summary>
            Streaming.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.AssistantChatRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantRagRequest">
            <summary>
            View Assistant RAG request.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.PromptPrefix">
            <summary>
            Prompt prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.Question">
            <summary>
            Question.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.MaxResults">
            <summary>
            Maximum number of documents to retrieve, between 1 and 100.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.Temperature">
            <summary>
            Temperature, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.TopP">
            <summary>
            Top P, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate, between 1 and 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.GenerationModel">
            <summary>
            Generation model and tag; default is llama3.1:latest.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.GenerationProvider">
            <summary>
            Generation provider.  Value values are: ollama.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.OllamaPort">
            <summary>
            Ollama TCP port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.VectorDatabaseHostname">
            <summary>
            Vector database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.VectorDatabasePort">
            <summary>
            Vector database port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.VectorDatabaseName">
            <summary>
            Vector database name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.VectorDatabaseUser">
            <summary>
            Vector database user.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.VectorDatabasePassword">
            <summary>
            Vector database password.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.Stream">
            <summary>
            Streaming.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.ContextSort">
            <summary>
            Enable or disable contextual sorting.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.ContextScope">
            <summary>
            Context scope; number of neighboring data elements to retrieve.  Must be between 1 and 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.Rerank">
            <summary>
            Enable or disable re-ranking of chunks or documents.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRagRequest.RerankTopK">
            <summary>
            Re-ranking of top chunks or documents.  Must be between 1 and 16.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.AssistantRagRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ViewAssistantSdk">
            <summary>
            View Assistant SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ViewAssistantSdk.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="endpoint">Endpoint URL.</param>
        </member>
        <member name="M:View.Sdk.Assistant.ViewAssistantSdk.ProcessRag(View.Sdk.Assistant.AssistantRagRequest,System.Threading.CancellationToken)">
            <summary>
            Process a RAG request.
            </summary>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.ViewAssistantSdk.ProcessChat(View.Sdk.Assistant.AssistantChatRequest,System.Threading.CancellationToken)">
            <summary>
            Process a chat request.
            </summary>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="T:View.Sdk.AuthenticationResultEnum">
            <summary>
            Authentication result.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.NotFound">
            <summary>
            NotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Inactive">
            <summary>
            Inactive.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Invalid">
            <summary>
            Invalid.
            </summary>
        </member>
        <member name="T:View.Sdk.AuthenticationToken">
            <summary>
            Authentication token details.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.TimestampUtc">
            <summary>
            Timestamp when the token was issued, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.ExpirationUtc">
            <summary>
            Timestamp when the token will expire, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.IsExpired">
            <summary>
            Boolean to indicate if the token is expired.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.AdministratorGUID">
            <summary>
            Administrator GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.UserGUID">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.Valid">
            <summary>
            Boolean indicating whether or not the token is valid.
            </summary>
        </member>
        <member name="M:View.Sdk.AuthenticationToken.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.AuthorizationResultEnum">
            <summary>
            Authorization result.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.Permitted">
            <summary>
            Permitted.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.DeniedImplicit">
            <summary>
            DeniedImplicit.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.DeniedExplicit">
            <summary>
            DeniedExplicit.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.NotFound">
            <summary>
            NotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.Conflict">
            <summary>
            Conflict.
            </summary>
        </member>
        <member name="T:View.Sdk.Blob">
            <summary>
            Binary large object (BLOB).
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Name">
            <summary>
            Name of the BLOB.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Url">
            <summary>
            URL to access the BLOB directly.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Length">
            <summary>
            Content length of the BLOB.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.RefObjType">
            <summary>
            Object type to which this BLOB refers.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.RefObjGUID">
            <summary>
            Globally-unique identifier the object to which this BLOB refers.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.IsPublic">
            <summary>
            Boolean indicating whether or not the BLOB is accessible without authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.CreatedUtc">
            <summary>
            Timestamp from creation in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Data">
            <summary>
            BLOB data.
            </summary>
        </member>
        <member name="M:View.Sdk.Blob.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketEnumerationResult">
            <summary>
            Object returned as the result of an enumeration against a bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Success">
            <summary>
            Indicates if the statistics operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.IterationsRequired">
            <summary>
            Iterations required.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Statistics">
            <summary>
            Object statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.SharedPrefixes">
            <summary>
            Shared prefixes.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Objects">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.DeleteMarkers">
            <summary>
            Delete markers.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.TotalRecords">
            <summary>
            Total number of records.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the enumeration.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketEnumerationResult.#ctor">
            <summary>
            Instantiates the object.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketMetadata">
            <summary>
            Bucket metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.PoolGUID">
            <summary>
            Pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.RegionString">
            <summary>
            Region string.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Versioning">
            <summary>
            Enable or disable versioning.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.RetentionMinutes">
            <summary>
            Retention, in minutes.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.MaxUploadSize">
            <summary>
            Maximum upload size.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.MaxMultipartUploadSeconds">
            <summary>
            Maximum multipart upload seconds.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.LastAccessUtc">
            <summary>
            Last access, UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.CreatedUtc">
            <summary>
            Created, UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketStatistics">
            <summary>
            Bucket statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.ObjectCount">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.VersionCount">
            <summary>
            Number of versions.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.DeleteMarkers">
            <summary>
            Number of delete markers.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.AllowOverwrites">
            <summary>
            Boolean indicating whether or not source documents can be overwritten.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Collection.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CollectionSearchRequest">
            <summary>
            Object used to search a collection.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.GUID">
            <summary>
            The GUID of the search operation.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Skip">
            <summary>
            Number of results to skip.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Ordering">
            <summary>
            Ordering.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Filter">
            <summary>
            Required terms and search filter that must be satisfied to include a document in the results.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="M:View.Sdk.CollectionSearchRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CollectionStatistics">
            <summary>
            Collection statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.DocumentCount">
            <summary>
            Number of source documents.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.TermCount">
            <summary>
            Term count.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.KeyValueCount">
            <summary>
            Key-value count.
            </summary>
        </member>
        <member name="M:View.Sdk.CollectionStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CompressionTypeEnum">
            <summary>
            Compression type.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Gzip">
            <summary>
            Gzip.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Deflate">
            <summary>
            Deflate.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Adaptive">
            <summary>
            Adaptive.
            </summary>
        </member>
        <member name="T:View.Sdk.Configuration.ViewConfigurationSdk">
            <summary>
            View Configuration SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateNode(View.Sdk.Node,System.Threading.CancellationToken)">
            <summary>
            Create a node.
            </summary>
            <param name="node">Node.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsNode(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a node exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveNode(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a node.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveNodes(System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateNode(View.Sdk.Node,System.Threading.CancellationToken)">
            <summary>
            Update a node.
            </summary>
            <param name="node">Node.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteNode(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a node.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveTenant(System.Threading.CancellationToken)">
            <summary>
            Read a tenant.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Tenant.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateTenant(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <summary>
            Update a tenant.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="token">Cancellation token.</param>
            <returns>Tenant.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateUser(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <summary>
            Create a user.
            </summary>
            <param name="user">User.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsUser(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a user exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveUser(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveUsers(System.Threading.CancellationToken)">
            <summary>
            Read users.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Users.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateUser(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <summary>
            Update a user.
            </summary>
            <param name="user">User.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteUser(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateCredential(View.Sdk.Credential,System.Threading.CancellationToken)">
            <summary>
            Create a credential.
            </summary>
            <param name="cred">Credential.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsCredential(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a credential exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveCredential(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a credential.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveCredentials(System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateCredential(View.Sdk.Credential,System.Threading.CancellationToken)">
            <summary>
            Update a credential.
            </summary>
            <param name="cred">Credential.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteCredential(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a credential.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreatePool(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Create a pool.
            </summary>
            <param name="pool">Pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsPool(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a pool exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrievePool(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a pool.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrievePools(System.Threading.CancellationToken)">
            <summary>
            Read pools.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Pools.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdatePool(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Update a pool.
            </summary>
            <param name="pool">Pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeletePool(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a pool.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateBucket(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsBucket(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a bucket exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveBucket(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a bucket.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveBuckets(System.Threading.CancellationToken)">
            <summary>
            Read buckets.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Buckets.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateBucket(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Update a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteBucket(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateEncryptionKey(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <summary>
            Create an encryption key.
            </summary>
            <param name="key">Encryption key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsEncryptionKey(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an encryption key exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveEncryptionKey(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an encryption key.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveEncryptionKeys(System.Threading.CancellationToken)">
            <summary>
            Read encryption keys.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Encryption keys.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateEncryptionKey(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <summary>
            Update an encryption key.
            </summary>
            <param name="key">Encryption key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteEncryptionKey(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an encryption key.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateMetadataRule(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <summary>
            Create a metadata rule.
            </summary>
            <param name="rule">Metadata rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsMetadataRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a metadata rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveMetadataRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a metadata rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveMetadataRules(System.Threading.CancellationToken)">
            <summary>
            Read metadata rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateMetadataRule(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <summary>
            Update a metadata rule.
            </summary>
            <param name="rule">Metadata rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteMetadataRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a metadata rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateEmbeddingsRule(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <summary>
            Create a embeddings rule.
            </summary>
            <param name="rule">Embeddings rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsEmbeddingsRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a embeddings rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveEmbeddingsRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a embeddings rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveEmbeddingsRules(System.Threading.CancellationToken)">
            <summary>
            Read embeddings rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateEmbeddingsRule(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <summary>
            Update a embeddings rule.
            </summary>
            <param name="rule">Embeddings rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteEmbeddingsRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a embeddings rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateVectorRepository(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <summary>
            Create a vector repository.
            </summary>
            <param name="repo">Vector repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsVectorRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a vector repository exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveVectorRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a vector repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveVectorRepositories(System.Threading.CancellationToken)">
            <summary>
            Read vector repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Vector repositories.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateVectorRepository(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <summary>
            Update a vector repository.
            </summary>
            <param name="repo">Vector repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteVectorRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a vector repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateGraphRepository(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <summary>
            Create a graph repository.
            </summary>
            <param name="repo">Graph repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsGraphRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a graph repository exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveGraphRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a graph repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveGraphRepositories(System.Threading.CancellationToken)">
            <summary>
            Read graph repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Graph repositories.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateGraphRepository(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <summary>
            Update a graph repository.
            </summary>
            <param name="repo">graph repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteGraphRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a graph repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveCollections(System.Threading.CancellationToken)">
            <summary>
            Retrieve collections.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveCollection(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a collection.
            </summary>
            <param name="collectionGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveCollectionStatistics(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve collection statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection statistics.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateCollection(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Create collection.
            </summary>
            <param name="collection">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteCollection(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveDataRepositories(System.Threading.CancellationToken)">
            <summary>
            Retrieve data repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of data repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveDataRepository(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a data repository.
            </summary>
            <param name="repositoryGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Data repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateDataRepository(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Create data repository.
            </summary>
            <param name="repository">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Data repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteDataRepository(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data repository.
            </summary>
            <param name="repositoryGuid">Data repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsWebhookEvent(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook event exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookEvent(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook event.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookEvents(System.Threading.CancellationToken)">
            <summary>
            Read webhook events.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook events.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateWebhookRule(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <summary>
            Create a webhook rule.
            </summary>
            <param name="rule">Webhook rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsWebhookRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookRules(System.Threading.CancellationToken)">
            <summary>
            Read webhook rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateWebhookRule(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <summary>
            Update a webhook rule.
            </summary>
            <param name="rule">Webhook rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteWebhookRule(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a webhook rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateWebhookTarget(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <summary>
            Create a webhook target.
            </summary>
            <param name="target">Webhook target.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsWebhookTarget(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook target exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookTarget(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook target.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveWebhookTargets(System.Threading.CancellationToken)">
            <summary>
            Read webhook targets.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook targets.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateWebhookTarget(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <summary>
            Update a webhook target.
            </summary>
            <param name="target">Webhook target.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteWebhookTarget(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a webhook target.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.CreateObjectLock(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <summary>
            Create an object lock.
            </summary>
            <param name="endpoint">Object lock.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.ExistsObjectLock(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an object lock exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveObjectLock(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an object lock.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.RetrieveObjectLocks(System.Threading.CancellationToken)">
            <summary>
            Read Object locks.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Object locks.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.UpdateObjectLock(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <summary>
            Update an object lock.
            </summary>
            <param name="endpoint">Object lock.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.DeleteObjectLock(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an object lock.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.CrawlFilter">
            <summary>
            Crawl filter.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.MinimumSize">
            <summary>
            Minimum size.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.MaximumSize">
            <summary>
            Maximum size.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.IncludeSubdirectories">
            <summary>
            Include or exclude subdirectories.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlOperation">
            <summary>
            Crawl operation, i.e. an execution of a crawl plan.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlPlanGUID">
            <summary>
            Crawl plan GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlScheduleGUID">
            <summary>
            Crawl schedule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlFilterGUID">
            <summary>
            Crawl filter GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CleanupEndpoint">
            <summary>
            Data flow endpoint for cleanup.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsEnumerated">
            <summary>
            Number of objects enumerated.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesEnumerated">
            <summary>
            Number of bytes enumerated.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsAdded">
            <summary>
            Number of objects added since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesAdded">
            <summary>
            Number of bytes added since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsUpdated">
            <summary>
            Number of objects updated since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesUpdated">
            <summary>
            Number of bytes updated since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsDeleted">
            <summary>
            Number of objects deleted since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesDeleted">
            <summary>
            Number of bytes deleted since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.EnumerationFile">
            <summary>
            Enumeration file.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsSuccess">
            <summary>
            Number of objects successfully written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesSuccess">
            <summary>
            Number of bytes successfully written
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsFailed">
            <summary>
            Number of objects unable to be written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesFailed">
            <summary>
            Number of bytes unable to be written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.State">
            <summary>
            Crawl state.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartUtc">
            <summary>
            Started.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartEnumerationUtc">
            <summary>
            Start of enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartRetrievalUtc">
            <summary>
            Start of retrieval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishEnumerationUtc">
            <summary>
            Finished enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishRetrievalUtc">
            <summary>
            Finished retrieval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishUtc">
            <summary>
            Finished.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlOperation.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlPlan">
            <summary>
            Crawl plan, i.e. the top-level scheduled task with links to repository, schedule, and filter.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CrawlScheduleGUID">
            <summary>
            Crawl schedule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CrawlFilterGUID">
            <summary>
            Crawl filter GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EnumerationDirectory">
            <summary>
            Directory where enumerations are stored.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EnumerationsToRetain">
            <summary>
            Number of enumerations to retain.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.MaxDrainTasks">
            <summary>
            Maximum number of tasks to use while writing data to View.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessAdditions">
            <summary>
            Boolean flag indicating whether or not new files should be uploaded to the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessDeletions">
            <summary>
            Boolean flag indicating whether or not deleted files should be deleted on the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessUpdates">
            <summary>
            Boolean flag indicating whether or not updated files should be uploaded to the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlPlan.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlSchedule">
            <summary>
            Crawl schedule.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Schedule">
            <summary>
            Schedule interval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Interval">
            <summary>
            Interval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlSchedule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlStateEnum">
            <summary>
            Crawler state.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.NotStarted">
            <summary>
            Not started.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Starting">
            <summary>
            Starting.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Stopped">
            <summary>
            Stopped.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Canceled">
            <summary>
            Canceled.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Enumerating">
            <summary>
            Enumerating.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Retrieving">
            <summary>
            Retrieving.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Deleting">
            <summary>
            Deleting.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Failed">
            <summary>
            Failed.
            </summary>
        </member>
        <member name="T:View.Sdk.Credential">
            <summary>
            Credentials.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.SecretKey">
            <summary>
            Secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Credential.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Credential.Redact(View.Sdk.Serialization.Serializer,View.Sdk.Credential)">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="cred">Credential.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Credential.Redact(View.Sdk.Serialization.Serializer,System.Collections.Generic.List{View.Sdk.Credential})">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="creds">Credentials.</param>
            <returns>List.</returns>
        </member>
        <member name="T:View.Sdk.DataCatalogTypeEnum">
            <summary>
            Data catalog type.
            </summary>
        </member>
        <member name="F:View.Sdk.DataCatalogTypeEnum.Lexi">
            <summary>
            Lexi.
            </summary>
        </member>
        <member name="T:View.Sdk.DataFlow">
            <summary>
            Data flow, i.e. a collection of steps and paths.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.TriggerGUID">
            <summary>
            Trigger GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.StepGUID">
            <summary>
            Step GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.LogRetentionDays">
            <summary>
            Number of days to retain log entries and logfiles.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlow.Step">
            <summary>
            Entry step.
            </summary>
        </member>
        <member name="M:View.Sdk.DataFlow.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DataFlowLog">
            <summary>
            Data flow log.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.DataFlowGUID">
            <summary>
            Data flow GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.RequestGUID">
            <summary>
            Request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.TriggerGUID">
            <summary>
            Trigger GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.StepGUID">
            <summary>
            Step GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.StartUtc">
            <summary>
            Start time, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.EndUtc">
            <summary>
            End time, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.TotalMs">
            <summary>
            Run time, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.Result">
            <summary>
            Result, e.g. Success, Failure, Exception.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.NextStepGUID">
            <summary>
            GUID of the next step, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.LogExpirationUtc">
            <summary>
            Timestamp when logs will expire, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.DataFlowLog.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.DataFlowLog.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DataNode">
            <summary>
            A node of data from a parsed document.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Type">
            <summary>
            The DataType associated with the key-value pair.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Data">
            <summary>
            The data associated with the key.
            </summary>
        </member>
        <member name="M:View.Sdk.DataNode.#ctor">
            <summary>
            Instantiates the DataNode.
            </summary>
        </member>
        <member name="M:View.Sdk.DataNode.#ctor(System.String,System.Object,View.Sdk.DataTypeEnum)">
            <summary>
            Instantiates the DataNode.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data associated with the key.</param>
            <param name="type">The DataType associated with the key-value pair.</param>
        </member>
        <member name="M:View.Sdk.DataNode.TypeFromValue(System.Object)">
            <summary>
            Retrieve the DataType of the supplied value.
            </summary>
            <param name="val">The object to evaluate.</param>
            <returns>DataType.</returns>
        </member>
        <member name="T:View.Sdk.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.RepositoryType">
            <summary>
            Repository type.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.UseSsl">
            <summary>
            Boolean flag to enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.IncludeSubdirectories">
            <summary>
            Boolean to indicate whether or not subdirectories should be included.
            Only applicable to CIFS and NFS crawlers.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.DiskDirectory">
            <summary>
            Disk directory.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3EndpointUrl">
            <summary>
            S3 endpoint URL, e.g. http://localhost:8000/
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3BaseUrl">
            <summary>
            S3 base URL.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3AccessKey">
            <summary>
            S3 access key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3SecretKey">
            <summary>
            S3 secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3BucketName">
            <summary>
            Bucket name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3Region">
            <summary>
            S3 region.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureEndpointUrl">
            <summary>
            Azure endpoint URL, e.g. http://localhost:8000/
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureAccountName">
            <summary>
            Azure account name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureContainerName">
            <summary>
            Azure container name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureAccessKey">
            <summary>
            Azure access key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsHostname">
            <summary>
            CIFS hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsUsername">
            <summary>
            CIFS username.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsPassword">
            <summary>
            CIFS password.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsShareName">
            <summary>
            CIFS share name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsHostname">
            <summary>
            NFS hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsUserId">
            <summary>
            NFS user ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsGroupId">
            <summary>
            NFS group ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsShareName">
            <summary>
            NFS share name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsVersion">
            <summary>
            NFS version.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebAuthentication">
            <summary>
            Web authentication type.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebUsername">
            <summary>
            Username for web basic authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebPassword">
            <summary>
            Password for web basic authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebApiKeyHeader">
            <summary>
            Header to use for attaching an API key to the web request.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebApiKey">
            <summary>
            Web API key to attach.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebBearerToken">
            <summary>
            Bearer token to use in the authorization header.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebUserAgent">
            <summary>
            User agent to use while crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebStartUrl">
            <summary>
            Starting URL for web crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebFollowLinks">
            <summary>
            Boolean indicating whether or not links should be followed.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebFollowRedirects">
            <summary>
            Boolean indicating whether or not redirects should be followed.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebIncludeSitemap">
            <summary>
            Boolean indicating whether or not the sitemap contents should be included as links.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebRestrictToChildUrls">
            <summary>
            Boolean indicating whether or not crawling should only consider child links.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebRestrictToSameDomain">
            <summary>
            Boolean indicating whether or not crawling should consider links within the same domain.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebMaxDepth">
            <summary>
            Maximum depth to crawl.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebMaxParallelTasks">
            <summary>
            Maximum number of parallel tasks to use while web crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebCrawlDelayMs">
            <summary>
            Delay in milliseconds to introduce between crawl operations within the same task.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.DataRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DataRepositoryTypeEnum">
            <summary>
            Data repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.CIFS">
            <summary>
            CIFS.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.NFS">
            <summary>
            NFS.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.AmazonS3">
            <summary>
            Amazon S3.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.AzureBlob">
            <summary>
            Azure BLOB.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Web">
            <summary>
            Web.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Printer">
            <summary>
            Printer.
            </summary>
        </member>
        <member name="T:View.Sdk.DataTypeEnum">
            <summary>
            Types of data supported.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Array">
            <summary>
            Array.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Integer">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Long">
            <summary>
            Long.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Decimal">
            <summary>
            Decimal.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Float">
            <summary>
            Float.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Null">
            <summary>
            Null.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:View.Sdk.DocumentScore">
            <summary>
            Document score.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.Score">
            <summary>
            The score of the document, between 0 and 1, over both terms and filters.  Only relevant when optional terms or filters are supplied in the search.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.TermsScore">
            <summary>
            The terms score of the document, between 0 and 1, when optional terms are supplied.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.FiltersScore">
            <summary>
            The filters score of the document, between 0 and 1, when optional filters are supplied.
            </summary>
        </member>
        <member name="M:View.Sdk.DocumentScore.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DocumentTypeEnum">
            <summary>
            Data type associated with an input object or file.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Csv">
            <summary>
            CSV.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.DataTable">
            <summary>
            DataTable.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Docx">
            <summary>
            DOCX, Word document.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Html">
            <summary>
            HTML.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Json">
            <summary>
            JSON.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Keynote">
            <summary>
            Keynote.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Markdown">
            <summary>
            Markdown.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Numbers">
            <summary>
            Numbers.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pages">
            <summary>
            Pages.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Parquet">
            <summary>
            Parquet.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pdf">
            <summary>
            PDF.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Png">
            <summary>
            PNG.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.PostScript">
            <summary>
            PostScript.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pptx">
            <summary>
            PPTX, PowerPoint presentation.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Sqlite">
            <summary>
            Sqlite database file.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Xlsx">
            <summary>
            XLSX, Excel spreadsheet.
            </summary> 
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Xml">
            <summary>
            XML.
            </summary>
        </member>
        <member name="T:View.Sdk.EmbeddingsGeneratorEnum">
            <summary>
            Embeddings provider.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.OpenAI">
            <summary>
            OpenAI.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.LCProxy">
            <summary>
            Langchain proxy.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.Ollama">
            <summary>
            Ollama.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.VoyageAI">
            <summary>
            VoyageAI.
            </summary>
        </member>
        <member name="T:View.Sdk.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ProcessingAccessKey">
            <summary>
            Access key for processing endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsServerUrl">
            <summary>
            Embeddings server URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsServerApiKey">
            <summary>
            Embeddings server API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGenerator">
            <summary>
            Embeddings generator.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGeneratorUrl">
            <summary>
            Embeddings generator URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGeneratorApiKey">
            <summary>
            Embeddings provider API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.BatchSize">
            <summary>
            Maximum number of chunks to process per request.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxGeneratorTasks">
            <summary>
            Maximum number of parallel embeddings generation tasks.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxRetries">
            <summary>
            Maximum number of retries to perform on any given task.  Default is 3.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxFailures">
            <summary>
            Maximum number of failures to support before failing the operation.  Default is 3.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorStoreUrl">
            <summary>
            Vector store URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorStoreAccessKey">
            <summary>
            Vector store access key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxContentLength">
            <summary>
            Maximum content length.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.RetentionMinutes">
            <summary>
            The number of minutes to retain the generated document.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.EmbeddingsRule.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.ContentEmbedding">
            <summary>
            Content embedding.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ContentEmbedding.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ContentEmbedding.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ContentEmbedding.#ctor">
            <summary>
            Content embedding.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.EmbeddingsDocument">
            <summary>
            Embeddings document.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Exception">
            <summary>
            Exception, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.DocumentGUID">
            <summary>
            Document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Score">
            <summary>
            Score.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Distance">
            <summary>
            Distance.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CreatedUtc">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>EmbeddingsDocument.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of EmbeddingsDocument.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.EmbeddingsRequest">
            <summary>
            Embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsRequest.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsRequest.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsRequest.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.EmbeddingsResult">
            <summary>
            Embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.Error">
            <summary>
            Error response.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.BatchCount">
            <summary>
            The number of batches processed.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsResult.ContentEmbeddings">
            <summary>
            Content embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsObject">
            <summary>
            Find embeddings object.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsObject.SHA256Hash">
            <summary>
            SHA256 on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsObject.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>FindEmbeddingsObject.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of FindEmbeddingsObject.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsRequest">
            <summary>
            Find embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.Criteria">
            <summary>
            List of embeddings parameters on which to match.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsResult">
            <summary>
            Find embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Existing">
            <summary>
            List of found embeddings records.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Missing">
            <summary>
            List of missing embeddings records.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.ModelInformation">
            <summary>
            Model information.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.Size">
            <summary>
            Size.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.MD5Hash">
            <summary>
            MD5 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.SHA1Hash">
            <summary>
            SHA1 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.SHA256Hash">
            <summary>
            SHA256 hash.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ModelInformation.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ModelInformation.FromOllamaResponse(View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult)">
            <summary>
            Instantiate from Ollama model response.
            </summary>
            <param name="resp">Response.</param>
            <returns>List of model information.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase">
            <summary>
            View embeddings generator SDK base class.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Generator">
            <summary>
            Embeddings generator.  Default is LCProxy.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.BaseUrl">
            <summary>
            Base URL.  Default is http://localhost:8000/.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.#ctor(System.Guid,View.Sdk.EmbeddingsGeneratorEnum,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="generator">Embeddings generator.</param>
            <param name="endpoint">Endpoint URL.</param>
            <param name="apiKey">API key.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Log(View.Sdk.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="timeoutMs">Timeout in milliseconds.</param>
            <param name="token">Cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest">
            <summary>
            Langchain embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.ApiKey">
            <summary>
            API key for Huggingface.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.EmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Langchain embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult">
            <summary>
            Lcproxy embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Embeddings">
            <summary>
            List of embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.EmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainSdk">
            <summary>
            View Langchain SDK.  This SDK interacts directly with the underlying View Embeddings microservice that acts as a Langchain proxy.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest">
            <summary>
            Ollama embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.EmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Ollama embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult">
            <summary>
            Ollama embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.Embeddings">
            <summary>
            List of embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.EmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult">
            <summary>
            Ollama model result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.Models">
            <summary>
            List of model details.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail">
            <summary>
            Ollama model detail.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Size">
            <summary>
            Size.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Digest">
            <summary>
            Digest.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Details">
            <summary>
            Details.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaSdk">
            <summary>
            View Ollama SDK.  This SDK interacts directly with an underlying Ollama microservice.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings">
            <summary>
            OpenAI embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest">
            <summary>
            OpenAI embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.EmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>OpenAI embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult">
            <summary>
            OpenAI embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.EmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiSdk">
            <summary>
            OpenAI SDK.  This SDK interacts directly with the OpenAI API for generating embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiSdk">
            <summary>
            VoyageAI SDK.  This SDK interacts directly with the VoyageAI API for generating embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings">
            <summary>
            VoyageAI embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest">
            <summary>
            VoyageAI embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.EmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Voyage AI embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult">
            <summary>
            VoyageAI embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.EmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.ViewEmbeddingsSdk">
            <summary>
            View embeddings generator SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.Generator">
            <summary>
            Embeddings generator.  Default is LCProxy.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.BaseUrl">
            <summary>
            Base URL.  Default is http://localhost:8000/.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.BatchSize">
            <summary>
            Maximum number of chunks to include in an individual processing batch.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxParallelTasks">
            <summary>
            Maximum number of batches to process in parallel.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxRetries">
            <summary>
            Maximum number of retries to perform on any given batch.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxFailures">
            <summary>
            Maximum number of failed batches before failing the operation.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.TimeoutMs">
            <summary>
            Timeout in milliseconds for each batch.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.#ctor(System.Guid,View.Sdk.EmbeddingsGeneratorEnum,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="generator">Embeddings generator type.</param>
            <param name="baseUrl">Base URL, i.e. http://localhost:8000/.  Do not include URL paths, only protocol, hostname, and port.</param>
            <param name="apiKey">API key.</param>
            <param name="batchSize">Batch size, that is, the maximum number of distinct content entries to process at once..</param>
            <param name="maxParallelTasks">Maximum number of parallel tasks, that is, the maximum number of parallel batches to process concurrently.</param>
            <param name="maxRetries">Maximum number of retries to perform on any given batch before failing.</param>
            <param name="maxFailures">Maximum number of failures to support before failing an entire operation.</param>
            <param name="timeoutMs">Timeout for each operation, in milliseconds.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings response.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.ViewEmbeddingsServerSdk">
            <summary>
            View embeddings server SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            View embeddings server SDK.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="endpoint">Base URL, i.e. http://localhost:8000/.  Do not include URL paths, only protocol, hostname, and port.</param>
            <param name="accessKey">API key.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.GenerateEmbeddings(View.Sdk.Embeddings.EmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings response.</returns>
        </member>
        <member name="T:View.Sdk.EncryptionKey">
            <summary>
            Encryption key.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.KeyBase64">
            <summary>
            Key in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.KeyHex">
            <summary>
            Key in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.IvBase64">
            <summary>
            Initialization vector in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.IvHex">
            <summary>
            Initialization vector in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.SaltBase64">
            <summary>
            Salt in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.SaltHex">
            <summary>
            Salt in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Iv">
            <summary>
            IV.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Salt">
            <summary>
            Salt.
            </summary>
        </member>
        <member name="M:View.Sdk.EncryptionKey.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EncryptionTypeEnum">
            <summary>
            Encryption type.
            </summary>
        </member>
        <member name="F:View.Sdk.EncryptionTypeEnum.None">
            <summary>
            No encryption.
            </summary>
        </member>
        <member name="F:View.Sdk.EncryptionTypeEnum.Local">
            <summary>
            Local encryption.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationOrderEnum">
            <summary>
            Enumeration order.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.CreatedAscending">
            <summary>
            CreatedAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.CreatedDescending">
            <summary>
            CreatedDescending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.LastAccessAscending">
            <summary>
            LastAccessAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.LastAccessDescending">
            <summary>
            LastAccessDescending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.KeyAscending">
            <summary>
            KeyAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.KeyDescending">
            <summary>
            KeyDescending.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationQuery">
            <summary>
            Object used to enumerate a table.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Skip">
            <summary>
            The number of records to skip.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.IncludeData">
            <summary>
            Include subordinates, for instance, semantic cells and chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.IncludeOwners">
            <summary>
            Include owners.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Filters">
            <summary>
            Search filters to apply to enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Ordering">
            <summary>
            Order by.
            </summary>
        </member>
        <member name="M:View.Sdk.EnumerationQuery.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationResult`1">
            <summary>
            Object returned as the result of an enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Success">
            <summary>
            Indicates if the statistics operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.IterationsRequired">
            <summary>
            Iterations required.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.TotalRecords">
            <summary>
            Total number of records.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Objects">
            <summary>
            Objects.
            </summary>
        </member>
        <member name="M:View.Sdk.EnumerationResult`1.#ctor">
            <summary>
            Instantiates the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Expiration">
            <summary>
            Expiration.
            </summary>
        </member>
        <member name="P:View.Sdk.Expiration.ExpirationUtc">
            <summary>
            Expiration timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Expiration.RetentionMinutes">
            <summary>
            Retention minutes.
            </summary>
        </member>
        <member name="M:View.Sdk.Expiration.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Extensions.StreamExtensions">
            <summary>
            Stream extensions.
            </summary>
        </member>
        <member name="M:View.Sdk.Extensions.StreamExtensions.ToBytes(System.IO.Stream)">
            <summary>
            Convert stream to bytes.
            </summary>
            <param name="stream">Stream.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="T:View.Sdk.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.RepositoryType">
            <summary>
            Type of graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.EndpointUrl">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Ssl">
            <summary>
            Enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.GraphIdentifier">
            <summary>
            Graph identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.GraphRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.GraphRepositoryTypeEnum">
            <summary>
            Graph repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.GraphRepositoryTypeEnum.LiteGraph">
            <summary>
            LiteGraph.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.Graph">
            <summary>
            Graph.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.Graph.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.Graph.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.Graph.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.Graph.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.Graph.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphData">
            <summary>
            Graph data.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.Type">
            <summary>
            Node type.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.Tenant">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.StoragePool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.Bucket">
            <summary>
            Bucket metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.Object">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.SemanticCell">
            <summary>
            Semantic cell.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.SemanticChunk">
            <summary>
            Semantic chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphData.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphData.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphEdge">
            <summary>
            Graph edge.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.GraphGUID">
            <summary>
            Globally-unique identifier for the graph.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.From">
            <summary>
            Globally-unique identifier of the from node.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.FromNode">
            <summary>
            From node.  This property is only populated when retrieving routes.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.To">
            <summary>
            Globally-unique identifier of the to node.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.ToNode">
            <summary>
            To node.  This property is only populated when retrieving routes.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.Cost">
            <summary>
            Cost.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphEdge.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphEdge.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphNode">
            <summary>
            Graph node.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.GraphGUID">
            <summary>
            Globally-unique identifier for the graph.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.Data">
            <summary>
            Object data.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphNode.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphNode.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphNodeTypeEnum">
            <summary>
            Graph node type.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.StoragePool">
            <summary>
            StoragePool.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.SourceDocument">
            <summary>
            SourceDocument.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.VectorRepository">
            <summary>
            VectorRepository.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.SemanticCell">
            <summary>
            SemanticCell.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.SemanticChunk">
            <summary>
            SemanticChunk.
            </summary>
        </member>
        <member name="F:View.Sdk.Graph.GraphNodeTypeEnum.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphResult">
            <summary>
            Graph result.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Success">
            <summary>
            Success or failure.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Graph">
            <summary>
            Graph.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.StoragePool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.SemanticChunks">
            <summary>
            Semantic chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphResult.Edges">
            <summary>
            Edges.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Graph.GraphSdk">
            <summary>
            Graph SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphSdk.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.GraphSdk.TimestampFormat">
            <summary>
            Timestamp format.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.#ctor(View.Sdk.GraphRepository)">
            <summary>
            Instantiate.
            </summary>
            <param name="repo">Graph repository.</param>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity to the graph repository.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.InsertObjectMetadata(View.Sdk.TenantMetadata,View.Sdk.StoragePool,View.Sdk.BucketMetadata,View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Insert object metadata and its associated objects from storage server.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="pool">Storage pool.</param>
            <param name="bucket">Bucket.</param>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.InsertObjectMetadata(View.Sdk.TenantMetadata,View.Sdk.DataRepository,View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Insert object metadata and its associated objects from crawler.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="repo">Data repository.</param>
            <param name="obj">Object metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.InsertSourceDocument(View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Insert source document and its associated objects.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="collection">Collection.</param>
            <param name="sourceDoc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.RemoveObjectMetadata(View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Remove object metadata and its associated objects.
            </summary>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.RemoveSourceDocument(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Remove source document and its associated objects.
            </summary>
            <param name="doc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph result.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.StoragePoolExists(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Check if a storage pool exists.
            </summary>
            <param name="pool">Storage pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.BucketExists(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Check if a bucket exists.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ObjectMetadataExists(View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Check if an object exists.
            </summary>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CollectionExists(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Check if a collection exists.
            </summary>
            <param name="coll">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SourceDocumentExists(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Check if a source document exists.
            </summary>
            <param name="doc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SemanticCellExists(System.Guid,View.Sdk.Semantic.SemanticCell,System.Threading.CancellationToken)">
            <summary>
            Check if a semantic cell exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="cell">Semantic cell.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SemanticChunkExists(System.Guid,View.Sdk.Semantic.SemanticChunk,System.Threading.CancellationToken)">
            <summary>
            Check if a semantic chunk exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="chunk">Semantic chunk.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DataRepositoryExists(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Check if a data repository exists.
            </summary>
            <param name="repo">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.StoragePoolExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a storage pool exists by GUID.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.BucketExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a bucket exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ObjectMetadataExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an object exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CollectionExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a collection exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SourceDocumentExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a source document exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SemanticCellExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a semantic cell exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.SemanticChunkExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a semantic chunk exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DataRepositoryExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a data repository exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateGraph(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="name">Name.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateTenant(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a tenant.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateStoragePool(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Create a storage pool.
            </summary>
            <param name="pool">Storage pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateBucket(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateObjectMetadata(View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Create an object.
            </summary>
            <param name="obj">Object metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateCollection(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Create a collection.
            </summary>
            <param name="coll">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateSourceDocument(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Create a source document.
            </summary>
            <param name="doc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateSemanticCell(System.Guid,View.Sdk.Semantic.SemanticCell,System.Threading.CancellationToken)">
            <summary>
            Create a semantic cell.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="cell">Semantic cell.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateSemanticChunk(System.Guid,View.Sdk.Semantic.SemanticChunk,System.Threading.CancellationToken)">
            <summary>
            Create a semantic chunk.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="chunk">Semantic chunk.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.CreateDataRepository(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Create a data repository.
            </summary>
            <param name="repo">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadGraph(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read graph metadata.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph metadata.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadTenant(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <summary>
            Read a tenant graph node.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadStoragePool(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Read a storage pool graph node.
            </summary>
            <param name="pool">Storage pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadBucket(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Read a bucket graph node.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadObjectMetadata(View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Read an object node.
            </summary>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadCollection(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Read a collection node.
            </summary>
            <param name="coll">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSourceDocument(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Read a source document node.
            </summary>
            <param name="doc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticCell(System.Guid,View.Sdk.Semantic.SemanticCell,System.Threading.CancellationToken)">
            <summary>
            Read a semantic cell node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="cell">Semantic cell.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticChunk(System.Guid,View.Sdk.Semantic.SemanticChunk,System.Threading.CancellationToken)">
            <summary>
            Read a semantic chunk node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="chunk">Semantic chunk.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadDataRepository(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Read a data repository node.
            </summary>
            <param name="repo">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadTenant(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a tenant graph node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadStoragePool(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a storage pool graph node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadBucket(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a bucket graph node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadObjectMetadata(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an object node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadCollection(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a collection node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSourceDocument(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a source document node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticCell(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a semantic cell node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticChunk(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a semantic chunk node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadDataRepository(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a data repository node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadStoragePools(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read storage pools.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadBuckets(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read buckets.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadObjectMetadata(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read objects.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadCollections(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read collections.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSourceDocuments(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read source documents.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticCells(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read semantic cells.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadSemanticChunks(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read semantic chunks.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.ReadDataRepositories(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Read data repositories.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="filter">Filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteStoragePool(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Delete a storage pool.
            </summary>
            <param name="pool">Storage pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteBucket(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteObjectMetadata(View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteCollection(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Delete a collection.
            </summary>
            <param name="coll">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSourceDocument(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Delete a source document.
            </summary>
            <param name="doc">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSemanticCell(System.Guid,View.Sdk.Semantic.SemanticCell,System.Threading.CancellationToken)">
            <summary>
            Delete a semantic cell.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="cell">Semantic cell.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSemanticChunk(System.Guid,View.Sdk.Semantic.SemanticChunk,System.Threading.CancellationToken)">
            <summary>
            Delete a semantic chunk.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="chunk">Semantic chunk.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteDataRepository(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Delete a data repository.
            </summary>
            <param name="repo">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteStoragePool(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a storage pool.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteBucket(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteObjectMetadata(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteCollection(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a collection.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSourceDocument(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a source document.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSemanticCell(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a semantic cell.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteSemanticChunk(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a semantic chunk.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.DeleteDataRepository(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a data repository.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.GetEdgesTo(View.Sdk.Graph.GraphNode,System.Threading.CancellationToken)">
            <summary>
            Get edges to a given graph node.
            </summary>
            <param name="node">Graph node.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.GraphSdk.GetEdgesFrom(View.Sdk.Graph.GraphNode,System.Threading.CancellationToken)">
            <summary>
            Get edges from a given graph node.
            </summary>
            <param name="node">Graph node.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of graph edges.</returns>
        </member>
        <member name="T:View.Sdk.Graph.IGraphDriver">
            <summary>
            Graph database driver interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity to the repository.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.GraphExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a graph exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.CreateGraph(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="name">Name.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadGraph(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadGraphs(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.UpdateGraph(System.Guid,View.Sdk.Graph.Graph,System.Threading.CancellationToken)">
            <summary>
            Update a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graph">Graph.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.DeleteGraph(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a graph.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="guid">GUID.</param>
            <param name="force">Force deletion of subordinate edges and nodes.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.NodeExists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a node exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.CreateNode(System.Guid,View.Sdk.Graph.GraphNode,System.Threading.CancellationToken)">
            <summary>
            Create a node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="node">Node.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadNodes(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.SearchNodes(System.Guid,System.Guid,ExpressionTree.Expr,System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="expr">Expression.</param>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.DeleteNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.EdgeExists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an edge exists.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.CreateEdge(System.Guid,View.Sdk.Graph.GraphEdge,System.Threading.CancellationToken)">
            <summary>
            Create an edge.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="edge">Edge.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edge.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadEdge(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an edge.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="edgeGuid">Edge GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edge.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.ReadEdges(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read edges.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.DeleteEdge(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an edge.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="edgeGuid">Edge GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.EdgesFromNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve edges from node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.EdgesToNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve edges to node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.EdgesBetweenNodes(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve edges to node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="fromNodeGuid">From node GUID.</param>
            <param name="toNodeGuid">To node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.AllNodeEdges(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve all edges associated with a node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Edges.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.GetNodeParents(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve parent nodes for a given node, i.e. those nodes that have edges to the given node.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.GetNodeChildren(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve child nodes for a given node, i.e. those nodes to which the given node has edges.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Graph.IGraphDriver.GetNodeNeighbors(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve neighboring nodes, i.e. those nodes to which the given node has an edge either to or from.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="graphGuid">Graph GUID.</param>
            <param name="nodeGuid">Node GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="T:View.Sdk.Graph.LiteGraphDriver">
            <summary>
            LiteGraph driver.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.LiteGraphDriver.Endpoint">
            <summary>
            Endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.Graph.LiteGraphDriver.TimeoutMs">
            <summary>
            Timeout, in milliseconds.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="accessKey">Access key.</param>
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.GraphExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.CreateGraph(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadGraph(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadGraphs(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.UpdateGraph(System.Guid,View.Sdk.Graph.Graph,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.DeleteGraph(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.NodeExists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.CreateNode(System.Guid,View.Sdk.Graph.GraphNode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadNodes(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.SearchNodes(System.Guid,System.Guid,ExpressionTree.Expr,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.DeleteNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.EdgeExists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.CreateEdge(System.Guid,View.Sdk.Graph.GraphEdge,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadEdge(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.ReadEdges(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.DeleteEdge(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.EdgesFromNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.EdgesToNode(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.EdgesBetweenNodes(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.AllNodeEdges(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.GetNodeParents(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.GetNodeChildren(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Graph.LiteGraphDriver.GetNodeNeighbors(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Helpers.DataTableHelper">
            <summary>
            Data table helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetBooleanValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve Boolean value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableBooleanValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable Boolean value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName">Name of the column.</param>
            <returns>Boolean value if valid, null if unknown or invalid.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetStringValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve string value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>String.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetInt32Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve integer value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableInt32Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable integer value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetInt64Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve long value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Long.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableInt64Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable integer value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetGuidValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve GUID value.  Returns the default GUID if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>GUID.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableGuidValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable GUID value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>GUID.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetEnumValue``1(System.Data.DataRow,System.String)">
            <summary>
            Retrieve enum value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Enum.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetDateTimeValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve DateTime value.  Returns the default DateTime if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableDateTimeValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable DateTime value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Nullable DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetDecimalValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve decimal value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Decimal.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableDecimalValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable decimal value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Nullable decimal.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableBinaryValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve binary value or null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Byte array or null.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToListDynamic(System.Data.DataTable)">
            <summary>
            Convert a data table to a dynamic list.
            </summary>
            <param name="dt">Data table.</param>
            <returns>List of dynamic.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToDynamic(System.Data.DataTable)">
            <summary>
            Convert a data table to a dynamic.
            </summary>
            <param name="dt">Data table.</param>
            <returns>Dynamic.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToListDictionary(System.Data.DataTable)">
            <summary>
            Convert a data table to a list of dictionaries.
            </summary>
            <param name="dt">Data table.</param>
            <returns>List of dictionaries.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToDictionary(System.Data.DataTable)">
            <summary>
            Convert a data table to a dictionary.
            </summary>
            <param name="dt">Data table.</param>
            <returns>Dictionary.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.ObjectToDictionary(System.Object)">
            <summary>
            Convert an object to a dictionary.
            </summary>
            <param name="obj">Object.</param>
            <returns>Dictionary.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.IsDictionary(System.Object)">
            <summary>
            Check if an object is a dictionary.
            </summary>
            <param name="obj">Object.</param>
            <returns>True if dictionary.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.DirectoryHelper">
            <summary>
            Directory helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.NormalizeDirectory(System.String)">
            <summary>
            Normalize directory path.
            </summary>
            <param name="directory">Directory.</param>
            <returns>Normalized directory.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.RecursiveDelete(System.String,System.Boolean)">
            <summary>
            Recursively delete a directory.
            </summary>
            <param name="baseDir">Base directory.</param>
            <param name="deleteRootDirectory">True to delete the root directory.</param>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.RecursiveDelete(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Recursively delete a directory.
            </summary>
            <param name="baseDir">Base directory.</param>
            <param name="deleteRootDirectory">True to delete the root directory.</param>
        </member>
        <member name="T:View.Sdk.Helpers.HashHelper">
            <summary>
            Hash methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.Byte[])">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="data">Data.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.IO.Stream)">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.Byte[])">
            <summary>
            Generate a SHA1 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.IO.Stream)">
            <summary>
            Generate a SHA1 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.Byte[])">
            <summary>
            Generate a SHA256 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.IO.Stream)">
            <summary>
            Generate a SHA256 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.StreamHelper">
            <summary>
            Stream helpers.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.StreamHelper.ReadFully(System.IO.Stream)">
            <summary>
            Read a stream fully.
            </summary>
            <param name="stream">Stream.</param>
            <returns>Bytes.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.TimeHelper">
            <summary>
            Time helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.TimeHelper.TotalMsBetween(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Determine the total number of milliseconds between a start and end time.
            </summary>
            <param name="start">Start time.</param>
            <param name="end">End time.</param>
            <param name="decimalPlaces">Number of decimal places.</param>
            <returns>Milliseconds.</returns>
        </member>
        <member name="T:View.Sdk.HttpMethodEnum">
            <summary>
            HTTP method enum.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.UNKNOWN">
            <summary>
            UNKNOWN.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.GET">
            <summary>
            GET.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.PUT">
            <summary>
            PUT.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.POST">
            <summary>
            POST.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.DELETE">
            <summary>
            DELETE.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.PATCH">
            <summary>
            PATCH.
            </summary>
        </member>
        <member name="T:View.Sdk.IngestionQueueEntry">
            <summary>
            Ingestion queue entry.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ObjectKey">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ObjectVersion">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.Message">
            <summary>
            Processing message.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.StartUtc">
            <summary>
            Start timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SuccessUtc">
            <summary>
            Success timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.FailureUtc">
            <summary>
            Failure timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TotalMs">
            <summary>
            Total runtime of ingestion, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TermProcessingMs">
            <summary>
            Total runtime of term processing, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SchemaProcessingMs">
            <summary>
            Total runtime of schema processing, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.IngestionQueueEntry.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.IngestQueueStatistics">
            <summary>
            Ingest queue statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestQueueStatistics.DocumentCount">
            <summary>
            Number of source documents.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestQueueStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.IngestQueueStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.IworkFileTypeEnum">
            <summary>
            Apple iWork file type enum.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Keynote">
            <summary>
            Keynote.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Numbers">
            <summary>
            Numbers.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Pages">
            <summary>
            Pages.
            </summary>
        </member>
        <member name="T:View.Sdk.Lexi.ViewLexiSdk">
            <summary>
            View Lexi search SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveCollections(System.Threading.CancellationToken)">
            <summary>
            Retrieve collections.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveCollection(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a collection.
            </summary>
            <param name="collectionGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveCollectionStatistics(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve collection statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection statistics.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.CreateCollection(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Create collection.
            </summary>
            <param name="collection">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.DeleteCollection(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveDocuments(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve documents.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of source documents.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveDocument(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="includeData">Flag to indiate whether or not source document data should be included.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveDocumentStatistics(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve document statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document statistics.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.UploadDocument(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Upload a document.
            </summary>
            <param name="document">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.DeleteDocument(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.DeleteDocument(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="key">Document key.</param>
            <param name="version">Document version.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.ExistsIngestQueueEntry(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an ingest queue entry exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveIngestQueueEntry(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an ingest queue entry.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Ingest queue entry.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.RetrieveIngestQueueEntries(System.Threading.CancellationToken)">
            <summary>
            Read users.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Ingest queue entries.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.DeleteIngestQueueEntry(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an ingest queue entry.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.Enumerate(System.Guid,View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <summary>
            Enumerate a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.Search(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token"></param>
            <returns>Search result.</returns>
        </member>
        <member name="T:View.Sdk.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ProcessingAccessKey">
            <summary>
            Access key for processing endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CleanupEndpoint">
            <summary>
            Data flow endpoint for cleanup processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CleanupAccessKey">
            <summary>
            Access key for cleanup endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.MinChunkContentLength">
            <summary>
            Minimum chunk content length.  Minimum is 1.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.  Minimum is 256 and maximum is 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.MaxTokensPerChunk">
            <summary>
            Maximum number of tokens per chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ShiftSize">
            <summary>
            Shift size, used to determine overlap amongst neighboring chunks.
            When set to the same value as the maximum chunk content length, no overlap will exist amongst neighboring chunks.
            When set to a smaller amount than the maximum chunk content length, overlap will exist amongst neighboring chunks.
            This value must be equal to or less than the maximum chunk content length.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ImageTextExtraction">
            <summary>
            Boolean indicating whether or not text should be extracted from images.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.TopTerms">
            <summary>
            Number of top terms to request.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CaseInsensitive">
            <summary>
            Enable or disable case insensitive text processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.IncludeFlattened">
            <summary>
            Enable or disable inclusion of flattened representation of processed content.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogType">
            <summary>
            Data catalog type.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogEndpoint">
            <summary>
            Data catalog endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogAccessKey">
            <summary>
            Data catalog access key.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogCollection">
            <summary>
            Data catalog collection identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.MaxContentLength">
            <summary>
            Maximum content length.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.RetentionMinutes">
            <summary>
            The number of minutes to retain the generated document.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.MetadataRule.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteErrorEnum">
            <summary>
            Multi delete error codes.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.ObjectNotFound">
            <summary>
            ObjectNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.PoolNotFound">
            <summary>
            PoolNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.BucketNotFound">
            <summary>
            BucketNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.InternalError">
            <summary>
            InternalError.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteRequest">
            <summary>
            Multi-delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteRequest.Quiet">
            <summary>
            Enable quiet mode.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteRequest.Objects">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="M:View.Sdk.MultiDeleteRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteResult">
            <summary>
            Multi-delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Request">
            <summary>
            Request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Quiet">
            <summary>
            Enable quiet mode.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Deleted">
            <summary>
            List of deleted objects.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Errors">
            <summary>
            List of error objects.
            </summary>
        </member>
        <member name="M:View.Sdk.MultiDeleteResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Node">
            <summary>
            Node.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.InstanceType">
            <summary>
            Software instance type.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.LastStartUtc">
            <summary>
            Last start timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Node.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ObjectLock">
            <summary>
            Object lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.IsReadLock">
            <summary>
            Boolean indicating if this is a read lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.IsWriteLock">
            <summary>
            Boolean indicating if this is a write lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectLock.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ObjectMetadata">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ParentGUID">
            <summary>
            Parent GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.TenantName">
            <summary>
            Tenant name.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.PoolGUID">
            <summary>
            Pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.BucketName">
            <summary>
            Bucket name.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.EncryptionKeyGUID">
            <summary>
            Encryption key GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataCatalogDocumentGUID">
            <summary>
            Data catalog document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataFlowRequestGUID">
            <summary>
            Data flow request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataFlowSuccess">
            <summary>
            Boolean indicating if the data flow was successful in processing the object.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsLatest">
            <summary>
            Boolean indicating if this is the latest version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsDeleteMarker">
            <summary>
            Boolean indicating if this is a delete marker.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsLocal">
            <summary>
            Boolean indicating if the object is local.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SourceUrl">
            <summary>
            Source URL.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ExpirationUtc">
            <summary>
            Expiration timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.LastAccessUtc">
            <summary>
            Last access timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ObjectStatistics">
            <summary>
            Object statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectStatistics.Objects">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectStatistics.Bytes">
            <summary>
            Number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectStatistics.#ctor(System.Int32,System.Int64)">
            <summary>
            Instantiate.
            </summary>
            <param name="objects">Number of objects.</param>
            <param name="bytes">Number of bytes.</param>
        </member>
        <member name="T:View.Sdk.ObjectWriteModeEnum">
            <summary>
            Specify whether the object key or GUID is used to write to the storage pool as the object identifier.
            </summary>
        </member>
        <member name="F:View.Sdk.ObjectWriteModeEnum.KEY">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="F:View.Sdk.ObjectWriteModeEnum.GUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="T:View.Sdk.Orchestrator.ViewOrchestratorSdk">
            <summary>
            View Orchestrator SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.CreateTrigger(View.Sdk.Trigger,System.Threading.CancellationToken)">
            <summary>
            Create a trigger.
            </summary>
            <param name="trigger">Trigger.</param>
            <param name="token">Cancellation token.</param>
            <returns>Trigger.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.ExistsTrigger(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a trigger exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveTrigger(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a trigger.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Trigger.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveTriggers(System.Threading.CancellationToken)">
            <summary>
            Read triggers.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Triggers.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.UpdateTrigger(View.Sdk.Trigger,System.Threading.CancellationToken)">
            <summary>
            Update a trigger.
            </summary>
            <param name="trigger">Trigger.</param>
            <param name="token">Cancellation token.</param>
            <returns>Trigger.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.DeleteTrigger(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a trigger.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.CreateStep(View.Sdk.StepMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a step.
            </summary>
            <param name="step">Step.</param>
            <param name="token">Cancellation token.</param>
            <returns>Step.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.ExistsStep(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a step exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveStep(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a step.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Step.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveSteps(System.Threading.CancellationToken)">
            <summary>
            Read steps.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Steps.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.DeleteStep(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a step.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.CreateDataFlow(View.Sdk.DataFlow,System.Threading.CancellationToken)">
            <summary>
            Create a data flow.
            </summary>
            <param name="flow">DataFlow.</param>
            <param name="token">Cancellation token.</param>
            <returns>DataFlow.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.ExistsDataFlow(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a data flow exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveDataFlow(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a data flow.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>DataFlow.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveDataFlows(System.Threading.CancellationToken)">
            <summary>
            Read data flows.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>DataFlows.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.DeleteDataFlow(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a data flow.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveDataFlowLogs(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read data flow logs.
            </summary>
            <param name="dataFlowGuid">Data flow GUID.</param>
            <param name="requestGuid">Request GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of DataFlowLog.</returns>
        </member>
        <member name="M:View.Sdk.Orchestrator.ViewOrchestratorSdk.RetrieveDataFlowLogfile(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read data flow logfile.
            </summary>
            <param name="dataFlowGuid">Data flow GUID.</param>
            <param name="requestGuid">Request GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Log file.</returns>
        </member>
        <member name="T:View.Sdk.Posting">
            <summary>
            A posting from a parsed document.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.Term">
            <summary>
            The token.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.Count">
            <summary>
            The frequency with which the token occurs.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.AbsolutePositions">
            <summary>
            The absolute positions in the token list where the token appears.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.RelativePositions">
            <summary>
            The relative positions in the token list where the token appears.
            </summary>
        </member>
        <member name="M:View.Sdk.Posting.#ctor">
            <summary>
            Instantiates the Token.
            </summary>
        </member>
        <member name="M:View.Sdk.Posting.#ctor(System.String)">
            <summary>
            Instantiates the Token.
            </summary>
            <param name="value">The token.</param>
        </member>
        <member name="T:View.Sdk.Processor.AtomizationRequest">
            <summary>
            Atomization request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.AtomizationRequest.#ctor">
            <summary>
            Atomization request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.AtomizationResponse">
            <summary>
            Atomization response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.AtomizationResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.AtomizationResponse.#ctor">
            <summary>
            Atomization response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.CleanupRequest">
            <summary>
            Cleanup request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.GUID">
            <summary>
            Cleanup request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Async">
            <summary>
            Boolean indicating whether or not the request should be processed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Tenant">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Pool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Bucket">
            <summary>
            Bucket metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Object">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.CleanupRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.CleanupResponse">
            <summary>
            Cleanup response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResponse.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResponse.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResponse.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResponse.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.CleanupResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.FindEmbeddingsRequest">
            <summary>
            Find embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.FindEmbeddingsRequest.#ctor">
            <summary>
            Find embeddings request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.FindEmbeddingsResponse">
            <summary>
            Find embeddings response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.FindEmbeddingsResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.FindEmbeddingsResponse.#ctor">
            <summary>
            Find embeddings response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.GenerateEmbeddingsRequest">
            <summary>
            Generate embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.GenerateEmbeddingsRequest.#ctor">
            <summary>
            Generate embeddings request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.GenerateEmbeddingsResponse">
            <summary>
            Generate embeddings response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.GenerateEmbeddingsResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.GenerateEmbeddingsResponse.#ctor">
            <summary>
            Generate embeddings response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.MqMessage">
            <summary>
            Message queue message.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Version">
            <summary>
            Message version.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Type">
            <summary>
            Type detection request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.MqMessage.#ctor">
            <summary>
            Message queue message.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.MqMessageTypeEnum">
            <summary>
            Message queue type.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.TypeDetectionRequest">
            <summary>
            TypeDetectionRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.TypeDetectionResponse">
            <summary>
            TypeDetectionResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.AtomExtractionRequest">
            <summary>
            AtomExtractionRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.AtomExtractionResponse">
            <summary>
            AtomExtractionResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.SemanticCellExtractionRequest">
            <summary>
            SemanticCellExtractionRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.SemanticCellExtractionResponse">
            <summary>
            SemanticCellExtractionResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.UdrGenerationRequest">
            <summary>
            UdrGenerationRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.UdrGenerationResponse">
            <summary>
            UdrGenerationResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsFindRequest">
            <summary>
            EmbeddingsFindRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsFindResponse">
            <summary>
            EmbeddingsFindResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsGenerationRequest">
            <summary>
            EmbeddingsGenerationRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsGenerationResponse">
            <summary>
            EmbeddingsGenerationResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistDataCatalogRequest">
            <summary>
            PersistDataCatalogRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistDataCatalogResponse">
            <summary>
            PersistDataCatalogResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistVectorRequest">
            <summary>
            PersistVectorRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistVectorResponse">
            <summary>
            PersistVectorResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistGraphRequest">
            <summary>
            PersistGraphRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistGraphResponse">
            <summary>
            PersistGraphResponse.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.MqMessageVersionEnum">
            <summary>
            Message version.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageVersionEnum.v1_0">
            <summary>
            Version 1.0.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistEmbeddingsRequest">
            <summary>
            Persist embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistEmbeddingsRequest.#ctor">
            <summary>
            Persist embeddings request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistEmbeddingsResponse">
            <summary>
            Persist embeddings response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistEmbeddingsResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistEmbeddingsResponse.#ctor">
            <summary>
            Persist embeddings response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistGraphRequest">
            <summary>
            Persist graph request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistGraphRequest.#ctor">
            <summary>
            Persist graph request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistGraphResponse">
            <summary>
            Persist graph response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistGraphResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistGraphResponse.#ctor">
            <summary>
            Persist graph response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistMetadataRequest">
            <summary>
            Persist metadata request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistMetadataRequest.#ctor">
            <summary>
            Persist metadata request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.PersistMetadataResponse">
            <summary>
            Persist metadata response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.PersistMetadataResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.PersistMetadataResponse.#ctor">
            <summary>
            Persist metadata response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorRequest">
            <summary>
            Processor request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.Object">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorResponse">
            <summary>
            Processor response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Type">
            <summary>
            Type result.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Udr">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Source">
            <summary>
            Source document in data catalog.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResponse.Vector">
            <summary>
            Embeddings document.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTask">
            <summary>
            Processor task.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.LastUpdateUtc">
            <summary>
            UTC timestamp from last update.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CreatedUtc">
            <summary>
            UTC timestamp from creation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTask.#ctor">
            <summary>
            Processor task.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskRequest">
            <summary>
            Processor task request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.Type">
            <summary>
            Processor task type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.InputFileType">
            <summary>
            Input file type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.InputFile">
            <summary>
            Input file handle.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.OutputFileType">
            <summary>
            Output file type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.OutputFile">
            <summary>
            Output file handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTaskRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskResponse">
            <summary>
            Processor task response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.InputFileType">
            <summary>
            Input file type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.InputFile">
            <summary>
            Input file handle.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.OutputFileType">
            <summary>
            Output file type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResponse.OutputFile">
            <summary>
            Output file handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTaskResponse.#ctor">
            <summary>
            Processor task response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskTypeEnum">
            <summary>
            Processor task type.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.TypeDetection">
            <summary>
            TypeDetection.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.Atomization">
            <summary>
            Atomization.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.SemanticCellExtraction">
            <summary>
            SemanticCellExtraction.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.UdrGeneration">
            <summary>
            UdrGeneration.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.FindEmbeddings">
            <summary>
            FindEmbeddings.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.EmbeddingsGeneration">
            <summary>
            EmbeddingsGeneration.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistUdr">
            <summary>
            PersistUdr.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistVector">
            <summary>
            PersistVector.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistGraph">
            <summary>
            PersistGraph.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.SemanticCellExtactionRequest">
            <summary>
            Semantic cell extraction request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtactionRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtactionRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.SemanticCellExtactionRequest.#ctor">
            <summary>
            Semantic cell extraction request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.SemanticCellExtractionResponse">
            <summary>
            Semantic cell extraction response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.SemanticCellExtractionResponse.#ctor">
            <summary>
            Semantic cell extraction response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.TypeDetectionRequest">
            <summary>
            Type detection request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionRequest.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.TypeDetectionRequest.#ctor">
            <summary>
            Type detection request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.TypeDetectionResponse">
            <summary>
            Type detection response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.TypeDetectionResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.TypeDetectionResponse.#ctor">
            <summary>
            Type detection response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.UdrGenerationRequest">
            <summary>
            UDR generation request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationRequest.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.UdrGenerationRequest.#ctor">
            <summary>
            UDR generation request.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.UdrGenerationResponse">
            <summary>
            UDR generation response.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationResponse.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationResponse.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationResponse.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.UdrGenerationResponse.FileHandle">
            <summary>
            File handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.UdrGenerationResponse.#ctor">
            <summary>
            UDR generation response.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ViewCleanupSdk">
            <summary>
            View Cleanup Pipeline SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewCleanupSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing/cleanup.</param>
        </member>
        <member name="M:View.Sdk.Processor.ViewCleanupSdk.Process(System.Guid,View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.StoragePool,View.Sdk.BucketMetadata,View.Sdk.ObjectMetadata,View.Sdk.MetadataRule,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,View.Sdk.GraphRepository,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Cleanup a document.  This variant is used by the storage server.
            </summary>
            <param name="requestGuid">Request GUID.</param>
            <param name="tenant">Tenant metadata.</param>
            <param name="collection">Collection metadata.</param>
            <param name="bucket">Bucket metadata.</param>
            <param name="pool">Storage pool metadata.</param>
            <param name="obj">Object metadata.</param>
            <param name="mdRule">Metadata rule.</param>
            <param name="embedRule">Embeddings rule.</param>
            <param name="vectorRepo">Vector repository.</param>
            <param name="graphRepo">Graph repository.</param>
            <param name="async">Boolean indicating if the task should be performed asynchronously.</param>
            <param name="token">Cancellation token.</param>
            <returns>Processor response.</returns>
        </member>
        <member name="M:View.Sdk.Processor.ViewCleanupSdk.Process(System.Guid,View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.DataRepository,View.Sdk.ObjectMetadata,View.Sdk.MetadataRule,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <summary>
            Cleanup a document.  This variant is used by the data crawler.
            </summary>
            <param name="requestGuid">Request GUID.</param>
            <param name="tenant">Tenant metadata.</param>
            <param name="collection">Collection metadata.</param>
            <param name="repo">Data repository.</param>
            <param name="obj">Object metadata.</param>
            <param name="mdRule">Metadata rule.</param>
            <param name="embedRule">Embeddings rule.</param>
            <param name="vectorRepo">Vector repository.</param>
            <param name="graphRepo">Graph repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Processor response.</returns>
        </member>
        <member name="T:View.Sdk.Processor.ViewLexiEmbeddingsSdk">
            <summary>
            View SDK for generating embeddings with Lexi search results.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewLexiEmbeddingsSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing/lexiprocessing.</param>
        </member>
        <member name="M:View.Sdk.Processor.ViewLexiEmbeddingsSdk.Process(System.Guid,View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.SearchResult,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,View.Sdk.GraphRepository,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Process a document.
            </summary>
            <param name="requestGuid">Request GUID.</param>
            <param name="tenant">Tenant metadata.</param>
            <param name="collection">Collection.</param>
            <param name="results">Search results.</param>
            <param name="embedRule">Embeddings rule.</param>
            <param name="vectorRepo">Vector repository.</param>
            <param name="graphRepo">Graph repository.</param>
            <param name="async">Boolean indicating if the task should be performed asynchronously.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:View.Sdk.Processor.ViewProcessorSdk">
            <summary>
            View Processing Pipeline SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewProcessorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing.</param>
        </member>
        <member name="M:View.Sdk.Processor.ViewProcessorSdk.Process(System.Guid,System.Guid,System.Guid,View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Process a document.  This variant is used by the storage server.
            </summary>
            <param name="requestGuid">Request GUID.</param>
            <param name="mdRuleGuid">Metadata rule GUID.</param>
            <param name="embedRuleGuid">Embeddings rule GUID.</param>
            <param name="obj">Object metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Processor response.</returns>
        </member>
        <member name="T:View.Sdk.Processor.ViewTypeDetectorSdk">
            <summary>
            View Type Detector SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewTypeDetectorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="M:View.Sdk.Processor.ViewTypeDetectorSdk.Process(System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Determine a document type.
            </summary>
            <param name="data">Data.</param>
            <param name="contentType">Content-type.  CSV content-types are inferred using this header's value.</param>
            <param name="token">Cancellation token.</param>
            <returns>TypeResult.</returns>
        </member>
        <member name="T:View.Sdk.Processor.ViewUdrGeneratorSdk">
            <summary>
            View document processor SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewUdrGeneratorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing/udr.</param>
        </member>
        <member name="M:View.Sdk.Processor.ViewUdrGeneratorSdk.ProcessDocument(View.Sdk.UdrDocumentRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Process document.
            </summary>
            <param name="doc">Document request.</param>
            <param name="filename">Filename containing data.  Setting this value will overwrite the 'Data' property in the document request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Document response.</returns>
        </member>
        <member name="M:View.Sdk.Processor.ViewUdrGeneratorSdk.ProcessDataTable(View.Sdk.UdrDataTableRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Process data table.
            </summary>
            <param name="dt">Data table request.</param>
            <param name="filename">Filename containing data.</param>
            <param name="token">Cancellation token.</param>
            <returns>Document response.</returns>
        </member>
        <member name="T:View.Sdk.LexiEmbeddingsRequest">
            <summary>
            Lexi embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Async">
            <summary>
            Boolean indicating whether or not the request should be processed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Tenant">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Results">
            <summary>
            Search results.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="M:View.Sdk.LexiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.LexiEmbeddingsResponse">
            <summary>
            Lexi embeddings response.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResponse.Vector">
            <summary>
            Embeddings documents.
            </summary>
        </member>
        <member name="M:View.Sdk.LexiEmbeddingsResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.QueryFilter">
            <summary>
            A filter for the query.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.CreatedAfter">
            <summary>
            Timestamp, in UTC time, after which an entry must have been created.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.CreatedBefore">
            <summary>
            Timestamp, in UTC time, before which an entry must have been created.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Terms">
            <summary>
            List of terms upon which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.MimeTypes">
            <summary>
            List of content-types on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Prefixes">
            <summary>
            List of key prefix values on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Suffixes">
            <summary>
            List of key suffix values on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.SchemaFilters">
            <summary>
            List of schema filters upon which to match.
            </summary>
        </member>
        <member name="M:View.Sdk.QueryFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ScheduleIntervalEnum">
            <summary>
            Schedule interval enum.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.OneTime">
            <summary>
            OneTime.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.SecondsInterval">
            <summary>
            SecondsInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.MinutesInterval">
            <summary>
            MinutesInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.HoursInterval">
            <summary>
            HoursInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.DaysInterval">
            <summary>
            DaysInterval.
            </summary>
        </member>
        <member name="T:View.Sdk.ScheduleTypeEnum">
            <summary>
            Schedule type.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleTypeEnum.Scheduled">
            <summary>
            Scheduled.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleTypeEnum.Interactive">
            <summary>
            Interactive.
            </summary>
        </member>
        <member name="T:View.Sdk.SchemaConditionEnum">
            <summary>
            Available conditions for search filters.
            </summary> 
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Exists">
            <summary>
            The property exists.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Equals">
            <summary>
            The left and right terms are equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.NotEquals">
            <summary>
            The left and right terms are not equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.GreaterThan">
            <summary>
            The left term is greater than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.GreaterThanOrEqualTo">
            <summary>
            The left term is greater than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.LessThan">
            <summary>
            The left term is less than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.LessThanOrEqualTo">
            <summary>
            The left term is less than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsNull">
            <summary>
            The left term is null.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsNotNull">
            <summary>
            The left term is not null.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Contains">
            <summary>
            The left term is contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.ContainsNot">
            <summary>
            The left term is not contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.StartsWith">
            <summary>
            The left term starts with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.EndsWith">
            <summary>
            The left term ends with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsType">
            <summary>
            The element is of a given type.
            </summary>
        </member>
        <member name="T:View.Sdk.SchemaFilter">
            <summary>
            A search filter.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Property">
            <summary>
            The schema element upon which to evaluate.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Condition">
            <summary>
            The condition by which the schema element, or its value, is evaluated.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Value">
            <summary>
            The value to be evaluated using the specified condition against the specified schema element.
            When using GreaterThan, GreaterThanOrEqualTo, LessThan, or LessThanOrEqualTo, the value supplied must be convertible to decimal.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaFilter.#ctor(System.String,View.Sdk.SchemaConditionEnum,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="field">Field.</param>
            <param name="condition">Condition.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:View.Sdk.SchemaFilter.EvaluateValue(System.Object)">
            <summary>
            Evaluates a value against the search filter.
            </summary>
            <param name="value">Value.</param>
            <returns>True if matched.</returns>
        </member>
        <member name="T:View.Sdk.SchemaResult">
            <summary>
            Schema result.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Type">
            <summary>
            Data type.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Rows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Columns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Irregular">
            <summary>
            Flag to indicate if the geometry of the object is irregular.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.MaxDepth">
            <summary>
            Maximum depth observed in the object.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumObjects">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumArrays">
            <summary>
            Number of arrays.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumKeyValues">
            <summary>
            Number of key values.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Schema">
            <summary>
            Schema of the document.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Metadata">
            <summary>
            Metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Flattened">
            <summary>
            Flattened representation of the object.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.SearchConditionEnum">
            <summary>
            Available conditions for search filters.
            </summary> 
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.Equals">
            <summary>
            The left and right terms are equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.NotEquals">
            <summary>
            The left and right terms are not equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.GreaterThan">
            <summary>
            The left term is greater than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.GreaterThanOrEqualTo">
            <summary>
            The left term is greater than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.LessThan">
            <summary>
            The left term is less than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.LessThanOrEqualTo">
            <summary>
            The left term is less than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.IsNull">
            <summary>
            The left term is null.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.IsNotNull">
            <summary>
            The left term is not null.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.Contains">
            <summary>
            The left term is contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.ContainsNot">
            <summary>
            The left term is not contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.StartsWith">
            <summary>
            The left term starts with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.EndsWith">
            <summary>
            The left term ends with the right term.
            </summary>
        </member>
        <member name="T:View.Sdk.SearchFilter">
            <summary>
            A search filter.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Field">
            <summary>
            The field upon which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Condition">
            <summary>
            The condition by which the parsed document's content is evaluated against the supplied value.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Value">
            <summary>
            The value to be evaluated using the specified condition against the parsed document's content.
            When using GreaterThan, GreaterThanOrEqualTo, LessThan, or LessThanOrEqualTo, the value supplied must be convertible to decimal.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchFilter.#ctor(System.String,View.Sdk.SearchConditionEnum,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="field">Field.</param>
            <param name="condition">SearchCondition.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:View.Sdk.SearchFilter.EvaluateValue(System.Object)">
            <summary>
            Evaluates a value against the search filter.
            </summary>
            <param name="value">Value.</param>
            <returns>True if matched.</returns>
        </member>
        <member name="T:View.Sdk.SearchResult">
            <summary>
            Search result.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.DataFlowRequestGUID">
            <summary>
            Data flow request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.ContinuationToken">
            <summary>
            Continuation token to use when continuing the search.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the search.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Documents">
            <summary>
            Documents that matched the query.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Embeddings">
            <summary>
            Embeddings documents generated from matched documents.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.PdfModeEnum">
            <summary>
            PDF mode.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.PdfModeEnum.FlatTextExtraction">
            <summary>
            FlatTextExtraction.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.PdfModeEnum.BoundingBoxExtraction">
            <summary>
            BoundingBoxExtraction.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.PdfOptions">
            <summary>
            PDF options.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.Mode">
            <summary>
            PDF processing mode.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.ReturnMarkup">
            <summary>
            True to indicate that the marked-up PDF including bounding boxes should be returned.
            Only applicable when Mode is set to BoundingBoxExtraction.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.RetainArtifact">
            <summary>
            True to indicate that the marked-up PDF file should be preserved in the temporary directory.
            Only applicable when Mode is set to BoundingBoxExtraction.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.PdfOptions.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCell">
            <summary>
            Semantic cell.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.CellType">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Length">
            <summary>
            Length.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Chunks">
            <summary>
            Chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Children">
            <summary>
            Children.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.#ctor(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell},System.Collections.Generic.List{View.Sdk.Semantic.SemanticChunk})">
            <summary>
            Instantiate.
            </summary>
            <param name="children">Child semantic cells.</param>
            <param name="chunks">Semantic chunks.</param>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FromDataRow(System.Data.DataRow)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <returns>SemanticCell.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FromDataTable(System.Data.DataTable,System.Boolean)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="distinct">True to only return distinct records.</param>
            <returns>List of SemanticCell.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve all semantic chunks.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllChunksBySHA256(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell},System.String)">
            <summary>
            Retrieve all semantic chunks matching a given SHA-256 value.
            </summary>
            <param name="cells">Semantic cells.</param>
            <param name="sha256Hash">SHA-256.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountEmbeddings(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of embeddings in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of embeddings.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticCells(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of semantic cells in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of semantic chunks in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountBytes(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of bytes in chunks within a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of bytes.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticCells">
            <summary>
            Count the number of semantic cells in this semantic cell.
            </summary>
            <returns>Number of semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountEmbeddings">
            <summary>
            Count the number of embeddings contained within the semantic cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountBytes">
            <summary>
            Count the number of bytes contained within chunks within the semantic cell.
            </summary>
            <returns>Number of bytes.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.GetDistinctSHA256Hashes">
            <summary>
            Retrieve the distinct SHA-256 hash values from the chunks contained within in this cell and its children.
            </summary>
            <returns>SHA-256 hash values.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.GetDistinctSHA256Hashes(System.Collections.Generic.IEnumerable{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve the distinct SHA-256 hash values from the chunks contained within a list of semantic cells and their children.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>SHA-256 hash values.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FindCellsWithChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve semantic cells that contain chunks.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Enumerable of cells that contain chunks.</returns>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellRequest">
            <summary>
            Semantic cell request.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MinChunkContentLength">
            <summary>
            Minimum chunk content length.  Minimum is 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.  Minimum is 256 and maximum is 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MaxTokensPerChunk">
            <summary>
            Maximum number of tokens per chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.ShiftSize">
            <summary>
            Shift size, used to determine overlap amongst neighboring chunks.
            When set to the same value as the maximum chunk content length, no overlap will exist amongst neighboring chunks.
            When set to a smaller amount than the maximum chunk content length, overlap will exist amongst neighboring chunks.
            This value must be equal to or less than the maximum chunk content length.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.Pdf">
            <summary>
            PDF options.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.Data">
            <summary>
            Data.
            When serializing, convert to a base64-encoded string.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCellRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellResponse">
            <summary>
            Semantic cell response.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.DataFlowRequestGUID">
            <summary>
            Data flow request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResponse.Data">
            <summary>
            Additional data, if requested.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCellResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellTypeEnum">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.List">
            <summary>
            List.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticChunk">
            <summary>
            Semantic chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Start">
            <summary>
            Start position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.End">
            <summary>
            End position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Length">
            <summary>
            Length.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Binary">
            <summary>
            Binary data.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Byte[],System.Collections.Generic.List{System.Single})">
            <summary>
            Instantiate.
            </summary>
            <param name="position">Position.</param>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="content">Text content.</param>
            <param name="binary">Binary content.</param>
            <param name="embeddings">Embeddings.</param>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.FromDataRow(System.Data.DataRow)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <returns>SemanticChunk.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.FromDataTable(System.Data.DataTable)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <returns>List of SemanticChunk.</returns>
        </member>
        <member name="T:View.Sdk.Semantic.ViewSemanticCellSdk">
            <summary>
            View Semantic Cell SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing/semanticcell.</param>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.Process(View.Sdk.Semantic.SemanticCellRequest,System.Threading.CancellationToken)">
            <summary>
            Extract semantic cells from a document.
            </summary>
            <param name="scReq">Semantic cell extraction request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell response.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.Process(View.Sdk.DocumentTypeEnum,View.Sdk.MetadataRule,System.Byte[],System.Int32,System.Int32,View.Sdk.Semantic.PdfOptions,System.Threading.CancellationToken)">
            <summary>
            Extract semantic cells from a document.
            </summary>
            <param name="docType">Document type.</param>
            <param name="mdRule">Metadata rule.</param>
            <param name="data">Data.</param>
            <param name="maxChunkContentLength">Maximum chunk content length.</param>
            <param name="shiftSize">Shift size.</param>
            <param name="pdfOptions">PDF options.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell response.</returns>
        </member>
        <member name="T:View.Sdk.Serialization.DateTimeConverter">
            <summary>
            DateTime converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="dateTimeValue">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.ExceptionConverter`1">
            <summary>
            Exception converter.
            </summary>
            <typeparam name="TExceptionType">Exception type.</typeparam>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.CanConvert(System.Type)">
            <summary>
            Can convert.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <returns>True if convertible.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.ExpressionConverter">
            <summary>
            Expression converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.ExpressionConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">Options.</param>
            <returns>Expr.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExpressionConverter.Write(System.Text.Json.Utf8JsonWriter,ExpressionTree.Expr,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">Options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.IPAddressConverter">
            <summary>
            IP address converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.IPAddressConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>IPAddress.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.IPAddressConverter.Write(System.Text.Json.Utf8JsonWriter,System.Net.IPAddress,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.NameValueCollectionConverter">
            <summary>
            NameValueCollection converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.NameValueCollectionConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>NameValueCollection.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.NameValueCollectionConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Specialized.NameValueCollection,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.InstantiateConverters">
            <summary>
            Instantiation method to support fixups for various environments, e.g. Unity.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeJson``1(System.Byte[])">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">Bytes containing JSON.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize object to JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeJson(System.Exception,System.Boolean)">
            <summary>
            Serialize an exception to JSON.
            </summary>
            <param name="e">Exception.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.CopyObject``1(System.Object)">
            <summary>
            Copy an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="o">Object.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeXml``1(System.Byte[])">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">XML data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeXml``1(System.String)">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="xml">XML string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeXml(System.Object,System.Boolean)">
            <summary>
            Serialize XML.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>XML string.</returns>
        </member>
        <member name="T:View.Sdk.Serialization.StrictEnumConverter`1">
            <summary>
            Strict enum converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.StrictEnumConverterFactory">
            <summary>
            Strict enum converter factory.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverterFactory.CanConvert(System.Type)">
            <summary>
            Can convert.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <returns>True if convertible.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Create converter.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>JsonConverter.</returns>
        </member>
        <member name="T:View.Sdk.SeverityEnum">
            <summary>
            Message severity.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Debug">
            <summary>
            Debug messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Info">
            <summary>
            Informational messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Warn">
            <summary>
            Warning messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Error">
            <summary>
            Error messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Alert">
            <summary>
            Alert messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Critical">
            <summary>
            Critical messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Emergency">
            <summary>
            Emergency messages.
            </summary>
        </member>
        <member name="T:View.Sdk.SoftwareInstanceTypeEnum">
            <summary>
            Software instance type.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.ConfigServer">
            <summary>
            ConfigServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DataConnectorServer">
            <summary>
            DataConnectorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DirectorServer">
            <summary>
            DirectorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DocumentProcessorServer">
            <summary>
            DocumentProcessorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.EmbeddingsServer">
            <summary>
            EmbeddingsServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.LexiServer">
            <summary>
            LexiServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.OrchestratorServer">
            <summary>
            OrchestratorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.ProcessorServer">
            <summary>
            ProcessorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.SemanticCellExtractorServer">
            <summary>
            SemanticCellExtractorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.StorageServer">
            <summary>
            StorageServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.SwitchboardServer">
            <summary>
            SwitchboardServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.VectorServer">
            <summary>
            VectorServer.
            </summary>
        </member>
        <member name="T:View.Sdk.SourceDocument">
            <summary>
            Source document.
            </summary> 
        </member>
        <member name="P:View.Sdk.SourceDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DataFlowRequestGUID">
            <summary>
            Data flow request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DataFlowSuccess">
            <summary>
            Boolean indicating if the data flow was successful in processing the object.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectKey">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectVersion">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SourceUrl">
            <summary>
            Source URL.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ExpirationUtc">
            <summary>
            Expiration timestamp, if any, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.Score">
            <summary>
            Document score.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.UdrDocument">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="M:View.Sdk.SourceDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.SourceDocumentStatistics">
            <summary>
            Source document statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.Terms">
            <summary>
            Term count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.DistinctTerms">
            <summary>
            Distinct terms.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.KeyValuePairs">
            <summary>
            Key-value count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticCells">
            <summary>
            Semantic cell count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticCellBytes">
            <summary>
            Semantic cell bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticChunks">
            <summary>
            Semantic chunk count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticChunkBytes">
            <summary>
            Semantic chunk bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.SourceDocumentStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.StepMetadata">
            <summary>
            Data flow step.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Success">
            <summary>
            GUID of the step to invoke when successful.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Failure">
            <summary>
            GUID of the step to invoke when failed.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Exception">
            <summary>
            GUID of the step to invoke the event of an exception.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Runtime">
            <summary>
            Runtime for the step.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.StepArchiveFilename">
            <summary>
            Archive filename, in ZIP format.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.StepEntrypointFilename">
            <summary>
            Filename to open to access the entrypoint.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.StepEntrypointType">
            <summary>
            Type (e.g. class) to open to access the entrypoint.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.DebugAssemblyLoad">
            <summary>
            Enable or disable assembly load debugging.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.VirtualEnvironment">
            <summary>
            Virtual environment name.
            Used for Python steps.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.DependenciesFile">
            <summary>
            Dependencies file.
            Used for Python steps, generally set to requirements.txt.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.Package">
            <summary>
            Package file (zip) contents.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.SuccessStep">
            <summary>
            Step to execute when successful.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.FailureStep">
            <summary>
            Step to execute when failed.
            </summary>
        </member>
        <member name="P:View.Sdk.StepMetadata.ExceptionStep">
            <summary>
            Step to execute when an exception is encountered.
            </summary>
        </member>
        <member name="M:View.Sdk.StepMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.StepResultEnum">
            <summary>
            Data flow step result.
            </summary>
        </member>
        <member name="F:View.Sdk.StepResultEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.StepResultEnum.Failure">
            <summary>
            Failure.
            </summary>
        </member>
        <member name="F:View.Sdk.StepResultEnum.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="T:View.Sdk.StepRuntimeEnum">
            <summary>
            Data flow step runtime.
            </summary>
        </member>
        <member name="F:View.Sdk.StepRuntimeEnum.Dotnet8">
            <summary>
            net8.0.
            </summary>
        </member>
        <member name="F:View.Sdk.StepRuntimeEnum.Python3_12">
            <summary>
            Python 3.12.
            </summary>
        </member>
        <member name="T:View.Sdk.StoragePool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.EncryptionKeyGUID">
            <summary>
            Encryption key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.WriteMode">
            <summary>
            Object key write mode.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.UseSsl">
            <summary>
            Enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Endpoint">
            <summary>
            Endpoint URL for the storage pool provider.
            This value should be of the form [protocol]://[hostname]:[port]/ where [protocol] is either http or https.
            This value is required for both Azure and any AWS S3 compatible storage systems (such as Minio).
            </summary> 
        </member>
        <member name="P:View.Sdk.StoragePool.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.SecretKey">
            <summary>
            Secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsRegion">
            <summary>
            AWS region.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBucket">
            <summary>
            AWS bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBaseDomain">
            <summary>
            Base URL for AWS S3 compatible storage platforms.  
            This value should be of the form '.hostname.com' to identify 'bucket' as the bucket in 'bucket.hostname.com'.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBaseUrl">
            <summary>
            Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.
            For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.DiskDirectory">
            <summary>
            Disk directory.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AzureAccount">
            <summary>
            Azure account.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AzureContainer">
            <summary>
            Azure container.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Compress">
            <summary>
            Compression type.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.EnableReadCaching">
            <summary>
            Flag to enable or disable read caching.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.StoragePool.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.ViewStorageSdk">
            <summary>
            View Storage SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.ViewStorageSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8001.</param>
        </member>
        <member name="T:View.Sdk.TenantMetadata">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.AccountGUID">
            <summary>
            Account GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.ParentGUID">
            <summary>
            Parent GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.DefaultPoolGUID">
            <summary>
            Default pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Region">
            <summary>
            Region.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.S3BaseDomain">
            <summary>
            S3 base domain.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.RestBaseDomain">
            <summary>
            REST base domain.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.TenantMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.TenantSetupResult">
            <summary>
            Tenant setup result.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Credential">
            <summary>
            Credential.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="M:View.Sdk.TenantSetupResult.#ctor">
            <summary>
            Tenant setup result.
            </summary>
        </member>
        <member name="T:View.Sdk.Trigger">
            <summary>
            Data flow trigger, i.e. the event that invokes a data flow.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.TriggerType">
            <summary>
            Type.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.HttpMethod">
            <summary>
            HTTP method.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.HttpUrlPrefix">
            <summary>
            HTTP relative URL prefix, i.e. /mydataflow will match /mydataflow1 and /mydataflow/1.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.Trigger.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Trigger.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.TriggerTypeEnum">
            <summary>
            Trigger type.
            </summary>
        </member>
        <member name="F:View.Sdk.TriggerTypeEnum.HTTP">
            <summary>
            HTTP.
            </summary>
        </member>
        <member name="T:View.Sdk.TypeResult">
            <summary>
            Type detection results.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.MimeType">
            <summary>
            MIME type.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.Extension">
            <summary>
            Extension.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.Type">
            <summary>
            Data type.
            </summary>
        </member>
        <member name="M:View.Sdk.TypeResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UdrDataTableRequest">
            <summary>
            UDR data table processing request.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.DatabaseType">
            <summary>
            Database type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.IncludeFlattened">
            <summary>
            True to include a flattened representation of the source document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.CaseInsensitive">
            <summary>
            True to enable case insensitive processing.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.TopTerms">
            <summary>
            Number of top terms to include.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.SqliteFileData">
            <summary>
            Sqlite file data.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDataTableRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UdrDocument">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Type">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Terms">
            <summary>
            Terms identified through text extraction.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.TopTerms">
            <summary>
            Top terms and their count.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Schema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Postings">
            <summary>
            Postings.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocument.GetTopTerms(System.Int32)">
            <summary>
            Retrieve top terms.
            </summary>
            <param name="count">Number of top terms to retrieve.</param>
            <returns>Dictionary containing terms and their counts.</returns>
        </member>
        <member name="T:View.Sdk.UdrDocumentRequest">
            <summary>
            UDR document request.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Type">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.SemanticCellSplitCharacter">
            <summary>
            Character on which to split semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.  Minimum is 128 and maximum is 2048.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.IncludeFlattened">
            <summary>
            True to include a flattened representation of the source document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.CaseInsensitive">
            <summary>
            True to enable case insensitive processing.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.TopTerms">
            <summary>
            Number of top terms to include.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocumentRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UserMaster">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.FullName">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.PasswordSha256">
            <summary>
            Password SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.CreatedUtc">
            <summary>
            Creation time, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.UserMaster.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.UserMaster.Redact(View.Sdk.Serialization.Serializer,View.Sdk.UserMaster)">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="user">User.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.UserMaster.Redact(View.Sdk.Serialization.Serializer,System.Collections.Generic.List{View.Sdk.UserMaster})">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="users">Users.</param>
            <returns>List.</returns>
        </member>
        <member name="T:View.Sdk.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.RepositoryType">
            <summary>
            Type of vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.EndpointUrl">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Model">
            <summary>
            Embeddings model.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Dimensionality">
            <summary>
            Dimensionality of embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseHostname">
            <summary>
            Database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.SchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseTable">
            <summary>
            Database table name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabasePort">
            <summary>
            Database port.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseUser">
            <summary>
            Database user.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabasePassword">
            <summary>
            Database password.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.VectorRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.VectorRepositoryTypeEnum">
            <summary>
            Vector repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.MysqlHeatwave">
            <summary>
            MySQL.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.Oracle23AI">
            <summary>
            Oracle 23AI.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.Pgvector">
            <summary>
            Pgvector.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorChunk">
            <summary>
            Vector chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.DocumentGUID">
            <summary>
            Document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellGUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellType">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellMD5Hash">
            <summary>
            Cell MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellSHA1Hash">
            <summary>
            Cell SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellSHA256Hash">
            <summary>
            Cell SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellPosition">
            <summary>
            Cell position.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkGUID">
            <summary>
            Chunk GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkMD5Hash">
            <summary>
            Chunk MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkSHA1Hash">
            <summary>
            Chunk SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkSHA256Hash">
            <summary>
            Chunk SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkPosition">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkLength">
            <summary>
            Chunk length.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Score">
            <summary>
            Score.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Distance">
            <summary>
            Distance.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CreatedUtc">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>EmbeddingsDocument.</returns>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of EmbeddingsDocument.</returns>
        </member>
        <member name="T:View.Sdk.Vector.VectorDeleteRequest">
            <summary>
            Vector delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorDeleteRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorQueryRequest">
            <summary>
            Vector query request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryRequest.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorQueryRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorQueryResult">
            <summary>
            Vector query result.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorQueryResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorRepositoryStatistics">
            <summary>
            Vector repository statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.VectorRepository">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.DocumentCount">
            <summary>
            Number of documents.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.TotalBytes">
            <summary>
            Total number of bytes as recorded through semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.CellCount">
            <summary>
            Semantic cell count.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.ChunkCount">
            <summary>
            Chunk count.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorRepositoryStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorRepositoryStatistics.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>VectorRepositoryStatistics.</returns>
        </member>
        <member name="T:View.Sdk.Vector.VectorSearchRequest">
            <summary>
            Vector search request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.SearchType">
            <summary>
            Search type.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.StartIndex">
            <summary>
            Starting index.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorSearchRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorSearchTypeEnum">
            <summary>
            Vector search type.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.InnerProduct">
            <summary>
            InnerProduct.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.CosineDistance">
            <summary>
            CosineDistance.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.L2Distance">
            <summary>
            L2Distance.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.ViewVectorSdk">
            <summary>
            View Vector SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.VectorQuery(View.Sdk.Vector.VectorQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Vector query.
            </summary>
            <param name="queryReq">Query request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.VectorSearch(View.Sdk.Vector.VectorSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Vector search.
            </summary>
            <param name="searchReq">Search request.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of vector chunks.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.FindEmbeddings(View.Sdk.Embeddings.FindEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Find existing embeddings.
            </summary>
            <param name="findReq">Find embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Find embeddings result.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.EnumerateDocuments(View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <summary>
            Enumerate documents.
            </summary>
            <param name="query">Enumeration query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.TruncateRepository(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Truncate repository.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.GetStatistics(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get statistics for a repository.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Statistics.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.DocumentExists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a document exists.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.WriteDocument(View.Sdk.Embeddings.EmbeddingsDocument,System.Threading.CancellationToken)">
            <summary>
            Write a document.
            </summary>
            <param name="document">Embeddings document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.DeleteDocument(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.DeleteDocumentsByFilter(System.Guid,View.Sdk.Vector.VectorDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Delete documents by filter.
            </summary>
            <param name="repoGuid">Repository GUID.</param>
            <param name="deleteRequest">Delete request.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.ReadSemanticCells(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read semantic cells for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.ReadSemanticCell(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a specific semantic cell for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.ReadSemanticChunks(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read semantic chunks for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.ReadSemanticChunk(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a specific semantic chunk for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="chunkGuid">Chunk GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic chunk.</returns>
        </member>
        <member name="T:View.Sdk.ViewSdkBase">
            <summary>
            View SDK base class.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Endpoint">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Serializer">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.TimeoutMs">
            <summary>
            Timeout, in milliseconds.  Default is 600 seconds.
            </summary>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Log(View.Sdk.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Create``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Create an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Post``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Execute a logic API.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Post``2(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Execute a logic API.
            </summary>
            <typeparam name="T1">Input type.</typeparam>
            <typeparam name="T2">Output type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if an object exists.
            </summary>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Retrieve``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Read an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.RetrieveMany``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Read objects.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>List.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Update``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Update an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Delete``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.WebAuthenticationTypeEnum">
            <summary>
            Web authentication type.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.Basic">
            <summary>
            Basic.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.BearerToken">
            <summary>
            Bearer token.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEvent">
            <summary>
            Webhook event.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TargetGUID">
            <summary>
            Target GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.RuleGUID">
            <summary>
            Rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.EventType">
            <summary>
            Event type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Url">
            <summary>
            URL.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Uri">
            <summary>
            URI.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ExpectStatus">
            <summary>
            HTTP status to expect on success.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.RetryIntervalMs">
            <summary>
            Retry interval in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Attempt">
            <summary>
            Attempt number.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.MaxAttempts">
            <summary>
            Maximum attempts.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.HttpStatus">
            <summary>
            HTTP status last received.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.AddedUtc">
            <summary>
            Timestamp when added, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.LastAttemptUtc">
            <summary>
            Timestamp when last attempted, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.NextAttemptUtc">
            <summary>
            Timestamp for next attempt, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.LastFailureUtc">
            <summary>
            Timestamp for last failure, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.SuccessUtc">
            <summary>
            Timestamp for success, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.FailedUtc">
            <summary>
            Timestamp for failed, UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookEvent.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventArgs">
            <summary>
            Webhook event arguments.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEventArgs.Event">
            <summary>
            Webhook event.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEventArgs.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookEventArgs.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventStatusEnum">
            <summary>
            Webhook event status enumeration.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Created">
            <summary>
            Created.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.AttemptFailed">
            <summary>
            AttemptFailed.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.TaskFailed">
            <summary>
            TaskFailed.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Succeeded">
            <summary>
            Succeeded.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Expired">
            <summary>
            Expired.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventTypeEnum">
            <summary>
            Webhook event type enumeration.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.ObjectWrite">
            <summary>
            ObjectWrite.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.UdrDocumentGenerated">
            <summary>
            UdrDocumentGenerated.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.EmbeddingsGenerated">
            <summary>
            EmbeddingsGenerated.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookRule">
            <summary>
            Webhook rule.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TargetGUID">
            <summary>
            Target GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.EventType">
            <summary>
            Event type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.MaxAttempts">
            <summary>
            Maximum number of attempts.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.RetryIntervalMs">
            <summary>
            Retry interval in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookRule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookTarget">
            <summary>
            Webhook target.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Url">
            <summary>
            URL.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Uri">
            <summary>
            URI.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.ExpectStatus">
            <summary>
            HTTP status to expect for the request to be considered successful.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookTarget.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Models.NodeGroup">
            <summary>
            Node group.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Models.NodeGroup.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
    </members>
</doc>

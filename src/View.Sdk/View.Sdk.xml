<?xml version="1.0"?>
<doc>
    <assembly>
        <name>View.Sdk</name>
    </assembly>
    <members>
        <member name="T:View.Sdk.Account">
            <summary>
            Account.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Account.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.Account.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Administrator">
            <summary>
            Administrator.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.AccountGUID">
            <summary>
            Account GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.FullName">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.PasswordSha256">
            <summary>
            Password SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Telephone">
            <summary>
            Telephone.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.Administrator.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.Administrator.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ApiErrorEnum">
            <summary>
            API error codes.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoObjectMetadata">
            <summary>
            No object metadata supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoObjectData">
            <summary>
            No object data supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoMetadataRule">
            <summary>
            No metadata rule supplied.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.RequestBodyMissing">
            <summary>
            Request body missing.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.RequiredPropertiesMissing">
            <summary>
            Required properties were missing.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoDataRepositoryConnectivity">
            <summary>
            No connectivity to the specified data repository.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoGraphConnectivity">
            <summary>
            No connectivity to the specified graph.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.GraphOperationFailed">
            <summary>
            A graph operation has failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoTypeDetectorConnectivity">
            <summary>
            No connectivity to the type detection endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownTypeDetected">
            <summary>
            Unable to discern type of supplied data.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.PdfConversionFailed">
            <summary>
            PDF conversion failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoUdrConnectivity">
            <summary>
            No connectivity to the UDR endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UdrGenerationFailed">
            <summary>
            UDR generation failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoSemanticCellConnectivity">
            <summary>
            No connectivity to the semantic cell extraction endpoint.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.SemanticCellExtractionFailed">
            <summary>
            Semantic cell extraction failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoDataCatalogConnectivity">
            <summary>
            No data catalog connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.DataCatalogPersistFailed">
            <summary>
            Persisting data in the data catalog failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownDataCatalogType">
            <summary>
            Unknown data catalog type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoEmbeddingsConnectivity">
            <summary>
            No embeddings processor connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownEmbeddingsGeneratorType">
            <summary>
            Unknown embeddings generator type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.EmbeddingsGenerationFailed">
            <summary>
            Embeddings generation failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NoVectorConnectivity">
            <summary>
            No vector repository connectivity.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.UnknownVectorRepositoryType">
            <summary>
            Unknown vector repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.VectorPersistFailed">
            <summary>
            Vector persistence failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.AuthenticationFailed">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.AuthorizationFailed">
            <summary>
            Authorization failed.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.BadGateway">
            <summary>
            Bad gateway.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.BadRequest">
            <summary>
            Bad request.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Conflict">
            <summary>
            Conflict.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.DeserializationError">
            <summary>
            DeserializationError.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Inactive">
            <summary>
            Inactive.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InternalError">
            <summary>
            Internal error.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InvalidEmail">
            <summary>
            Invalid email.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InvalidRange">
            <summary>
            Invalid range.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.InUse">
            <summary>
            In use.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NotEmpty">
            <summary>
            Not empty.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.NotFound">
            <summary>
            Not found.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.Timeout">
            <summary>
            Timeout.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.TokenExpired">
            <summary>
            Token expired.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiErrorEnum.TooLarge">
            <summary>
            Request too large.
            </summary>
        </member>
        <member name="T:View.Sdk.ApiErrorResponse">
            <summary>
            API error response.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Message">
            <summary>
            Human-readable message.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Context">
            <summary>
            Additional contextual information.
            </summary>
        </member>
        <member name="P:View.Sdk.ApiErrorResponse.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="M:View.Sdk.ApiErrorResponse.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.ApiErrorResponse.#ctor(View.Sdk.ApiErrorEnum,System.Object,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="error">Error code.</param>
            <param name="context">Context.</param>
            <param name="description">Description.</param>
            
        </member>
        <member name="T:View.Sdk.ApiVersionEnum">
            <summary>
            API versions.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.V1_0">
            <summary>
            V1.0.
            </summary>
        </member>
        <member name="F:View.Sdk.ApiVersionEnum.V2_0">
            <summary>
            V2.0.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantChatRequest">
            <summary>
            View Assistant chat request.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Question">
            <summary>
            Question.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Temperature">
            <summary>
            Temperature, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate, between 1 and 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.GenerationModel">
            <summary>
            Generation model and tag; default is llama3.1:latest.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.GenerationProvider">
            <summary>
            Generation provider.  Value values are: ollama.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.OllamaPort">
            <summary>
            Ollama TCP port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantChatRequest.Stream">
            <summary>
            Streaming.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.AssistantChatRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantConfig">
            <summary>
            Assistant configuration.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.SystemPrompt">
            <summary>
            System prompt.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.EmbeddingModel">
            <summary>
            Embedding model.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.MaxResults">
            <summary>
            Maximum results.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabaseName">
            <summary>
            Vector database name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabaseTable">
            <summary>
            Vector database table.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabaseHostname">
            <summary>
            Vector database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabasePort">
            <summary>
            Vector database port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabaseUser">
            <summary>
            Vector database user.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.VectorDatabasePassword">
            <summary>
            Vector database password.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.GenerationProvider">
            <summary>
            Generation provider.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.GenerationApiKey">
            <summary>
            Generation API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.GenerationModel">
            <summary>
            Generation model.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.HuggingFaceApiKey">
            <summary>
            HuggingFace API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.Temperature">
            <summary>
            Temperature.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.TopP">
            <summary>
            Top P.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.MaxTokens">
            <summary>
            Maximum tokens.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.OllamaPort">
            <summary>
            Ollama port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.OllamaContextLength">
            <summary>
            Ollama context length.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.ContextSort">
            <summary>
            Context sort.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.SortByMaxSimilarity">
            <summary>
            Sort by max similarity.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.ContextScope">
            <summary>
            Context scope.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.Rerank">
            <summary>
            Rerank.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.RerankModel">
            <summary>
            Rerank model.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.RerankTopK">
            <summary>
            Rerank top K.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.RerankLevel">
            <summary>
            Rerank level.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.TimestampEnabled">
            <summary>
            Timestamp enabled.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.TimestampFormat">
            <summary>
            Timestamp format.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.TimestampTimezone">
            <summary>
            Timestamp timezone.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.UseCitations">
            <summary>
            Use citations.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.QueryClassification">
            <summary>
            Query classification.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.QueryRewriting">
            <summary>
            Query rewriting.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.CreatedUTC">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.LastModifiedUTC">
            <summary>
            Last modified UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfig.ChatOnly">
            <summary>
            Chat only.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.AssistantConfig.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.QueryClassification">
            <summary>
            Query classification.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryClassification.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryClassification.ConfidenceThreshold">
            <summary>
            Confidence threshold.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryClassification.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.QueryRewriting">
            <summary>
            Query rewriting.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryRewriting.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryRewriting.ContextHistoryDepth">
            <summary>
            Context history depth.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.QueryRewriting.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantConfigurationResponse">
            <summary>
            Response containing a list of assistant configurations.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfigurationResponse.AssistantConfigs">
            <summary>
            List of assistant configurations.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantConfiguration">
            <summary>
            Represents a single assistant configuration.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfiguration.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfiguration.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfiguration.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantConfiguration.CreatedUTC">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.AssistantRequest">
            <summary>
            View Assistant RAG request.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.Messages">
            <summary>
            Collection of chat messages exchanged between the user, assistant, or system.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.PromptPrefix">
            <summary>
            Prompt prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.Question">
            <summary>
            Question.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.MaxResults">
            <summary>
            Maximum number of documents to retrieve, between 1 and 100.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.Temperature">
            <summary>
            Temperature, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.TopP">
            <summary>
            Top P, between 0 and 1.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate, between 1 and 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.GenerationModel">
            <summary>
            Generation model and tag; default is llama3.1:latest.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.GenerationProvider">
            <summary>
            Generation provider.  Value values are: ollama.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.OllamaPort">
            <summary>
            Ollama TCP port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabaseHostname">
            <summary>
            Vector database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabasePort">
            <summary>
            Vector database port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabaseName">
            <summary>
            Vector database name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabaseUser">
            <summary>
            Vector database user.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabasePassword">
            <summary>
            Vector database password.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.EmbeddingModel">
            <summary>
            Name/identifier of the embedding model used to vectorize text.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.GenerationApiKey">
            <summary>
            API key for the text generation provider (if it requires authentication).
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.HuggingFaceApiKey">
            <summary>
            API key for Hugging Face Inference endpoints.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.VectorDatabaseTable">
            <summary>
            Table name in the vector database that stores embeddings and metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.SortByMaxSimilarity">
            <summary>
            When <c>true</c>, sorts retrieved context by the maximum similarity score (descending).
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.RerankModel">
            <summary>
            Name/identifier of the reranking model used to reorder retrieved chunks/documents by relevance.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.Stream">
            <summary>
            Streaming.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.ContextSort">
            <summary>
            Enable or disable contextual sorting.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.ContextScope">
            <summary>
            Context scope; number of neighboring data elements to retrieve.  Must be between 1 and 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.Rerank">
            <summary>
            Enable or disable re-ranking of chunks or documents.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.AssistantRequest.RerankTopK">
            <summary>
            Re-ranking of top chunks or documents.  Must be between 1 and 16.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.AssistantRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ChatMessage">
            <summary>
            Chat message for assistant interactions.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatMessage.Role">
            <summary>
            Role of the message sender (e.g., "user", "assistant", "system").
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatMessage.Content">
            <summary>
            Content of the message.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatMessage.CreatedUTC">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatMessage.Timestamp">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatMessage.Metadata">
            <summary>
            Metadata associated with the chat messages.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ChatMessage.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ChatMessage.#ctor(System.String,System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="role">Role of the message sender.</param>
            <param name="content">Content of the message.</param>
        </member>
        <member name="T:View.Sdk.Assistant.ChatThread">
            <summary>
            Chat thread for assistant interactions.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.GUID">
            <summary>
            Unique identifier for the chat thread.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.Title">
            <summary>
            Title of the chat thread.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.Description">
            <summary>
            Description of the chat thread.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.MessageCount">
            <summary>
            Number of messages in the thread.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.Messages">
            <summary>
            Messages in the thread.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.CreatedUTC">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.LastModifiedUTC">
            <summary>
            Last modified timestamp in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.AssistantConfigGUID">
            <summary>
            Assistant configuration GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThread.Metadata">
            <summary>
            Metadata associated with the chat thread.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ChatThread.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ChatThread.#ctor(System.String,System.String,System.Guid)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="title">Title of the chat thread.</param>
            <param name="description">Description of the chat thread.</param>
            <param name="assistantConfigGuid">Assistant configuration GUID.</param>
        </member>
        <member name="T:View.Sdk.Assistant.ChatThreadsResponse">
            <summary>
            Response containing a list of chat threads.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ChatThreadsResponse.ChatThreads">
            <summary>
            List of chat threads.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ChatThreadsResponse.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.Implementations.ChatMethods">
            <summary>
            Assistant chat methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Assistant chat methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessConfigChat(System.Guid,View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessRagQuestion(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessRagMessage(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessChatOnlyQuestion(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessChatOnlyMessage(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatMethods.ProcessChatOnlyMessageOpenAI(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Assistant.Implementations.ChatThreadMethods">
            <summary>
            Assistant chat thread methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Assistant chat thread methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.Create(View.Sdk.Assistant.ChatThread,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.Append(System.Guid,View.Sdk.Assistant.ChatMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ChatThreadMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Assistant.Implementations.ConfigMethods">
            <summary>
            Assistant configuration methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Assistant configuration methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.CreateRag(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.CreateChat(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.Update(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ConfigMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Assistant.Implementations.ModelMethods">
            <summary>
            Assistant model methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Assistant model methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.RetrieveMany(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.Retrieve(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.Delete(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.PreLoad(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Assistant.Implementations.ModelMethods.Unload(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Assistant.Interfaces.IChatMethods">
            <summary>
            Interface for assistant chat methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessConfigChat(System.Guid,View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a chat request with a specific assistant configuration.
            </summary>
            <param name="configGuid">Configuration GUID.</param>
            <param name="request">Chat request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessRagQuestion(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a RAG question request.
            </summary>
            <param name="request">RAG question request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessRagMessage(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a RAG message request.
            </summary>
            <param name="request">RAG message request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessChatOnlyQuestion(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a chat-only question request.
            </summary>
            <param name="request">Chat-only question request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessChatOnlyMessage(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a chat-only message request.
            </summary>
            <param name="request">Chat-only message request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatMethods.ProcessChatOnlyMessageOpenAI(View.Sdk.Assistant.AssistantRequest,System.Threading.CancellationToken)">
            <summary>
            Process a chat-only message request with OpenAI.
            </summary>
            <param name="request">Chat-only message request for OpenAI.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumerable of tokens.</returns>
        </member>
        <member name="T:View.Sdk.Assistant.Interfaces.IChatThreadMethods">
            <summary>
            Interface for assistant chat thread methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve chat threads.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of chat threads.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a chat thread.
            </summary>
            <param name="threadGuid">Thread GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Chat thread.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a chat thread exists.
            </summary>
            <param name="threadGuid">Thread GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.Create(View.Sdk.Assistant.ChatThread,System.Threading.CancellationToken)">
            <summary>
            Create a chat thread.
            </summary>
            <param name="chatThread">Chat thread to create.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created chat thread.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.Append(System.Guid,View.Sdk.Assistant.ChatMessage,System.Threading.CancellationToken)">
            <summary>
            Append a message to a chat thread.
            </summary>
            <param name="threadGuid">Thread GUID.</param>
            <param name="message">Message to append.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated chat thread.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IChatThreadMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a chat thread.
            </summary>
            <param name="threadGuid">Thread GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="T:View.Sdk.Assistant.Interfaces.IConfigMethods">
            <summary>
            Interface for assistant configuration methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve assistant configurations.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of assistant configurations.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve an assistant configuration.
            </summary>
            <param name="configGuid">Configuration GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Assistant configuration.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an assistant configuration exists.
            </summary>
            <param name="configGuid">Configuration GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.CreateRag(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <summary>
            Create a RAG assistant configuration.
            </summary>
            <param name="config">Assistant configuration.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created assistant configuration.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.CreateChat(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <summary>
            Create a chat-only assistant configuration.
            </summary>
            <param name="config">Assistant configuration.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created assistant configuration.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.Update(View.Sdk.Assistant.AssistantConfig,System.Threading.CancellationToken)">
            <summary>
            Update an assistant configuration.
            </summary>
            <param name="config">Assistant configuration.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated assistant configuration.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IConfigMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an assistant configuration.
            </summary>
            <param name="configGuid">Configuration GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted successfully.</returns>
        </member>
        <member name="T:View.Sdk.Assistant.Interfaces.IModelMethods">
            <summary>
            Interface for assistant model methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IModelMethods.RetrieveMany(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieve available models.
            </summary>
            <param name="request">Model request with Ollama hostname and port.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of available models.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IModelMethods.Retrieve(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <summary>
            Pulls (retrieves) a specific model from the Ollama host and streams progress updates.
            </summary>
            <param name="request">The model request containing the model name, Ollama hostname, and port information.</param>
            <param name="token">A cancellation token to cancel the operation.</param>
            <returns>
            An asynchronous stream of progress messages from the model pulling operation. 
            Each item represents a status update from the server, such as download progress.
            </returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IModelMethods.Delete(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <summary>
            Delete a specific model.
            </summary>
            <param name="request">Model request with model name, Ollama hostname and port.</param>
            <param name="token">Cancellation token.</param>
            <returns>Model operation response.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IModelMethods.PreLoad(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <summary>
            Preload a specific model.
            </summary>
            <param name="request">Model request with model name, Ollama hostname and port.</param>
            <param name="token">Cancellation token.</param>
            <returns>Model operation response.</returns>
        </member>
        <member name="M:View.Sdk.Assistant.Interfaces.IModelMethods.Unload(View.Sdk.Assistant.ModelRequest,System.Threading.CancellationToken)">
            <summary>
            Unload a specific model.
            </summary>
            <param name="request">Model request with model name, Ollama hostname and port.</param>
            <param name="token">Cancellation token.</param>
            <returns>Model operation response.</returns>
        </member>
        <member name="T:View.Sdk.Assistant.Model">
            <summary>
            Model information.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.Model.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.Model.ModelFamily">
            <summary>
            Model family.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.Model.ParameterSize">
            <summary>
            Parameter size.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ModelRequest">
            <summary>
            Model request for operations like pull, delete, load, and unload.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelRequest.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelRequest.OllamaHostname">
            <summary>
            Ollama hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelRequest.OllamaPort">
            <summary>
            Ollama port.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelRequest.Unload">
            <summary>
            Unload flag for load/unload operations.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ModelResponse">
            <summary>
            Model operation response.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponse.Message">
            <summary>
            Response message.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponse.Details">
            <summary>
            Response details.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ModelResponseDetails">
            <summary>
            Model response details.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseDetails.Model">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseDetails.CreatedAt">
            <summary>
            Created at timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseDetails.Message">
            <summary>
            Message information.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseDetails.DoneReason">
            <summary>
            Done reason.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseDetails.Done">
            <summary>
            Done flag.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ModelResponseMessage">
            <summary>
            Model response message.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseMessage.Role">
            <summary>
            Message role.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ModelResponseMessage.Content">
            <summary>
            Message content.
            </summary>
        </member>
        <member name="T:View.Sdk.Assistant.ViewAssistantSdk">
            <summary>
            View Assistant SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ViewAssistantSdk.Config">
            <summary>
            Assistant configuration methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ViewAssistantSdk.Chat">
            <summary>
            Assistant chat methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ViewAssistantSdk.Thread">
            <summary>
            Assistant chat thread methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Assistant.ViewAssistantSdk.Model">
            <summary>
            Assistant model methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Assistant.ViewAssistantSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL.</param>
        </member>
        <member name="T:View.Sdk.AuthenticationResultEnum">
            <summary>
            Authentication result.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.NotFound">
            <summary>
            NotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Inactive">
            <summary>
            Inactive.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthenticationResultEnum.Invalid">
            <summary>
            Invalid.
            </summary>
        </member>
        <member name="T:View.Sdk.AuthenticationToken">
            <summary>
            Authentication token details.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.TimestampUtc">
            <summary>
            Timestamp when the token was issued, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.ExpirationUtc">
            <summary>
            Timestamp when the token will expire, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.IsExpired">
            <summary>
            Boolean to indicate if the token is expired.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.AdministratorGUID">
            <summary>
            Administrator GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.UserGUID">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:View.Sdk.AuthenticationToken.Valid">
            <summary>
            Boolean indicating whether or not the token is valid.
            </summary>
        </member>
        <member name="M:View.Sdk.AuthenticationToken.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.AuthorizationResultEnum">
            <summary>
            Authorization result.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.Permitted">
            <summary>
            Permitted.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.DeniedImplicit">
            <summary>
            DeniedImplicit.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.DeniedExplicit">
            <summary>
            DeniedExplicit.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.NotFound">
            <summary>
            NotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.AuthorizationResultEnum.Conflict">
            <summary>
            Conflict.
            </summary>
        </member>
        <member name="T:View.Sdk.Blob">
            <summary>
            Binary large object (BLOB).
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.GUID">
            <summary>
            Globally-unique identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Name">
            <summary>
            Name of the BLOB.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Url">
            <summary>
            URL to access the BLOB directly.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Length">
            <summary>
            Content length of the BLOB.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.RefObjType">
            <summary>
            Object type to which this BLOB refers.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.RefObjGUID">
            <summary>
            Globally-unique identifier the object to which this BLOB refers.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.IsPublic">
            <summary>
            Boolean indicating whether or not the BLOB is accessible without authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.CreatedUtc">
            <summary>
            Timestamp from creation in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Blob.Data">
            <summary>
            BLOB data.
            </summary>
        </member>
        <member name="M:View.Sdk.Blob.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketEnumerationResult">
            <summary>
            Object returned as the result of an enumeration against a bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Success">
            <summary>
            Indicates if the statistics operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.IterationsRequired">
            <summary>
            Iterations required.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Statistics">
            <summary>
            Object statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.SharedPrefixes">
            <summary>
            Shared prefixes.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.Objects">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.DeleteMarkers">
            <summary>
            Delete markers.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.TotalRecords">
            <summary>
            Total number of records.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketEnumerationResult.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the enumeration.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketEnumerationResult.#ctor">
            <summary>
            Instantiates the object.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketMetadata">
            <summary>
            Bucket metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.PoolGUID">
            <summary>
            Pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.RegionString">
            <summary>
            Region string.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Versioning">
            <summary>
            Enable or disable versioning.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.RetentionMinutes">
            <summary>
            Retention, in minutes.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.MaxUploadSize">
            <summary>
            Maximum upload size.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.MaxMultipartUploadSeconds">
            <summary>
            Maximum multipart upload seconds.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.LastAccessUtc">
            <summary>
            Last access, UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.CreatedUtc">
            <summary>
            Created, UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketMetadata.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.BucketStatistics">
            <summary>
            Bucket statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.ObjectCount">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.VersionCount">
            <summary>
            Number of versions.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.DeleteMarkers">
            <summary>
            Number of delete markers.
            </summary>
        </member>
        <member name="P:View.Sdk.BucketStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.BucketStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.AllowOverwrites">
            <summary>
            Boolean indicating whether or not source documents can be overwritten.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Collection.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Collection.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CollectionSearchRequest">
            <summary>
            Object used to search a collection.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.GUID">
            <summary>
            The GUID of the search operation.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Skip">
            <summary>
            Number of results to skip.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Ordering">
            <summary>
            Ordering.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.Filter">
            <summary>
            Required terms and search filter that must be satisfied to include a document in the results.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionSearchRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="M:View.Sdk.CollectionSearchRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CollectionStatistics">
            <summary>
            Collection statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.DocumentCount">
            <summary>
            Number of source documents.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.TermCount">
            <summary>
            Term count.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionStatistics.KeyValueCount">
            <summary>
            Key-value count.
            </summary>
        </member>
        <member name="M:View.Sdk.CollectionStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CollectionTopTerms">
            <summary>
            Collection top terms.
            </summary>
        </member>
        <member name="P:View.Sdk.CollectionTopTerms.Terms">
            <summary>
            Dictionary of terms and their frequencies.
            </summary>
        </member>
        <member name="M:View.Sdk.CollectionTopTerms.GetTermFrequency(System.String)">
            <summary>
            Helper method to get term frequency as integer
            </summary>
            <param name="term">The term to get frequency for</param>
            <returns>The frequency as integer, or 0 if not found</returns>
        </member>
        <member name="M:View.Sdk.CollectionTopTerms.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.CompletionsProviderEnum">
            <summary>
            Completions provider.
            </summary>
        </member>
        <member name="F:View.Sdk.Completions.CompletionsProviderEnum.OpenAI">
            <summary>
            OpenAI.
            </summary>
        </member>
        <member name="F:View.Sdk.Completions.CompletionsProviderEnum.Ollama">
            <summary>
            Ollama.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.CompletionToken">
            <summary>
            Completion token.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.CompletionToken.Content">
            <summary>
            The actual token/text content in this chunk
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.CompletionToken.Index">
            <summary>
            Index of this token in the stream (0-based)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.CompletionToken.FinishReason">
            <summary>
            Reason for completion ending (only set on final token)
            e.g., "stop", "length", "content_filter", etc.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.CompletionToken.IsComplete">
            <summary>
            Indicates if this is the final token in the stream
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.CompletionToken.TimestampUtc">
            <summary>
            Timestamp when this token was received
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.CompletionToken.#ctor">
            <summary>
            Completion token.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.GenerateCompletionRequest">
            <summary>
            Generate completion request.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Model">
            <summary>
            The model to use for completion (required)
            e.g., "gpt-4", "llama2", "mistral"
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Messages">
            <summary>
            The messages to generate a completion for
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Prompt">
            <summary>
            Single prompt string (alternative to Messages for simpler requests)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Temperature">
            <summary>
            Temperature for sampling (0.0 to 2.0)
            Higher values = more random
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.TopP">
            <summary>
            Nucleus sampling - consider tokens with top_p probability mass (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.TopK">
            <summary>
            Only sample from top K tokens (1 to 1000)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate (1 to 128000)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Stop">
            <summary>
            Stop sequences - generation stops if these are encountered
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Stream">
            <summary>
            Whether to stream the response
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.N">
            <summary>
            Number of completions to generate (1 to 10)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.PresencePenalty">
            <summary>
            Presence penalty (-2.0 to 2.0)
            Positive values penalize new tokens based on whether they appear in the text so far
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.FrequencyPenalty">
            <summary>
            Frequency penalty (-2.0 to 2.0)
            Positive values penalize tokens based on their frequency in the text so far
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.RepeatPenalty">
            <summary>
            Penalize repetition of sequences (0.0 to 2.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Seed">
            <summary>
            Random seed for deterministic generation (any valid int32)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.System">
            <summary>
            System message/instruction (can also be included in Messages)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.ResponseFormat">
            <summary>
            Response format (e.g., "json" for JSON mode)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.User">
            <summary>
            User identifier for tracking
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.NumKeep">
            <summary>
            Number of tokens to keep from prompt (0 to context size)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.NumCtx">
            <summary>
            Number of tokens for context window (128 to 128000)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.NumPredict">
            <summary>
            Number of tokens to predict (1 to 128000)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.TfsZ">
            <summary>
            Tail free sampling (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.TypicalP">
            <summary>
            Typical p sampling (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.Mirostat">
            <summary>
            Mirostat sampling mode (0, 1, or 2)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.MirostatTau">
            <summary>
            Mirostat target entropy (0.0 to 10.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.MirostatEta">
            <summary>
            Mirostat learning rate (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionRequest.NumThread">
            <summary>
            Number of threads to use (1 to 128)
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.GenerateCompletionRequest.#ctor">
            <summary>
            Generate completion request.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.GenerateCompletionResult">
            <summary>
            Generate completion result.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.Provider">
            <summary>
            Completion provider.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.Tokens">
            <summary>
            Tokens.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.StartUtc">
            <summary>
            Start UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.FirstTokenUtc">
            <summary>
            UTC time at which first token arrived.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.LastTokenUtc">
            <summary>
            UTC time at which the last token arrived.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.FirstToken">
            <summary>
            Time to first token from the start time.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.TotalTime">
            <summary>
            Time to last token from the start time.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.GenerateCompletionResult.StreamingTime">
            <summary>
            Total streaming time between first token and last token.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.GenerateCompletionResult.#ctor">
            <summary>
            Generate completion result.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Message">
            <summary>
            Completion message.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Message.Role">
            <summary>
            Role: "system", "user", "assistant"
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Message.Content">
            <summary>
            The message content
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Message.Name">
            <summary>
            Optional name identifier for the message sender
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Message.#ctor">
            <summary>
            Completion message.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest">
            <summary>
            Ollama completions request object for interacting with the Ollama API.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.Model">
            <summary>
            Model name to use for completion generation. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.Prompt">
            <summary>
            The prompt to generate a response for (legacy format). Default is null.
            Used when not using the chat/messages format.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.Messages">
            <summary>
            Messages for chat format. Default is empty list.
            Cannot be null - will be replaced with empty list if null is provided.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.System">
            <summary>
            System prompt to prepend to the conversation. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.Options">
            <summary>
            Additional model parameters for fine-tuning generation. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.Stream">
            <summary>
            Whether to stream the response token by token. Default is false.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.KeepAlive">
            <summary>
            Duration to keep the model loaded in memory. Default is null.
            Format examples: "5m", "1h", "24h".
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.#ctor">
            <summary>
            Instantiate a new Ollama completions request.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsRequest.FromCompletionRequest(View.Sdk.Completions.GenerateCompletionRequest)">
            <summary>
            Create an Ollama completions request from a generic completion request.
            </summary>
            <param name="req">Generic completions request.</param>
            <returns>Ollama-specific completions request.</returns>
        </member>
        <member name="T:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult">
            <summary>
            Ollama completions result object containing the response from the Ollama API.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.Model">
            <summary>
            Model that generated the response. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.CreatedAt">
            <summary>
            Timestamp when the response was created. Default is null.
            ISO 8601 format string.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.Message">
            <summary>
            Message response for chat completions. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.Response">
            <summary>
            Response content for non-chat completions. Default is null.
            Used when in prompt/response format rather than chat format.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.Done">
            <summary>
            Whether the response generation is complete. Default is false.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.DoneReason">
            <summary>
            Reason why the generation ended. Default is null.
            Common values: "stop", "length", "abort".
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.Context">
            <summary>
            Context tokens that can be used to continue the conversation. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.TotalDuration">
            <summary>
            Total duration of the request in nanoseconds. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.LoadDuration">
            <summary>
            Time spent loading the model in nanoseconds. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.PromptEvalCount">
            <summary>
            Number of tokens in the prompt that were evaluated. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.PromptEvalDuration">
            <summary>
            Time spent evaluating the prompt in nanoseconds. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.EvalCount">
            <summary>
            Number of tokens generated in the response. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.EvalDuration">
            <summary>
            Time spent generating the response in nanoseconds. Default is null.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.#ctor">
            <summary>
            Instantiate a new Ollama completions result.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.ToCompletionResult(View.Sdk.Completions.GenerateCompletionRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Convert this Ollama-specific result to a generic completions result.
            </summary>
            <param name="req">Original completions request.</param>
            <param name="success">Whether the request succeeded. Default is true.</param>
            <param name="statusCode">HTTP status code from the response. Default is 200.</param>
            <param name="error">Error information if the request failed. Default is null.</param>
            <returns>Generic completions result.</returns>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaCompletionsResult.ToCompletionToken(System.Int32)">
            <summary>
            Convert a streaming chunk to a completion token.
            </summary>
            <param name="index">Zero-based index of this token in the stream.</param>
            <returns>Completion token representing this chunk.</returns>
        </member>
        <member name="T:View.Sdk.Completions.Providers.Ollama.OllamaMessage">
            <summary>
            Represents a single message in an Ollama chat conversation.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaMessage.Role">
            <summary>
            Role of the message sender. Valid values are "system", "user", "assistant". Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaMessage.Content">
            <summary>
            Content of the message. Default is null.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaMessage.#ctor">
            <summary>
            Ollama message.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.Ollama.OllamaOptions">
            <summary>
            Ollama-specific options for fine-tuning completion generation.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.Temperature">
            <summary>
            Temperature for sampling. Range: 0.0 to 2.0. Default is null.
            Higher values produce more random output, lower values are more deterministic.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.TopP">
            <summary>
            Top-p (nucleus) sampling. Range: 0.0 to 1.0. Default is null.
            Consider tokens with cumulative probability of top_p.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.TopK">
            <summary>
            Top-k sampling. Range: 1 to 1000. Default is null.
            Only sample from the top K tokens.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.NumPredict">
            <summary>
            Maximum number of tokens to predict. Range: 1 to 128000. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.NumCtx">
            <summary>
            Size of the context window. Range: 128 to 128000. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.NumKeep">
            <summary>
            Number of tokens to keep from the initial prompt. Range: 0 to context size. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.Seed">
            <summary>
            Random seed for deterministic generation. Any valid int32 value. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.RepeatPenalty">
            <summary>
            Penalty for repeating tokens. Range: 0.0 to 2.0. Default is null.
            Higher values discourage repetition.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.PenalizePresence">
            <summary>
            Presence penalty. Range: -2.0 to 2.0. Default is null.
            Positive values penalize tokens based on whether they appear in the text so far.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.PenalizeFrequency">
            <summary>
            Frequency penalty. Range: -2.0 to 2.0. Default is null.
            Positive values penalize tokens based on their frequency in the text so far.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.TfsZ">
            <summary>
            Tail-free sampling. Range: 0.0 to 1.0. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.TypicalP">
            <summary>
            Typical-p sampling. Range: 0.0 to 1.0. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.Mirostat">
            <summary>
            Mirostat sampling mode. Valid values: 0, 1, or 2. Default is null.
            0 = disabled, 1 = Mirostat v1, 2 = Mirostat v2.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.MirostatTau">
            <summary>
            Mirostat target entropy. Range: 0.0 to 10.0. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.MirostatEta">
            <summary>
            Mirostat learning rate. Range: 0.0 to 1.0. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.NumThread">
            <summary>
            Number of threads to use for generation. Range: 1 to 128. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.Ollama.OllamaOptions.Stop">
            <summary>
            Sequences where generation should stop. Default is null.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.OllamaOptions.#ctor">
            <summary>
            Instantiate a new Ollama options object.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.Ollama.ViewOllamaCompletionsSdk">
            <summary>
            View Ollama completions SDK for interacting with the Ollama API to generate text completions.
            Supports both streaming and non-streaming responses.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.ViewOllamaCompletionsSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate a new View Ollama completions SDK.
            </summary>
            <param name="tenantGuid">Tenant GUID for multi-tenancy support.</param>
            <param name="baseUrl">Base URL for the Ollama API. Default is "http://localhost:11434/".</param>
            <param name="apiKey">API key for authentication. Default is null.</param>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.ViewOllamaCompletionsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity to the Ollama API endpoint.
            </summary>
            <param name="token">Cancellation token for the operation.</param>
            <returns>True if connectivity is successful, false otherwise.</returns>
        </member>
        <member name="M:View.Sdk.Completions.Providers.Ollama.ViewOllamaCompletionsSdk.GenerateCompletionAsync(View.Sdk.Completions.GenerateCompletionRequest,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generate a completion using the Ollama API.
            Supports both streaming and non-streaming modes based on the request configuration.
            </summary>
            <param name="req">Completion request containing model, messages, and generation parameters.</param>
            <param name="timeoutMs">Timeout in milliseconds. Range: 1 to int.MaxValue. Default is 30000.</param>
            <param name="token">Cancellation token for the operation.</param>
            <returns>Completion result containing the generated tokens.</returns>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice">
            <summary>
            Represents a single completion choice from the OpenAI API.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice.Index">
            <summary>
            Index of this choice in the list of choices. Default is 0.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice.Message">
            <summary>
            Complete message for this choice (non-streaming responses). Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice.Delta">
            <summary>
            Partial message delta for this choice (streaming responses). Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice.FinishReason">
            <summary>
            Reason the model stopped generating tokens. Default is null.
            Common values: "stop", "length", "function_call", "content_filter".
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiChoice.Logprobs">
            <summary>
            Log probabilities for the tokens in this choice. Default is null.
            Only present when requested in the API call.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest">
            <summary>
            OpenAI completions request object for interacting with the OpenAI Chat Completions API.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Model">
            <summary>
            Model to use for completion generation. Default is null.
            Examples: "gpt-3.5-turbo", "gpt-4", "gpt-4-turbo".
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Messages">
            <summary>
            List of messages comprising the conversation so far. Default is empty list.
            Cannot be null - will be replaced with empty list if null is provided.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Temperature">
            <summary>
            Temperature for sampling. Range: 0.0 to 2.0. Default is null.
            Higher values make output more random, lower values more deterministic.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.TopP">
            <summary>
            Nucleus sampling parameter. Range: 0.0 to 1.0. Default is null.
            Consider tokens with cumulative probability mass of top_p.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.N">
            <summary>
            Number of completions to generate for each prompt. Range: 1 to 10. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Stream">
            <summary>
            Whether to stream partial message deltas. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Stop">
            <summary>
            Sequences where the API will stop generating further tokens. Default is null.
            Can be a string or array of strings.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.MaxTokens">
            <summary>
            Maximum number of tokens to generate. Range: 1 to 128000. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.PresencePenalty">
            <summary>
            Presence penalty. Range: -2.0 to 2.0. Default is null.
            Positive values penalize new tokens based on whether they appear in the text so far.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.FrequencyPenalty">
            <summary>
            Frequency penalty. Range: -2.0 to 2.0. Default is null.
            Positive values penalize tokens based on their frequency in the text so far.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.LogitBias">
            <summary>
            Modify the likelihood of specified tokens appearing in the completion. Default is null.
            Maps token IDs to bias values from -100 to 100.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.User">
            <summary>
            Unique identifier representing the end-user. Default is null.
            Helps OpenAI monitor and detect abuse.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.Seed">
            <summary>
            Random seed for deterministic generation. Any valid int32 value. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.ResponseFormat">
            <summary>
            Response format specification. Default is null.
            Used to enable JSON mode or other structured outputs.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.TopK">
            <summary>
            Top-k sampling parameter. Range: 1 to 1000. Default is null.
            Only available for certain models.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.#ctor">
            <summary>
            Instantiate a new OpenAI completions request.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsRequest.FromCompletionRequest(View.Sdk.Completions.GenerateCompletionRequest)">
            <summary>
            Create an OpenAI completions request from a generic completion request.
            </summary>
            <param name="req">Generic completions request.</param>
            <returns>OpenAI-specific completions request.</returns>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult">
            <summary>
            OpenAI completions result object containing the response from the OpenAI Chat Completions API.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Id">
            <summary>
            Unique identifier for the completion. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Object">
            <summary>
            Object type returned by the API. Default is null.
            Typically "chat.completion" or "chat.completion.chunk" for streaming.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Created">
            <summary>
            Unix timestamp (seconds since epoch) when the completion was created. Default is 0.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Model">
            <summary>
            Model that was used to generate the completion. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Choices">
            <summary>
            List of completion choices. Default is empty list.
            Cannot be null - will be replaced with empty list if null is provided.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.Usage">
            <summary>
            Token usage statistics for the completion. Default is null.
            Only present in non-streaming responses.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.SystemFingerprint">
            <summary>
            System fingerprint for the completion. Default is null.
            Used for debugging and tracking model versions.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.#ctor">
            <summary>
            Instantiate a new OpenAI completions result.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.ToCompletionResult(View.Sdk.Completions.GenerateCompletionRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Convert this OpenAI-specific result to a generic completions result.
            </summary>
            <param name="req">Original completions request.</param>
            <param name="success">Whether the request succeeded. Default is true.</param>
            <param name="statusCode">HTTP status code from the response. Default is 200.</param>
            <param name="error">Error information if the request failed. Default is null.</param>
            <returns>Generic completions result.</returns>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.OpenAiCompletionsResult.ToCompletionToken(System.Int32)">
            <summary>
            Convert a streaming chunk to a completion token.
            </summary>
            <param name="index">Zero-based index of this token in the stream.</param>
            <returns>Completion token representing this chunk.</returns>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiDelta">
            <summary>
            Represents a partial message delta in streaming responses.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiDelta.Role">
            <summary>
            Role of the message author. Default is null.
            Only present in the first chunk of a streaming response.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiDelta.Content">
            <summary>
            Partial content being streamed. Default is null.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiMessage">
            <summary>
            Represents a single message in an OpenAI chat conversation.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiMessage.Role">
            <summary>
            Role of the message author. Valid values: "system", "user", "assistant", "function". Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiMessage.Content">
            <summary>
            Content of the message. Default is null.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiMessage.Name">
            <summary>
            Optional name of the message author. Default is null.
            Used to differentiate between multiple users or functions.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiResponseFormat">
            <summary>
            Specifies the format that the model must output.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiResponseFormat.Type">
            <summary>
            Type of response format. Valid values: "text", "json", "json_object". Default is null.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.OpenAiUsage">
            <summary>
            Token usage statistics for a completion request.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiUsage.PromptTokens">
            <summary>
            Number of tokens in the prompt. Default is 0.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiUsage.CompletionTokens">
            <summary>
            Number of tokens in the generated completion. Default is 0.
            </summary>
        </member>
        <member name="P:View.Sdk.Completions.Providers.OpenAI.OpenAiUsage.TotalTokens">
            <summary>
            Total number of tokens used (prompt + completion). Default is 0.
            </summary>
        </member>
        <member name="T:View.Sdk.Completions.Providers.OpenAI.ViewOpenAiCompletionsSdk">
            <summary>
            View OpenAI completions SDK for interacting with the OpenAI Chat Completions API to generate text completions.
            Supports both streaming and non-streaming responses with Server-Sent Events (SSE) for streaming.
            </summary>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.ViewOpenAiCompletionsSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate a new View OpenAI completions SDK.
            </summary>
            <param name="tenantGuid">Tenant GUID for multi-tenancy support.</param>
            <param name="baseUrl">Base URL for the OpenAI API. Default is "https://api.openai.com/".</param>
            <param name="apiKey">API key for authentication. Required for OpenAI API access. Default is null.</param>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.ViewOpenAiCompletionsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity to the OpenAI API endpoint.
            Tests connectivity by fetching the list of available models.
            </summary>
            <param name="token">Cancellation token for the operation.</param>
            <returns>True if connectivity is successful, false otherwise.</returns>
        </member>
        <member name="M:View.Sdk.Completions.Providers.OpenAI.ViewOpenAiCompletionsSdk.GenerateCompletionAsync(View.Sdk.Completions.GenerateCompletionRequest,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generate a completion using the OpenAI Chat Completions API.
            Supports both streaming (SSE) and non-streaming modes based on the request configuration.
            </summary>
            <param name="req">Completion request containing model, messages, and generation parameters.</param>
            <param name="timeoutMs">Timeout in milliseconds. Range: 1 to int.MaxValue. Default is 30000.</param>
            <param name="token">Cancellation token for the operation.</param>
            <returns>Completion result containing the generated tokens.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase">
            <summary>
            View completions provider SDK base class.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Provider">
            <summary>
            Completions provider.  Default is Ollama.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.BaseUrl">
            <summary>
            Base URL.  Default is http://localhost:8000/.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.#ctor(System.Guid,View.Sdk.Completions.CompletionsProviderEnum,System.String,System.String)">
            <summary>
            View completions provider SDK base class.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="provider">Completions provider.</param>
            <param name="endpoint">Endpoint URL.</param>
            <param name="apiKey">API key.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.Log(View.Sdk.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.GenerateCompletionAsync(View.Sdk.Completions.GenerateCompletionRequest,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generate a completion.
            </summary>
            <param name="req">Completion request.</param>
            <param name="timeoutMs">Timeout in milliseconds.</param>
            <param name="token">Cancellation token.</param>
            <returns>Completion response.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.CompletionsProviderSdkBase.ReadResponseDataAsync(RestWrapper.RestResponse,System.String,System.Threading.CancellationToken)">
            <summary>
            Read response data from RestResponse, handling both chunked and non-chunked responses.
            </summary>
            <param name="resp">RestResponse object.</param>
            <param name="url">URL for logging purposes.</param>
            <param name="token">Cancellation token.</param>
            <returns>Response data as string.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase">
            <summary>
            View embeddings generator SDK base class.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Generator">
            <summary>
            Embeddings generator.  Default is LCProxy.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.BaseUrl">
            <summary>
            Base URL.  Default is http://localhost:8000/.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.#ctor(System.Guid,View.Sdk.EmbeddingsGeneratorEnum,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="generator">Embeddings generator.</param>
            <param name="endpoint">Endpoint URL.</param>
            <param name="apiKey">API key.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.Log(View.Sdk.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="timeoutMs">Timeout in milliseconds.</param>
            <param name="token">Cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.EmbeddingsProviderSdkBase.ReadResponseDataAsync(RestWrapper.RestResponse,System.String,System.Threading.CancellationToken)">
            <summary>
            Read response data from RestResponse, handling both chunked and non-chunked responses.
            </summary>
            <param name="resp">RestResponse object.</param>
            <param name="url">URL for logging purposes.</param>
            <param name="token">Cancellation token.</param>
            <returns>Response data as string.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest">
            <summary>
            Langchain embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.ApiKey">
            <summary>
            API key for Huggingface.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.GenerateEmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Langchain embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult">
            <summary>
            Lcproxy embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.Embeddings">
            <summary>
            List of embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.LangchainEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainEmbeddingsSdk">
            <summary>
            View Langchain embeddings SDK.  This SDK interacts directly with the underlying View Embeddings microservice that acts as a Langchain proxy.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainEmbeddingsSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Langchain.ViewLangchainEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest">
            <summary>
            Ollama embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.GenerateEmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Ollama embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult">
            <summary>
            Ollama embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.Embeddings">
            <summary>
            List of embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult">
            <summary>
            Ollama model result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.Models">
            <summary>
            List of model details.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail">
            <summary>
            Ollama model detail.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Size">
            <summary>
            Size.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Digest">
            <summary>
            Digest.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.Details">
            <summary>
            Details.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult.OllamaModelDetail.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaEmbeddingsSdk">
            <summary>
            View Ollama embeddings SDK.  This SDK interacts directly with an underlying Ollama microservice.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaEmbeddingsSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.Ollama.ViewOllamaEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings">
            <summary>
            OpenAI embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddings.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest">
            <summary>
            OpenAI embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.GenerateEmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>OpenAI embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult">
            <summary>
            OpenAI embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.OpenAiEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiEmbeddingsSdk">
            <summary>
            OpenAI embeddings SDK.  This SDK interacts directly with the OpenAI API for generating embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiEmbeddingsSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.OpenAI.ViewOpenAiEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiEmbeddingsSdk">
            <summary>
            VoyageAI embeddings SDK.  This SDK interacts directly with the VoyageAI API for generating embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiEmbeddingsSdk.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.ViewVoyageAiEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings">
            <summary>
            VoyageAI embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddings.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest">
            <summary>
            VoyageAI embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.Model">
            <summary>
            Model used to generate embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsRequest.FromEmbeddingsRequest(View.Sdk.Embeddings.GenerateEmbeddingsRequest)">
            <summary>
            Instantiate from embeddings request.
            </summary>
            <param name="req">Embeddings request.</param>
            <returns>Voyage AI embeddings request.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult">
            <summary>
            VoyageAI embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.Providers.VoyageAI.VoyageAiEmbeddingsResult.ToEmbeddingsResult(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Boolean,System.Int32,View.Sdk.ApiErrorResponse)">
            <summary>
            Create an embeddings result object from the original request and this object, the provider response.
            </summary>
            <param name="req">Original embeddings request.</param>
            <param name="success">Boolean indicating whether or not the request succeeded.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="error">API error response.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.ContentEmbedding">
            <summary>
            Content embedding.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ContentEmbedding.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ContentEmbedding.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ContentEmbedding.#ctor">
            <summary>
            Content embedding.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.EmbeddingsDocument">
            <summary>
            Embeddings document.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Exception">
            <summary>
            Exception, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.DocumentGUID">
            <summary>
            Document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CrawlPlanGUID">
            <summary>
            Crawl plan GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CrawlOperationGUID">
            <summary>
            Crawl operation GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Score">
            <summary>
            Score.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.Distance">
            <summary>
            Distance.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.EmbeddingsDocument.CreatedUtc">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>EmbeddingsDocument.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.EmbeddingsDocument.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of EmbeddingsDocument.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsObject">
            <summary>
            Find embeddings object.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsObject.SHA256Hash">
            <summary>
            SHA256 on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsObject.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>FindEmbeddingsObject.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsObject.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of FindEmbeddingsObject.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsRequest">
            <summary>
            Find embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsRequest.Criteria">
            <summary>
            List of embeddings parameters on which to match.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.FindEmbeddingsResult">
            <summary>
            Find embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Existing">
            <summary>
            List of found embeddings records.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.FindEmbeddingsResult.Missing">
            <summary>
            List of missing embeddings records.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.FindEmbeddingsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.GenerateEmbeddingsRequest">
            <summary>
            Generate embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsRequest.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsRequest.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsRequest.Contents">
            <summary>
            Contents.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsRequest.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.GenerateEmbeddingsRequest.#ctor">
            <summary>
            Generate embeddings request.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.GenerateEmbeddingsResult">
            <summary>
            Generate embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.Error">
            <summary>
            Error response.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.BatchCount">
            <summary>
            The number of batches processed.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.GenerateEmbeddingsResult.ContentEmbeddings">
            <summary>
            Content embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.GenerateEmbeddingsResult.#ctor">
            <summary>
            Generate embeddings result.
            </summary>
        </member>
        <member name="T:View.Sdk.Embeddings.ModelInformation">
            <summary>
            Model information.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.Size">
            <summary>
            Size.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.MD5Hash">
            <summary>
            MD5 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.SHA1Hash">
            <summary>
            SHA1 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ModelInformation.SHA256Hash">
            <summary>
            SHA256 hash.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ModelInformation.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ModelInformation.FromOllamaResponse(View.Sdk.Embeddings.Providers.Ollama.OllamaModelResult)">
            <summary>
            Instantiate from Ollama model response.
            </summary>
            <param name="resp">Response.</param>
            <returns>List of model information.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.ViewEmbeddingsSdk">
            <summary>
            View embeddings generator SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.Generator">
            <summary>
            Embeddings generator.  Default is LCProxy.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.BaseUrl">
            <summary>
            Base URL.  Default is http://localhost:8000/.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.BatchSize">
            <summary>
            Maximum number of chunks to include in an individual processing batch.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxParallelTasks">
            <summary>
            Maximum number of batches to process in parallel.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxRetries">
            <summary>
            Maximum number of retries to perform on any given batch.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.MaxFailures">
            <summary>
            Maximum number of failed batches before failing the operation.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.TimeoutMs">
            <summary>
            Timeout in milliseconds for each batch.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.Embeddings.ViewEmbeddingsSdk.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.#ctor(System.Guid,View.Sdk.EmbeddingsGeneratorEnum,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="generator">Embeddings generator type.</param>
            <param name="baseUrl">Base URL, i.e. http://localhost:8000/.  Do not include URL paths, only protocol, hostname, and port.</param>
            <param name="apiKey">API key.</param>
            <param name="batchSize">Batch size, that is, the maximum number of distinct content entries to process at once..</param>
            <param name="maxParallelTasks">Maximum number of parallel tasks, that is, the maximum number of parallel batches to process concurrently.</param>
            <param name="maxRetries">Maximum number of retries to perform on any given batch before failing.</param>
            <param name="maxFailures">Maximum number of failures to support before failing an entire operation.</param>
            <param name="timeoutMs">Timeout for each operation, in milliseconds.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings response.</returns>
        </member>
        <member name="T:View.Sdk.Embeddings.ViewEmbeddingsServerSdk">
            <summary>
            View embeddings server SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            View embeddings server SDK.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="endpoint">Base URL, i.e. http://localhost:8000/.  Do not include URL paths, only protocol, hostname, and port.</param>
            <param name="accessKey">API key.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.GenerateEmbeddings(View.Sdk.Embeddings.GenerateEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings.
            </summary>
            <param name="embedRequest">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings response.</returns>
        </member>
        <member name="M:View.Sdk.Embeddings.ViewEmbeddingsServerSdk.FindByHash(View.Sdk.Embeddings.FindEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Find embeddings by SHA256 hash.
            </summary>
            <param name="request">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Find embeddings result containing existing and missing embeddings.</returns>
        </member>
        <member name="T:View.Sdk.CompressionTypeEnum">
            <summary>
            Compression type.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Gzip">
            <summary>
            Gzip.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Deflate">
            <summary>
            Deflate.
            </summary>
        </member>
        <member name="F:View.Sdk.CompressionTypeEnum.Adaptive">
            <summary>
            Adaptive.
            </summary>
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.AuthenticationMethods">
            <summary>
            Authentication methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Authentication methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.RetrieveTenants(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.GenerateTokenWithPassword(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.GenerateTokenWithPasswordSha256(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.GenerateAdminTokenWithPassword(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.GenerateAdminTokenWithPasswordSha256(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.ValidateToken(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.AuthenticationMethods.RetrieveTokenDetails(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.BlobMethods">
            <summary>
            Blob methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Blob methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Create(View.Sdk.Blob,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Retrieve(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Read(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Update(View.Sdk.Blob,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Delete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BlobMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.BucketMethods">
            <summary>
            Bucket methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Bucket methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.Create(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.Update(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.BucketMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.CollectionMethods">
            <summary>
            Collection methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Collection methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.Create(View.Sdk.Collection,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.RetrieveStatistics(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.Delete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CollectionMethods.Exists(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.CredentialMethods">
            <summary>
            Credential methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Credential methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Create(View.Sdk.Credential,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Update(View.Sdk.Credential,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.CredentialMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.DeploymentTypeMethods">
            <summary>
            Deployment type methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.DeploymentTypeMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Deployment type methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.DeploymentTypeMethods.Retrieve(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods">
            <summary>
            Embeddings rule methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Embeddings rule methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Create(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Update(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EmbeddingsRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.EncryptionKeyMethods">
            <summary>
            Encryptionkey methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            EncryptionKey methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Create(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Update(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.EncryptionKeyMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.GraphRepositoryMethods">
            <summary>
            Graph repository methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Graph repository methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Create(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Update(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.GraphRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate graph repositories.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.MetadataRuleMethods">
            <summary>
            Metadata rule methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Metadata rule methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Create(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Update(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.MetadataRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.ModelConfigurationMethods">
            <summary>
            Model configuration methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Model configuration methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Create(View.Sdk.ModelConfiguration,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Update(View.Sdk.ModelConfiguration,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelConfigurationMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.ModelEndpointMethods">
            <summary>
            Model endpoint methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Model endpoint methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Create(View.Sdk.ModelEndpoint,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Update(View.Sdk.ModelEndpoint,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ModelEndpointMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Node methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.Update(View.Sdk.Node,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.NodeMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.ObjectLockMethods">
            <summary>
            Object lock methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Object lock methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Create(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Update(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.ObjectLockMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.PermissionMethods">
            <summary>
            Permission methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Permission methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Create(View.Sdk.Permission,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Update(View.Sdk.Permission,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PermissionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.PoolMethods">
            <summary>
            Pool methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Pool methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.Create(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.Update(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.PoolMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.RoleMethods">
            <summary>
            Role methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Role methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Create(View.Sdk.Role,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Update(View.Sdk.Role,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Delete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Exists(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RoleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.RolePermissionMapMethods">
            <summary>
            Role permission map methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Role permission map methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Create(View.Sdk.RolePermissionMap,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Update(View.Sdk.RolePermissionMap,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.RolePermissionMapMethods.Enumerate(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.TenantMethods">
            <summary>
            Tenant methods
            </summary>
            
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Tenant methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Retrieve(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Update(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Create(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.TenantMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.UserMethods">
            <summary>
            User methods
            </summary>
            
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            User methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Create(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Update(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.UserRoleMapMethods">
            <summary>
            User role map methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            User role map methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Create(View.Sdk.UserRoleMap,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Update(View.Sdk.UserRoleMap,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.UserRoleMapMethods.Enumerate(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.VectorRepositoryMethods">
            <summary>
            Vector repository methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Vector repository methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Create(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Update(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.VectorRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.WebhookEventMethods">
            <summary>
            Webhook event methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookEventMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Webhook event methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookEventMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookEventMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookEventMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookEventMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.WebhookRuleMethods">
            <summary>
            Webhook rule methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Webhook rule methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Create(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Update(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Implementations.WebhookTargetMethods">
            <summary>
            Webhook target methods
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Webhook target methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Create(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Update(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Configuration.Implementations.WebhookTargetMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IAuthenticationMethods">
            <summary>
            Authentication methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.RetrieveTenants(System.Threading.CancellationToken)">
            <summary>
            Retrieve tenants.
            </summary>
            <remarks>
            Required headers:
            - <c>x-email</c>: email address.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>List of tenant metadata.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.GenerateTokenWithPassword(System.Threading.CancellationToken)">
            <summary>
            Generate authentication token using password.
            </summary>
            <remarks>
            Required headers:
            - <c>x-email</c>: User's email address.
            - <c>x-password</c>: Plain-text password.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.GenerateTokenWithPasswordSha256(System.Threading.CancellationToken)">
            <summary>
            Generate authentication token using SHA-256 password hash.
            </summary>
            <remarks>
            Required headers:
            - <c>x-email</c>: User's email address.
            - <c>x-password-sha256</c>: SHA-256 hash of the password.
            - <c>x-tenant-guid</c>: Tenant GUID.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.GenerateAdminTokenWithPassword(System.Threading.CancellationToken)">
            <summary>
            Generate administrator authentication token using password.
            </summary>
            <remarks>
            Required headers:
            - <c>x-email</c>: Administrator's email address.
            - <c>x-password</c>: Plain-text password.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.GenerateAdminTokenWithPasswordSha256(System.Threading.CancellationToken)">
            <summary>
            Generate administrator authentication token using SHA-256 password hash.
            </summary>
            <remarks>
            Required headers:
            - <c>x-email</c>: Administrator's email address.
            - <c>x-password-sha256</c>: SHA-256 hash of the password.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.ValidateToken(System.Threading.CancellationToken)">
            <summary>
            Validate an existing authentication token.
            </summary>
            <remarks>
            Required headers:
            - <c>x-token</c>: The authentication token to validate.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token with validity information.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IAuthenticationMethods.RetrieveTokenDetails(System.Threading.CancellationToken)">
            <summary>
            Retrieve authentication token details.
            </summary>
            <remarks>
            Required headers:
            - <c>x-token</c>: The authentication token.
            </remarks>
            <param name="token">Cancellation token.</param>
            <returns>Authentication token with details.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IBlobMethods">
            <summary>
            Methods for working with blobs.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Create(View.Sdk.Blob,System.Threading.CancellationToken)">
            <summary>
            Create a blob.
            </summary>
            <param name="blob">Blob.</param>
            <param name="token">Cancellation token.</param>
            <returns>Blob.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Retrieve(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve a blob.
            </summary>
            <param name="blobGuid">Blob GUID.</param>
            <param name="inclData">Include blob data in response.</param>
            <param name="token">Cancellation token.</param>
            <returns>Blob.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Read(System.String,System.Threading.CancellationToken)">
            <summary>
            Read a public blob.
            </summary>
            <param name="blobGuid">Blob GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Blob.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve multiple blobs.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of blobs.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Update(View.Sdk.Blob,System.Threading.CancellationToken)">
            <summary>
            Update a blob.
            </summary>
            <param name="blob">Blob.</param>
            <param name="token">Cancellation token.</param>
            <returns>Blob.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a blob.
            </summary>
            <param name="blobGuid">Blob GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate blobs.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBlobMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a blob exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IBucketMethods">
            <summary>
            Interface for bucket methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.Create(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a bucket exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a bucket.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read buckets.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Buckets.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.Update(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Update a bucket.
            </summary>
            <param name="bucket">Bucket.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IBucketMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.ICollectionMethods">
            <summary>
            Interface for collection methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.Create(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Create a collection.
            </summary>
            <param name="collection">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a collection.
            </summary>
            <param name="collectionGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve collections.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of collection.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.RetrieveStatistics(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve collection statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection statistics.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate collections.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>EnumerationResult containing collections.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICollectionMethods.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if a collection exists.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if the collection exists.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.ICredentialMethods">
            <summary>
            Interface for credential methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Create(View.Sdk.Credential,System.Threading.CancellationToken)">
            <summary>
            Create a credential.
            </summary>
            <param name="cred">Credential.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a credential exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a credential.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Update(View.Sdk.Credential,System.Threading.CancellationToken)">
            <summary>
            Update a credential.
            </summary>
            <param name="cred">Credential.</param>
            <param name="token">Cancellation token.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a credential.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ICredentialMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate credentials with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing credentials.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IDeploymentTypeMethods">
            <summary>
            Interface for deployment type methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IDeploymentTypeMethods.Retrieve(System.Threading.CancellationToken)">
            <summary>
            Retrieve deployment type information.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Deployment type information.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods">
            <summary>
            Interface for embeddings rule methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Create(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <summary>
            Create a embeddings rule.
            </summary>
            <param name="rule">Embeddings rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a embeddings rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a embeddings rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read embeddings rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Update(View.Sdk.EmbeddingsRule,System.Threading.CancellationToken)">
            <summary>
            Update a embeddings rule.
            </summary>
            <param name="rule">Embeddings rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a embeddings rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEmbeddingsRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate embeddings rules with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing embeddings rules.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods">
            <summary>
            Interface for encryptionkey methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Create(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <summary>
            Create an encryption key.
            </summary>
            <param name="key">Encryption key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an encryption key exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an encryption key.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read encryption keys.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Encryption keys.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Update(View.Sdk.EncryptionKey,System.Threading.CancellationToken)">
            <summary>
            Update an encryption key.
            </summary>
            <param name="key">Encryption key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Encryption key.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an encryption key.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IEncryptionKeyMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate encryption keys.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing encryption keys.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods">
            <summary>
            Interface for graph repository methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Create(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <summary>
            Create a graph repository.
            </summary>
            <param name="repo">Graph repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a graph repository exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a graph repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read graph repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Graph repositories.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Update(View.Sdk.GraphRepository,System.Threading.CancellationToken)">
            <summary>
            Update a graph repository.
            </summary>
            <param name="repo">graph repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Graph repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a graph repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IGraphRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate graph repositories.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods">
            <summary>
            Interface for metadata rule methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Create(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <summary>
            Create a metadata rule.
            </summary>
            <param name="rule">Metadata rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a metadata rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a metadata rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read metadata rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Update(View.Sdk.MetadataRule,System.Threading.CancellationToken)">
            <summary>
            Update a metadata rule.
            </summary>
            <param name="rule">Metadata rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Metadata rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a metadata rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IMetadataRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate metadata rules.
            </summary>
            <param name="maxKeys">Maximum number of rules to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing metadata rules.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods">
            <summary>
            Interface for model configuration methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate model configurations.
            </summary>
            <param name="maxKeys">Maximum number of keys to retrieve.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing model configurations.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve many model configurations.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of model configurations.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a model configuration.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Model configuration.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Create(View.Sdk.ModelConfiguration,System.Threading.CancellationToken)">
            <summary>
            Create a model configuration.
            </summary>
            <param name="modelConfiguration">Model configuration.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created model configuration.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Update(View.Sdk.ModelConfiguration,System.Threading.CancellationToken)">
            <summary>
            Update a model configuration.
            </summary>
            <param name="modelConfiguration">Model configuration.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated model configuration.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a model configuration exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelConfigurationMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a model configuration.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IModelEndpointMethods">
            <summary>
            Interface for model endpoint methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate model endpoints.
            </summary>
            <param name="maxKeys">Maximum number of keys to retrieve.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing model endpoints.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve many model endpoints.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of model endpoints.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a model endpoint.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Model endpoint.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Create(View.Sdk.ModelEndpoint,System.Threading.CancellationToken)">
            <summary>
            Create a model endpoint.
            </summary>
            <param name="modelEndpoint">Model endpoint.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created model endpoint.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Update(View.Sdk.ModelEndpoint,System.Threading.CancellationToken)">
            <summary>
            Update a model endpoint.
            </summary>
            <param name="modelEndpoint">Model endpoint.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated model endpoint.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a model endpoint exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IModelEndpointMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a model endpoint.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.INodeMethods">
            <summary>
            Interface for node methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a node exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a node.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read nodes.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Nodes.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.Update(View.Sdk.Node,System.Threading.CancellationToken)">
            <summary>
            Update a node.
            </summary>
            <param name="node">Node.</param>
            <param name="token">Cancellation token.</param>
            <returns>Node.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a node.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.INodeMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate nodes with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in the response. Default is 5.</param>
            <param name="token">Cancellation token.</param>
            <returns>EnumerationResult containing nodes.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IObjectLockMethods">
            <summary>
            Interface for object lock methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Create(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <summary>
            Create an object lock.
            </summary>
            <param name="endpoint">Object lock.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an object lock exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read an object lock.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read Object locks.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Object locks.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Update(View.Sdk.ObjectLock,System.Threading.CancellationToken)">
            <summary>
            Update an object lock.
            </summary>
            <param name="endpoint">Object lock.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object lock.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an object lock.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IObjectLockMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate object locks with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing object locks.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IPermissionMethods">
            <summary>
            Interface for permission methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Create(View.Sdk.Permission,System.Threading.CancellationToken)">
            <summary>
            Create a permission.
            </summary>
            <param name="permission">Permission.</param>
            <param name="token">Cancellation token.</param>
            <returns>Permission.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a permission exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a permission.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Permission.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read permissions.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Permissions.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Update(View.Sdk.Permission,System.Threading.CancellationToken)">
            <summary>
            Update a permission.
            </summary>
            <param name="permission">Permission.</param>
            <param name="token">Cancellation token.</param>
            <returns>Permission.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a permission.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPermissionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate permissions with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing permissions.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IPoolMethods">
            <summary>
            Interface for pool methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.Create(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Create a pool.
            </summary>
            <param name="pool">Pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a pool exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a pool.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read pools.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Pools.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.Update(View.Sdk.StoragePool,System.Threading.CancellationToken)">
            <summary>
            Update a pool.
            </summary>
            <param name="pool">Pool.</param>
            <param name="token">Cancellation token.</param>
            <returns>Pool.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IPoolMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a pool.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IRoleMethods">
            <summary>
            Methods for working with roles.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Create(View.Sdk.Role,System.Threading.CancellationToken)">
            <summary>
            Create a role.
            </summary>
            <param name="role">Role.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a role.
            </summary>
            <param name="roleGuid">Role GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve multiple roles.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of roles.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Update(View.Sdk.Role,System.Threading.CancellationToken)">
            <summary>
            Update a role.
            </summary>
            <param name="role">Role.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a role.
            </summary>
            <param name="roleGuid">Role GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if a role exists.
            </summary>
            <param name="roleGuid">Role GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Boolean indicating if the role exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRoleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate roles.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods">
            <summary>
            Interface for role permission map methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Create(View.Sdk.RolePermissionMap,System.Threading.CancellationToken)">
            <summary>
            Create a role permission map.
            </summary>
            <param name="rolePermissionMap">Role permission map.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role permission map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a role permission map exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a role permission map.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role permission map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read role permission maps.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Role permission maps.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Update(View.Sdk.RolePermissionMap,System.Threading.CancellationToken)">
            <summary>
            Update a role permission map.
            </summary>
            <param name="rolePermissionMap">Role permission map.</param>
            <param name="token">Cancellation token.</param>
            <returns>Role permission map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a role permission map.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IRolePermissionMapMethods.Enumerate(System.Threading.CancellationToken)">
            <summary>
            Enumerate role permission maps.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing role permission maps.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.ITenantMethods">
            <summary>
            Interface for tenant methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Retrieve(System.Threading.CancellationToken)">
            <summary>
            Read a tenant.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Tenant.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve multiple tenants.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of tenants.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Create(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a new tenant.
            </summary>
            <param name="tenant">Tenant to create.</param>
            <param name="token">Cancellation token.</param>
            <returns>Tenant setup result.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a tenant.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Update(View.Sdk.TenantMetadata,System.Threading.CancellationToken)">
            <summary>
            Update a tenant.
            </summary>
            <param name="tenant">Tenant.</param>
            <param name="token">Cancellation token.</param>
            <returns>Tenant.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate tenants.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.ITenantMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a tentant exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IUserMethods">
            <summary>
            Interface for user methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Create(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <summary>
            Create a user.
            </summary>
            <param name="user">User.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a user exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read users.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Users.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Update(View.Sdk.UserMaster,System.Threading.CancellationToken)">
            <summary>
            Update a user.
            </summary>
            <param name="user">User.</param>
            <param name="token">Cancellation token.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate users with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing users.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods">
            <summary>
            Interface for user role map methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Create(View.Sdk.UserRoleMap,System.Threading.CancellationToken)">
            <summary>
            Create a user role map.
            </summary>
            <param name="userRoleMap">User role map.</param>
            <param name="token">Cancellation token.</param>
            <returns>User role map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a user role map exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a user role map.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>User role map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read user role maps.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>User role maps.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Update(View.Sdk.UserRoleMap,System.Threading.CancellationToken)">
            <summary>
            Update a user role map.
            </summary>
            <param name="userRoleMap">User role map.</param>
            <param name="token">Cancellation token.</param>
            <returns>User role map.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a user role map.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IUserRoleMapMethods.Enumerate(System.Threading.CancellationToken)">
            <summary>
            Enumerate user role maps.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing user role maps.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods">
            <summary>
            Interface for vector repository methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Create(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <summary>
            Create a vector repository.
            </summary>
            <param name="repo">Vector repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a vector repository exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a vector repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read vector repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Vector repositories.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Update(View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <summary>
            Update a vector repository.
            </summary>
            <param name="repo">Vector repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Vector repository.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a vector repository.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IVectorRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate vector repositories with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing vector repositories.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IWebhookEventMethods">
            <summary>
            Interface for webhook event methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookEventMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook event exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookEventMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook event.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookEventMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read webhook events.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook events.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookEventMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate webhook events with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing webhook events.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods">
            <summary>
            Interface for webhook rule methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Create(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <summary>
            Create a webhook rule.
            </summary>
            <param name="rule">Webhook rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook rule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read webhook rules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rules.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Update(View.Sdk.WebhookRule,System.Threading.CancellationToken)">
            <summary>
            Update a webhook rule.
            </summary>
            <param name="rule">Webhook rule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook rule.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a webhook rule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookRuleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate webhook rules with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing webhook rules.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods">
            <summary>
            Interface for webhook target methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Create(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <summary>
            Create a webhook target.
            </summary>
            <param name="target">Webhook target.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a webhook target exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a webhook target.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read webhook targets.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Webhook targets.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Update(View.Sdk.WebhookTarget,System.Threading.CancellationToken)">
            <summary>
            Update a webhook target.
            </summary>
            <param name="target">Webhook target.</param>
            <param name="token">Cancellation token.</param>
            <returns>Webhook target.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a webhook target.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Configuration.Interfaces.IWebhookTargetMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate webhook targets with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in a single operation.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing webhook targets.</returns>
        </member>
        <member name="T:View.Sdk.Configuration.ViewConfigurationSdk">
            <summary>
            View Configuration SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Bucket">
            <summary>
            Bucket methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Node">
            <summary>
            Node methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Tenant">
            <summary>
            Tenant methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.User">
            <summary>
            User methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Credential">
            <summary>
            Credential methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Pool">
            <summary>
            Pool methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.EncryptionKey">
            <summary>
            Encryption key methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.WebhookRule">
            <summary>
            Webhook rule methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.WebhookTarget">
            <summary>
            Webhook target methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.WebhookEvent">
            <summary>
            Webhook event methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.MetadataRule">
            <summary>
            Metadata rule methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Collection">
            <summary>
            Collection methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Authentication">
            <summary>
            Authentication methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.GraphRepository">
            <summary>
            Graph repository methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.VectorRepository">
            <summary>
            Vector repository methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.ObjectLock">
            <summary>
            Object lock methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.EmbeddingsRule">
            <summary>
            Embeddings rule methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Blob">
            <summary>
            Blob methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Permission">
            <summary>
            Permission methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.Role">
            <summary>
            Role methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.RolePermissionMap">
            <summary>
            Role permission map methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.UserRoleMap">
            <summary>
            User role map methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.DeploymentType">
            <summary>
            Deployment type methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.ModelConfiguration">
            <summary>
            Model configuration methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Configuration.ViewConfigurationSdk.ModelEndpoint">
            <summary>
            Model endpoint methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Configuration.ViewConfigurationSdk.#ctor(System.Guid,System.String,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
            <param name="xToken">
            Optional token to be included as the <c>x-token</c> header in API requests that require additional authorization.
            This is used in cases where certain endpoints require an extra level of authentication.
            </param>
        </member>
        <member name="T:View.Sdk.CrawlEnumeration">
            <summary>
            Crawl enumeration result.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.CurrentEnumeration">
            <summary>
            Current enumeration items.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.Deleted">
            <summary>
            Deleted items.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.Added">
            <summary>
            Added items.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.Changed">
            <summary>
            Changed items.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.Unchanged">
            <summary>
            Unchanged items.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlEnumeration.Success">
            <summary>
            Successfully processed items.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlEnumeration.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Crawler.CrawlOperationRequest">
            <summary>
            Request object for crawl operation actions.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.CrawlOperationRequest.GUID">
            <summary>
            GUID of the crawl operation.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.CrawlOperationRequest.Name">
            <summary>
            Name of the crawl operation.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.CrawlOperationRequest.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.CrawlOperationRequest.#ctor(System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="name">Name of the crawl operation.</param>
        </member>
        <member name="M:View.Sdk.Crawler.CrawlOperationRequest.#ctor(System.Guid,System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="guid">GUID of the crawl operation.</param>
            <param name="name">Name of the crawl operation.</param>
        </member>
        <member name="T:View.Sdk.Crawler.Implementations.CrawlFilterMethods">
            <summary>
            Crawl filter methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Crawl filter methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Create(View.Sdk.CrawlFilter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Update(View.Sdk.CrawlFilter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlFilterMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Crawler.Implementations.CrawlOperationMethods">
            <summary>
            Crawl operation methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Crawl operation methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Enumerate(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.RetrieveAll(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.RetrieveEnumeration(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Start(View.Sdk.Crawler.CrawlOperationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Stop(View.Sdk.Crawler.CrawlOperationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlOperationMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Crawler.Implementations.CrawlPlanMethods">
            <summary>
            Crawl plan methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Crawl plan methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Create(View.Sdk.CrawlPlan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Update(View.Sdk.CrawlPlan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlPlanMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Crawler.Implementations.CrawlScheduleMethods">
            <summary>
            Crawl schedule methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Crawl schedule methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Create(View.Sdk.CrawlSchedule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Update(View.Sdk.CrawlSchedule,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.CrawlScheduleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Crawler.Implementations.DataRepositoryMethods">
            <summary>
            Data repository methods
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Data repository methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Create(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Exists(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Update(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Delete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Crawler.Implementations.DataRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods">
            <summary>
            Interface for crawl filter methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Create(View.Sdk.CrawlFilter,System.Threading.CancellationToken)">
            <summary>
            Create a crawl filter.
            </summary>
            <param name="filter">Crawl filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl filter.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a crawl filter exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a crawl filter.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl filter.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve crawl filters.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of crawl filters.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Update(View.Sdk.CrawlFilter,System.Threading.CancellationToken)">
            <summary>
            Update a crawl filter.
            </summary>
            <param name="filter">Crawl filter.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl filter.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a crawl filter.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlFilterMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate crawl filters.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods">
            <summary>
            Interface for crawl operation methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Enumerate(System.Threading.CancellationToken)">
            <summary>
            Enumerate crawl operations.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of crawl operations.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.RetrieveAll(System.Threading.CancellationToken)">
            <summary>
            Retrieve all crawl operations.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of crawl operations.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a crawl operation.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl operation.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.RetrieveEnumeration(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve enumeration for a crawl operation.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Start(View.Sdk.Crawler.CrawlOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Start a crawl operation.
            </summary>
            <param name="request">Crawl operation request containing the operation GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl operation.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Stop(View.Sdk.Crawler.CrawlOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Stop a crawl operation.
            </summary>
            <param name="request">Crawl operation request containing the operation GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl operation.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a crawl operation.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlOperationMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a crawl operation exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="T:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods">
            <summary>
            Interface for crawl plan methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Create(View.Sdk.CrawlPlan,System.Threading.CancellationToken)">
            <summary>
            Create a crawl plan.
            </summary>
            <param name="plan">Crawl plan.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl plan.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a crawl plan exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a crawl plan.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl plan.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve crawl plans.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of crawl plans.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Update(View.Sdk.CrawlPlan,System.Threading.CancellationToken)">
            <summary>
            Update a crawl plan.
            </summary>
            <param name="plan">Crawl plan.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl plan.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a crawl plan.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlPlanMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate crawl plans.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods">
            <summary>
            Interface for crawl schedule methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Create(View.Sdk.CrawlSchedule,System.Threading.CancellationToken)">
            <summary>
            Create a crawl schedule.
            </summary>
            <param name="schedule">Crawl schedule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl schedule.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a crawl schedule exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a crawl schedule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl schedule.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve crawl schedules.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of crawl schedules.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Update(View.Sdk.CrawlSchedule,System.Threading.CancellationToken)">
            <summary>
            Update a crawl schedule.
            </summary>
            <param name="schedule">Crawl schedule.</param>
            <param name="token">Cancellation token.</param>
            <returns>Crawl schedule.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a crawl schedule.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.ICrawlScheduleMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate crawl schedules.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods">
            <summary>
            Interface for data repository methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Create(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Create data repository.
            </summary>
            <param name="repository">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Data repository.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if a data repository exists.
            </summary>
            <param name="repositoryGuid">Repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Retrieve(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a data repository.
            </summary>
            <param name="repositoryGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Data repository.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve data repositories.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of data repository.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Update(View.Sdk.DataRepository,System.Threading.CancellationToken)">
            <summary>
            Update data repository.
            </summary>
            <param name="repository">Data repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Data repository.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data repository.
            </summary>
            <param name="repositoryGuid">Data repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Crawler.Interfaces.IDataRepositoryMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Data repository with pagination support.
            </summary>
            <param name="maxKeys">Maximum number of keys to return in the response. Default is 5.</param>
            <param name="token">Cancellation token.</param>
            <returns>EnumerationResult containing Data repository.</returns>
        </member>
        <member name="T:View.Sdk.Crawler.ViewCrawlerSdk">
            <summary>
            View Crawler SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.ViewCrawlerSdk.DataRepository">
            <summary>
            Data repository methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.ViewCrawlerSdk.CrawlSchedule">
            <summary>
            Crawl schedule methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.ViewCrawlerSdk.CrawlFilter">
            <summary>
            Crawl filter methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.ViewCrawlerSdk.CrawlPlan">
            <summary>
            Crawl plan methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Crawler.ViewCrawlerSdk.CrawlOperation">
            <summary>
            Crawl operation methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Crawler.ViewCrawlerSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="T:View.Sdk.CrawlFilter">
            <summary>
            Crawl filter.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.MinimumSize">
            <summary>
            Minimum size.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.MaximumSize">
            <summary>
            Maximum size.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.IncludeSubdirectories">
            <summary>
            Include or exclude subdirectories.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlFilter.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlOperation">
            <summary>
            Crawl operation, i.e. an execution of a crawl plan.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlPlanGUID">
            <summary>
            Crawl plan GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlScheduleGUID">
            <summary>
            Crawl schedule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CrawlFilterGUID">
            <summary>
            Crawl filter GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CleanupEndpoint">
            <summary>
            Data flow endpoint for cleanup.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsEnumerated">
            <summary>
            Number of objects enumerated.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesEnumerated">
            <summary>
            Number of bytes enumerated.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsAdded">
            <summary>
            Number of objects added since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesAdded">
            <summary>
            Number of bytes added since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsUpdated">
            <summary>
            Number of objects updated since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesUpdated">
            <summary>
            Number of bytes updated since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsDeleted">
            <summary>
            Number of objects deleted since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesDeleted">
            <summary>
            Number of bytes deleted since last enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.EnumerationFile">
            <summary>
            Enumeration file.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsSuccess">
            <summary>
            Number of objects successfully written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesSuccess">
            <summary>
            Number of bytes successfully written
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.ObjectsFailed">
            <summary>
            Number of objects unable to be written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.BytesFailed">
            <summary>
            Number of bytes unable to be written.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.State">
            <summary>
            Crawl state.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartUtc">
            <summary>
            Started.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartEnumerationUtc">
            <summary>
            Start of enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.StartRetrievalUtc">
            <summary>
            Start of retrieval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishEnumerationUtc">
            <summary>
            Finished enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishRetrievalUtc">
            <summary>
            Finished retrieval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.FinishUtc">
            <summary>
            Finished.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlOperation.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlOperation.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlPlan">
            <summary>
            Crawl plan, i.e. the top-level scheduled task with links to repository, schedule, and filter.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CrawlScheduleGUID">
            <summary>
            Crawl schedule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CrawlFilterGUID">
            <summary>
            Crawl filter GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EnumerationDirectory">
            <summary>
            Directory where enumerations are stored.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.EnumerationsToRetain">
            <summary>
            Number of enumerations to retain.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.MaxDrainTasks">
            <summary>
            Maximum number of tasks to use while writing data to View.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessAdditions">
            <summary>
            Boolean flag indicating whether or not new files should be uploaded to the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessDeletions">
            <summary>
            Boolean flag indicating whether or not deleted files should be deleted on the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.ProcessUpdates">
            <summary>
            Boolean flag indicating whether or not updated files should be uploaded to the specified View endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlPlan.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlPlan.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlSchedule">
            <summary>
            Crawl schedule.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Schedule">
            <summary>
            Schedule interval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.Interval">
            <summary>
            Interval.
            </summary>
        </member>
        <member name="P:View.Sdk.CrawlSchedule.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.CrawlSchedule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.CrawlStateEnum">
            <summary>
            Crawler state.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.NotStarted">
            <summary>
            Not started.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Starting">
            <summary>
            Starting.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Stopped">
            <summary>
            Stopped.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Canceled">
            <summary>
            Canceled.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Enumerating">
            <summary>
            Enumerating.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Retrieving">
            <summary>
            Retrieving.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Deleting">
            <summary>
            Deleting.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.CrawlStateEnum.Failed">
            <summary>
            Failed.
            </summary>
        </member>
        <member name="T:View.Sdk.Credential">
            <summary>
            Credentials.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.SecretKey">
            <summary>
            Secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.Credential.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Credential.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Credential.Redact(View.Sdk.Serialization.Serializer,View.Sdk.Credential)">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="cred">Credential.</param>
            <returns>Credential.</returns>
        </member>
        <member name="M:View.Sdk.Credential.Redact(View.Sdk.Serialization.Serializer,System.Collections.Generic.List{View.Sdk.Credential})">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="creds">Credentials.</param>
            <returns>List.</returns>
        </member>
        <member name="T:View.Sdk.DataCatalogTypeEnum">
            <summary>
            Data catalog type.
            </summary>
        </member>
        <member name="F:View.Sdk.DataCatalogTypeEnum.Lexi">
            <summary>
            Lexi.
            </summary>
        </member>
        <member name="T:View.Sdk.DataNode">
            <summary>
            A node of data from a parsed document.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Type">
            <summary>
            The DataType associated with the key-value pair.
            </summary>
        </member>
        <member name="P:View.Sdk.DataNode.Data">
            <summary>
            The data associated with the key.
            </summary>
        </member>
        <member name="M:View.Sdk.DataNode.#ctor">
            <summary>
            Instantiates the DataNode.
            </summary>
        </member>
        <member name="M:View.Sdk.DataNode.#ctor(System.String,System.Object,View.Sdk.DataTypeEnum)">
            <summary>
            Instantiates the DataNode.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data associated with the key.</param>
            <param name="type">The DataType associated with the key-value pair.</param>
        </member>
        <member name="M:View.Sdk.DataNode.TypeFromValue(System.Object)">
            <summary>
            Retrieve the DataType of the supplied value.
            </summary>
            <param name="val">The object to evaluate.</param>
            <returns>DataType.</returns>
        </member>
        <member name="T:View.Sdk.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.RepositoryType">
            <summary>
            Repository type.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.UseSsl">
            <summary>
            Boolean flag to enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.IncludeSubdirectories">
            <summary>
            Boolean to indicate whether or not subdirectories should be included.
            Only applicable to CIFS and NFS crawlers.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.DiskDirectory">
            <summary>
            Disk directory.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3EndpointUrl">
            <summary>
            S3 endpoint URL, e.g. http://localhost:8000/
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3BaseUrl">
            <summary>
            S3 base URL.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3AccessKey">
            <summary>
            S3 access key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3SecretKey">
            <summary>
            S3 secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3BucketName">
            <summary>
            Bucket name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.S3Region">
            <summary>
            S3 region.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureEndpointUrl">
            <summary>
            Azure endpoint URL, e.g. http://localhost:8000/
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureAccountName">
            <summary>
            Azure account name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureContainerName">
            <summary>
            Azure container name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.AzureAccessKey">
            <summary>
            Azure access key.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsHostname">
            <summary>
            CIFS hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsUsername">
            <summary>
            CIFS username.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsPassword">
            <summary>
            CIFS password.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CifsShareName">
            <summary>
            CIFS share name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsHostname">
            <summary>
            NFS hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsUserId">
            <summary>
            NFS user ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsGroupId">
            <summary>
            NFS group ID.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsShareName">
            <summary>
            NFS share name.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.NfsVersion">
            <summary>
            NFS version.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebAuthentication">
            <summary>
            Web authentication type.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebUsername">
            <summary>
            Username for web basic authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebPassword">
            <summary>
            Password for web basic authentication.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebApiKeyHeader">
            <summary>
            Header to use for attaching an API key to the web request.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebApiKey">
            <summary>
            Web API key to attach.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebBearerToken">
            <summary>
            Bearer token to use in the authorization header.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebUserAgent">
            <summary>
            User agent to use while crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebStartUrl">
            <summary>
            Starting URL for web crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebUseHeadlessBrowser">
            <summary>
            Boolean indicating whether or not a headless browser should be used for crawling.
            Headless browsers are slower than RESTful retrievals, but overcome a number of crawling challenges related to security and rendering.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebFollowLinks">
            <summary>
            Boolean indicating whether or not links should be followed.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebFollowRedirects">
            <summary>
            Boolean indicating whether or not redirects should be followed.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebIncludeSitemap">
            <summary>
            Boolean indicating whether or not the sitemap contents should be included as links.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebRestrictToChildUrls">
            <summary>
            Boolean indicating whether or not crawling should only consider child links.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebRestrictToSubdomain">
            <summary>
            Boolean indicating whether or not crawling should consider links within the same subdomain.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebRestrictToRootDomain">
            <summary>
            Boolean indicating whether or not crawling should consider links within the same root domain.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebIgnoreRobotsTxt">
            <summary>
            Boolean indicating whether or not crawling should ignore the robots.txt file.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebMaxDepth">
            <summary>
            Maximum depth to crawl.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebMaxParallelTasks">
            <summary>
            Maximum number of parallel tasks to use while web crawling.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.WebCrawlDelayMs">
            <summary>
            Delay in milliseconds to introduce between crawl operations within the same task.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.GitEndpointUrl">
            <summary>
            Git endpoint URL, e.g. https://github.com
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.GitAuthToken">
            <summary>
            Git auth token.
            </summary>
        </member>
        <member name="P:View.Sdk.DataRepository.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.DataRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DataRepositoryTypeEnum">
            <summary>
            Data repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.CIFS">
            <summary>
            CIFS.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.NFS">
            <summary>
            NFS.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.AmazonS3">
            <summary>
            Amazon S3.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.AzureBlob">
            <summary>
            Azure BLOB.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Web">
            <summary>
            Web.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Printer">
            <summary>
            Printer.
            </summary>
        </member>
        <member name="F:View.Sdk.DataRepositoryTypeEnum.Git">
            <summary>
            Git.
            </summary>
        </member>
        <member name="T:View.Sdk.DataTypeEnum">
            <summary>
            Types of data supported.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Array">
            <summary>
            Array.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Integer">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Long">
            <summary>
            Long.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Decimal">
            <summary>
            Decimal.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Float">
            <summary>
            Float.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Null">
            <summary>
            Null.
            </summary>
        </member>
        <member name="F:View.Sdk.DataTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:View.Sdk.DeploymentType">
            <summary>
            Deployment type information.
            </summary>
        </member>
        <member name="P:View.Sdk.DeploymentType.Type">
            <summary>
            The type of deployment.
            </summary>
        </member>
        <member name="M:View.Sdk.DeploymentType.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Director.DirectorEmbeddingsRequest">
            <summary>
            Director embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsRequest.Model">
            <summary>
            Model to use for generating embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsRequest.ApiKey">
            <summary>
            API key for the embeddings service.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsRequest.Contents">
            <summary>
            Contents to generate embeddings for.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="M:View.Sdk.Director.DirectorEmbeddingsRequest.#ctor">
            <summary>
            Director embeddings request.
            </summary>
        </member>
        <member name="T:View.Sdk.Director.DirectorEmbeddingsResult">
            <summary>
            Director embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsResult.Error">
            <summary>
            Error response.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsResult.Model">
            <summary>
            Model used for generating embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.Director.DirectorEmbeddingsResult.Embeddings">
            <summary>
            List of embeddings results.
            </summary>
        </member>
        <member name="M:View.Sdk.Director.DirectorEmbeddingsResult.#ctor">
            <summary>
            Director embeddings result.
            </summary>
        </member>
        <member name="T:View.Sdk.Director.ViewDirectorSdk">
            <summary>
            View Director SDK for interacting with the View Director REST API.
            </summary>
        </member>
        <member name="M:View.Sdk.Director.ViewDirectorSdk.#ctor(System.String)">
            <summary>
            Instantiate the View Director SDK.
            </summary>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.Director.ViewDirectorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate the View Director SDK.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.Director.ViewDirectorSdk.ConnectionList(System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of connections from the Director API.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Connection list.</returns>
        </member>
        <member name="M:View.Sdk.Director.ViewDirectorSdk.GenerateEmbeddings(View.Sdk.Director.DirectorEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Generate embeddings for the specified content using the Director API.
            </summary>
            <param name="request">Embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.DocumentScore">
            <summary>
            Document score.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.Score">
            <summary>
            The score of the document, between 0 and 1, over both terms and filters.  Only relevant when optional terms or filters are supplied in the search.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.TermsScore">
            <summary>
            The terms score of the document, between 0 and 1, when optional terms are supplied.
            </summary>
        </member>
        <member name="P:View.Sdk.DocumentScore.FiltersScore">
            <summary>
            The filters score of the document, between 0 and 1, when optional filters are supplied.
            </summary>
        </member>
        <member name="M:View.Sdk.DocumentScore.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.DocumentTypeEnum">
            <summary>
            Data type associated with an input object or file.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Csv">
            <summary>
            CSV.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.DataTable">
            <summary>
            DataTable.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Docx">
            <summary>
            DOCX, Word document.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Html">
            <summary>
            HTML.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Json">
            <summary>
            JSON.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Keynote">
            <summary>
            Keynote.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Markdown">
            <summary>
            Markdown.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Numbers">
            <summary>
            Numbers.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pages">
            <summary>
            Pages.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Parquet">
            <summary>
            Parquet.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pdf">
            <summary>
            PDF.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Png">
            <summary>
            PNG.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.PostScript">
            <summary>
            PostScript.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Pptx">
            <summary>
            PPTX, PowerPoint presentation.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Sqlite">
            <summary>
            Sqlite database file.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Xlsx">
            <summary>
            XLSX, Excel spreadsheet.
            </summary> 
        </member>
        <member name="F:View.Sdk.DocumentTypeEnum.Xml">
            <summary>
            XML.
            </summary>
        </member>
        <member name="T:View.Sdk.EmbeddingsGeneratorEnum">
            <summary>
            Embeddings provider.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.OpenAI">
            <summary>
            OpenAI.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.LCProxy">
            <summary>
            Langchain proxy.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.Ollama">
            <summary>
            Ollama.
            </summary>
        </member>
        <member name="F:View.Sdk.EmbeddingsGeneratorEnum.VoyageAI">
            <summary>
            VoyageAI.
            </summary>
        </member>
        <member name="T:View.Sdk.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ProcessingAccessKey">
            <summary>
            Access key for processing endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ChunkingServerUrl">
            <summary>
            Chunking server URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.ChunkingServerApiKey">
            <summary>
            Chunking server API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.TokenizationModel">
            <summary>
            Tokenization model.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.HuggingFaceApiKey">
            <summary>
            HuggingFace API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxChunkingTasks">
            <summary>
            Maximum number of parallel chunking tasks, i.e. number of semantic cells to process concurrently.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MinChunkContentLength">
            <summary>
            Minimum chunk content length.  Minimum is 1.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.  Minimum is 256 and maximum is 16384.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxTokensPerChunk">
            <summary>
            Maximum number of tokens per chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.TokenOverlap">
            <summary>
            Token overlap, used to determine overlap amongst neighboring chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsServerUrl">
            <summary>
            Embeddings server URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsServerApiKey">
            <summary>
            Embeddings server API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGenerator">
            <summary>
            Embeddings generator.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGeneratorUrl">
            <summary>
            Embeddings generator URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsGeneratorApiKey">
            <summary>
            Embeddings provider API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.EmbeddingsBatchSize">
            <summary>
            Maximum number of chunks to process per embeddings request.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxEmbeddingsTasks">
            <summary>
            Maximum number of parallel embeddings generation tasks.  Default is 16.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxEmbeddingsRetries">
            <summary>
            Maximum number of retries to perform on any given embeddings task.  Default is 3.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxEmbeddingsFailures">
            <summary>
            Maximum number of embedding failures to support before failing the operation.  Default is 3.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorStoreUrl">
            <summary>
            Vector store URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.VectorStoreAccessKey">
            <summary>
            Vector store access key.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.MaxContentLength">
            <summary>
            Maximum content length.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.RetentionMinutes">
            <summary>
            The number of minutes to retain the generated document.
            </summary>
        </member>
        <member name="P:View.Sdk.EmbeddingsRule.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.EmbeddingsRule.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.EncryptionKey">
            <summary>
            Encryption key.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.KeyBase64">
            <summary>
            Key in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.KeyHex">
            <summary>
            Key in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.IvBase64">
            <summary>
            Initialization vector in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.IvHex">
            <summary>
            Initialization vector in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.SaltBase64">
            <summary>
            Salt in base64 form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.SaltHex">
            <summary>
            Salt in hex form.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Iv">
            <summary>
            IV.
            </summary>
        </member>
        <member name="P:View.Sdk.EncryptionKey.Salt">
            <summary>
            Salt.
            </summary>
        </member>
        <member name="M:View.Sdk.EncryptionKey.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EncryptionTypeEnum">
            <summary>
            Encryption type.
            </summary>
        </member>
        <member name="F:View.Sdk.EncryptionTypeEnum.None">
            <summary>
            No encryption.
            </summary>
        </member>
        <member name="F:View.Sdk.EncryptionTypeEnum.Local">
            <summary>
            Local encryption.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopGroup">
            <summary>
            Desktop group.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Assistants">
            <summary>
            Assistants.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Buckets">
            <summary>
            Buckets.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Printers">
            <summary>
            Printers.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Groups">
            <summary>
            Groups.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.CreatedUTC">
            <summary>
            Created UTC timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGroup.Detail">
            <summary>
            Error detail.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.DesktopGroup.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopPrinter">
            <summary>
            Desktop printer.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Async">
            <summary>
            Async.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.CreatedUTC">
            <summary>
            Created UTC timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopPrinter.Detail">
            <summary>
            Error detail.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.DesktopPrinter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Tenant">
            <summary>
            Tenant information.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.GUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.Name">
            <summary>
            Tenant name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.Region">
            <summary>
            Tenant region.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.S3BaseDomain">
            <summary>
            S3 base domain.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.DefaultPoolGUID">
            <summary>
            Default pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.Tenant.Active">
            <summary>
            Is tenant active.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopCollection">
            <summary>
            Represents a desktop collection.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopCollection.GUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopCollection.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopCollection.Name">
            <summary>
            Collection name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopCollection.AllowOverwrites">
            <summary>
            Whether overwrites are allowed.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopCollection.AdditionalData">
            <summary>
            Additional data or notes.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopMetadataRule">
            <summary>
            Represents a desktop metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.GUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.TenantGUID">
            <summary>Tenant GUID.</summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.BucketGUID">
            <summary>
            Bucket GUID
            .</summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.Name">
            <summary>
            Rule name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.ContentType">
            <summary>
            Accepted content type.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.MaxContentLength">
            <summary>
            Maximum allowed content length in bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.DataFlowEndpoint">
            <summary>
            Data flow endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.TypeDetectorEndpoint">
            <summary>
            Type detector endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.SemanticCellEndpoint">
            <summary>
            Semantic cell service endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.ShiftSize">
            <summary>
            Chunk shift size.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.UdrEndpoint">
            <summary>
            UDR endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.TopTerms">
            <summary>
            Top terms limit.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.CaseInsensitive">
            <summary>
            Case insensitive parsing flag.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.IncludeFlattened">
            <summary>
            Include flattened data flag.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.DataCatalogEndpoint">
            <summary>
            Data catalog endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.DataCatalogType">
            <summary>
            Type of the data catalog (e.g., Lexi).
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.DataCatalogCollection">
            <summary>
            Data catalog collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopMetadataRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule">
            <summary>
            Represents a desktop embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.GUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.Name">
            <summary>
            Rule name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.ContentType">
            <summary>
            Accepted content type.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.DataFlowEndpoint">
            <summary>
            Data flow endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.EmbeddingsGenerator">
            <summary>
            Embeddings generator name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.GeneratorUrl">
            <summary>
            Generator service URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.GeneratorApiKey">
            <summary>
            Generator API key.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.VectorStoreUrl">
            <summary>
            Vector store service URL.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopEmbeddingsRule.MaxContentLength">
            <summary>
            Maximum allowed content length.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopVectorRepository">
            <summary>
            Represents a desktop vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.GUID">
            <summary>
            Repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.Name">
            <summary>
            Repository name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.RepositoryType">
            <summary>
            Type of the repository (e.g., Pgvector).
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.Model">
            <summary>
            Embedding model used.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.Dimensionality">
            <summary>
            Vector dimensionality.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabaseHostname">
            <summary>
            Database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabaseTable">
            <summary>
            Table in the vector database.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabasePort">
            <summary>
            Database port number.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabaseUser">
            <summary>
            Database user.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopVectorRepository.DatabasePassword">
            <summary>
            Database password.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopGraphRepository">
            <summary>
            Represents a desktop graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.GUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.Name">
            <summary>
            Repository name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.RepositoryType">
            <summary>
            Type of the repository (e.g., LiteGraph).
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.EndpointUrl">
            <summary>
            Endpoint URL of the graph service.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.ApiKey">
            <summary>
            API key for the graph service.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopGraphRepository.GraphIdentifier">
            <summary>
            Identifier of the graph.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.DesktopUser">
            <summary>
            Desktop user.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Email">
            <summary>
            Email address.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Assistants">
            <summary>
            Assistants.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Buckets">
            <summary>
            Buckets.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Printers">
            <summary>
            Printers.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Groups">
            <summary>
            Groups.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.CreatedUTC">
            <summary>
            Created UTC timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.DesktopUser.Detail">
            <summary>
            Error detail.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.DesktopUser.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.NameGuidPair">
            <summary>
            Name-GUID pair.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.NameGuidPair.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.NameGuidPair.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods">
            <summary>
            Desktop group methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Desktop group methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.Create(View.Sdk.EnterpriseDesktop.DesktopGroup,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.Update(View.Sdk.EnterpriseDesktop.DesktopGroup,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopGroupMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods">
            <summary>
            Desktop printer methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Desktop printer methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.Create(View.Sdk.EnterpriseDesktop.DesktopPrinter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.Update(View.Sdk.EnterpriseDesktop.DesktopPrinter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopPrinterMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods">
            <summary>
            Desktop user methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Desktop user methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.Create(View.Sdk.EnterpriseDesktop.DesktopUser,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.Update(View.Sdk.EnterpriseDesktop.DesktopUser,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Implementations.DesktopUserMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods">
            <summary>
            Interface for desktop group methods.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve many desktop groups.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of desktop groups.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a desktop group.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Desktop group.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a desktop group exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.Create(View.Sdk.EnterpriseDesktop.DesktopGroup,System.Threading.CancellationToken)">
            <summary>
            Create a desktop group.
            </summary>
            <param name="group">Desktop group.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created desktop group.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.Update(View.Sdk.EnterpriseDesktop.DesktopGroup,System.Threading.CancellationToken)">
            <summary>
            Update a desktop group.
            </summary>
            <param name="group">Desktop group.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated desktop group.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopGroupMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a desktop group.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>>True if deleted.</returns>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods">
            <summary>
            Interface for desktop printer methods.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve many desktop printers.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of desktop printers.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a desktop printer.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Desktop printer.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a desktop printer exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.Create(View.Sdk.EnterpriseDesktop.DesktopPrinter,System.Threading.CancellationToken)">
            <summary>
            Create a desktop printer.
            </summary>
            <param name="printer">Desktop printer.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created desktop printer.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.Update(View.Sdk.EnterpriseDesktop.DesktopPrinter,System.Threading.CancellationToken)">
            <summary>
            Update a desktop printer.
            </summary>
            <param name="printer">Desktop printer.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated desktop printer.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopPrinterMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a desktop printer.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>>True if deleted.</returns>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods">
            <summary>
            Interface for desktop user methods.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve many desktop users.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of desktop users.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a desktop user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Desktop user.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a desktop user exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.Create(View.Sdk.EnterpriseDesktop.DesktopUser,System.Threading.CancellationToken)">
            <summary>
            Create a desktop user.
            </summary>
            <param name="user">Desktop user.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created desktop user.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.Update(View.Sdk.EnterpriseDesktop.DesktopUser,System.Threading.CancellationToken)">
            <summary>
            Update a desktop user.
            </summary>
            <param name="user">Desktop user.</param>
            <param name="token">Cancellation token.</param>
            <returns>Updated desktop user.</returns>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.Interfaces.IDesktopUserMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a desktop user.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>>True if deleted.</returns>
        </member>
        <member name="T:View.Sdk.EnterpriseDesktop.ViewEnterpriseDesktopSdk">
            <summary>
            View Enterprise Desktop SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.ViewEnterpriseDesktopSdk.DesktopUser">
            <summary>
            Desktop user methods.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.ViewEnterpriseDesktopSdk.DesktopGroup">
            <summary>
            Desktop group methods.
            </summary>
        </member>
        <member name="P:View.Sdk.EnterpriseDesktop.ViewEnterpriseDesktopSdk.DesktopPrinter">
            <summary>
            Desktop printer methods.
            </summary>
        </member>
        <member name="M:View.Sdk.EnterpriseDesktop.ViewEnterpriseDesktopSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="T:View.Sdk.EnumerationItem">
            <summary>
            Enumeration item.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.IsFolder">
            <summary>
            Indicates if the item is a folder.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.ContentLength">
            <summary>
            Content length in bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.ETag">
            <summary>
            ETag.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.MD5Hash">
            <summary>
            MD5 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.SHA1Hash">
            <summary>
            SHA1 hash.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationItem.SHA256Hash">
            <summary>
            SHA256 hash.
            </summary>
        </member>
        <member name="M:View.Sdk.EnumerationItem.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationOrderEnum">
            <summary>
            Enumeration order.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.CreatedAscending">
            <summary>
            CreatedAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.CreatedDescending">
            <summary>
            CreatedDescending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.LastAccessAscending">
            <summary>
            LastAccessAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.LastAccessDescending">
            <summary>
            LastAccessDescending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.KeyAscending">
            <summary>
            KeyAscending.
            </summary>
        </member>
        <member name="F:View.Sdk.EnumerationOrderEnum.KeyDescending">
            <summary>
            KeyDescending.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationQuery">
            <summary>
            Object used to enumerate a table.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Skip">
            <summary>
            The number of records to skip.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.IncludeData">
            <summary>
            Include subordinates, for instance, semantic cells and chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.IncludeOwners">
            <summary>
            Include owners.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Filters">
            <summary>
            Search filters to apply to enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationQuery.Ordering">
            <summary>
            Order by.
            </summary>
        </member>
        <member name="M:View.Sdk.EnumerationQuery.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.EnumerationResult`1">
            <summary>
            Object returned as the result of an enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Success">
            <summary>
            Indicates if the statistics operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Skip">
            <summary>
            Skip.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.IterationsRequired">
            <summary>
            Iterations required.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.TotalRecords">
            <summary>
            Total number of records.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the enumeration.
            </summary>
        </member>
        <member name="P:View.Sdk.EnumerationResult`1.Objects">
            <summary>
            Objects.
            </summary>
        </member>
        <member name="M:View.Sdk.EnumerationResult`1.#ctor">
            <summary>
            Instantiates the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Expiration">
            <summary>
            Expiration.
            </summary>
        </member>
        <member name="P:View.Sdk.Expiration.ExpirationUtc">
            <summary>
            Expiration timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Expiration.RetentionMinutes">
            <summary>
            Retention minutes.
            </summary>
        </member>
        <member name="M:View.Sdk.Expiration.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Extensions.StreamExtensions">
            <summary>
            Stream extensions.
            </summary>
        </member>
        <member name="M:View.Sdk.Extensions.StreamExtensions.ToBytes(System.IO.Stream)">
            <summary>
            Convert stream to bytes.
            </summary>
            <param name="stream">Stream.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="T:View.Sdk.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.RepositoryType">
            <summary>
            Type of graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.EndpointUrl">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.Ssl">
            <summary>
            Enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.GraphIdentifier">
            <summary>
            Graph identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.GraphRepository.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.GraphRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.GraphRepositoryTypeEnum">
            <summary>
            Graph repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.GraphRepositoryTypeEnum.LiteGraph">
            <summary>
            LiteGraph.
            </summary>
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.AssistantMethods">
            <summary>
            Assistant healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.AssistantMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Assistant healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.AssistantMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.ConfigMethods">
            <summary>
            Configuration healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.ConfigMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Configuration healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.ConfigMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.CrawlerMethods">
            <summary>
            Crawler healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.CrawlerMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Crawler healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.CrawlerMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.DirectorMethods">
            <summary>
            Director healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.DirectorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Director healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.DirectorMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.EmbeddingMethods">
            <summary>
            Embedding healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.EmbeddingMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Embedding healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.EmbeddingMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.LexiMethods">
            <summary>
            Lexi healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.LexiMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Lexi healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.LexiMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.OrchestratorMethods">
            <summary>
            Orchestrator healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.OrchestratorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Orchestrator healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.OrchestratorMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.ProcessorMethods">
            <summary>
            Processor healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.ProcessorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Processor healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.ProcessorMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.StorageMethods">
            <summary>
            Storage healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.StorageMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Storage healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.StorageMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.SwitchboardMethods">
            <summary>
            Switchboard healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.SwitchboardMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Switchboard healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.SwitchboardMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Implementations.VectorMethods">
            <summary>
            Vector healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.VectorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Vector healthcheck methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Healthcheck.Implementations.VectorMethods.Exists(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IAssistantMethods">
            <summary>
            Interface for assistant healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IAssistantMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if assistant service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IConfigMethods">
            <summary>
            Interface for configuration healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IConfigMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if configuration service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.ICrawlerMethods">
            <summary>
            Interface for crawler healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.ICrawlerMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if crawler service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IDirectorMethods">
            <summary>
            Interface for director healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IDirectorMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if director service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IEmbeddingMethods">
            <summary>
            Interface for embedding healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IEmbeddingMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if embedding service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.ILexiMethods">
            <summary>
            Interface for lexi healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.ILexiMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if lexi service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IOrchestratorMethods">
            <summary>
            Interface for orchestrator healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IOrchestratorMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if orchestrator service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IProcessorMethods">
            <summary>
            Interface for processor healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IProcessorMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if processor service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IStorageMethods">
            <summary>
            Interface for storage healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IStorageMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if storage service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.ISwitchboardMethods">
            <summary>
            Interface for switchboard healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.ISwitchboardMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if switchboard exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.Interfaces.IVectorMethods">
            <summary>
            Interface for vector healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.Interfaces.IVectorMethods.Exists(System.Threading.CancellationToken)">
            <summary>
            Check if vector service exists and is accessible.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>True if exists and accessible.</returns>
        </member>
        <member name="T:View.Sdk.Healthcheck.ViewHealthcheckSdk">
            <summary>
            View Healthcheck SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Switchboard">
            <summary>
            Switchboard healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Config">
            <summary>
            Configuration healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Storage">
            <summary>
            Storage healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Vector">
            <summary>
            Vector healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Processor">
            <summary>
            Processor healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Assistant">
            <summary>
            Assistant healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Orchestrator">
            <summary>
            Orchestrator healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Crawler">
            <summary>
            Crawler healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Lexi">
            <summary>
            Lexi healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Embedding">
            <summary>
            Embedding healthcheck methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Healthcheck.ViewHealthcheckSdk.Director">
            <summary>
            Director healthcheck methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Healthcheck.ViewHealthcheckSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="T:View.Sdk.Helpers.DataTableHelper">
            <summary>
            Data table helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetBooleanValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve Boolean value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableBooleanValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable Boolean value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName">Name of the column.</param>
            <returns>Boolean value if valid, null if unknown or invalid.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetStringValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve string value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>String.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetInt32Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve integer value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableInt32Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable integer value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetInt64Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve long value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Long.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableInt64Value(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable integer value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Integer.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetGuidValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve GUID value.  Returns the default GUID if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>GUID.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableGuidValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable GUID value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>GUID.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetEnumValue``1(System.Data.DataRow,System.String)">
            <summary>
            Retrieve enum value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Enum.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetDateTimeValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve DateTime value.  Returns the default DateTime if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableDateTimeValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable DateTime value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Nullable DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetDecimalValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve decimal value.  Returns 0 if the cell is null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Decimal.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableDecimalValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve nullable decimal value.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Nullable decimal.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetNullableBinaryValue(System.Data.DataRow,System.String)">
            <summary>
            Retrieve binary value or null.
            </summary>
            <param name="row">DataRow.</param>
            <param name="columnName"></param>
            <returns>Byte array or null.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToListDynamic(System.Data.DataTable)">
            <summary>
            Convert a data table to a dynamic list.
            </summary>
            <param name="dt">Data table.</param>
            <returns>List of dynamic.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToDynamic(System.Data.DataTable)">
            <summary>
            Convert a data table to a dynamic.
            </summary>
            <param name="dt">Data table.</param>
            <returns>Dynamic.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToListDictionary(System.Data.DataTable)">
            <summary>
            Convert a data table to a list of dictionaries.
            </summary>
            <param name="dt">Data table.</param>
            <returns>List of dictionaries.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToDictionary(System.Data.DataTable)">
            <summary>
            Convert a data table to a dictionary.
            </summary>
            <param name="dt">Data table.</param>
            <returns>Dictionary.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.ObjectToDictionary(System.Object)">
            <summary>
            Convert an object to a dictionary.
            </summary>
            <param name="obj">Object.</param>
            <returns>Dictionary.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.IsDictionary(System.Object)">
            <summary>
            Check if an object is a dictionary.
            </summary>
            <param name="obj">Object.</param>
            <returns>True if dictionary.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.DataTableToListGuid(System.Data.DataTable,System.String)">
            <summary>
            Extract a list of GUIDs from a table by column name.
            </summary>
            <param name="table">Data table.</param>
            <param name="columnName">Column name.</param>
            <returns>List of GUIDs.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DataTableHelper.GetLength(System.Data.DataTable)">
            <summary>
            Calculate DataTable length.
            This calculation adds the length of column names and row values.
            </summary>
            <param name="dt">DataTable.</param>
            <returns>Length.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.DirectoryHelper">
            <summary>
            Directory helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.NormalizeDirectory(System.String)">
            <summary>
            Normalize directory path.
            </summary>
            <param name="directory">Directory.</param>
            <returns>Normalized directory.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.RecursiveDelete(System.String,System.Boolean)">
            <summary>
            Recursively delete a directory.
            </summary>
            <param name="baseDir">Base directory.</param>
            <param name="deleteRootDirectory">True to delete the root directory.</param>
        </member>
        <member name="M:View.Sdk.Helpers.DirectoryHelper.RecursiveDelete(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Recursively delete a directory.
            </summary>
            <param name="baseDir">Base directory.</param>
            <param name="deleteRootDirectory">True to delete the root directory.</param>
        </member>
        <member name="T:View.Sdk.Helpers.HashHelper">
            <summary>
            Hash methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.Byte[])">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="data">Data.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.IO.Stream)">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.String)">
            <summary>
            Generate an MD5 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate an MD5 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.MD5Hash(System.Data.DataTable)">
            <summary>
            Generate an MD5 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.Byte[])">
            <summary>
            Generate a SHA1 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.IO.Stream)">
            <summary>
            Generate a SHA1 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.String)">
            <summary>
            Generate a SHA1 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate a SHA1 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA1Hash(System.Data.DataTable)">
            <summary>
            Generate a SHA1 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.Byte[])">
            <summary>
            Generate a SHA256 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.IO.Stream)">
            <summary>
            Generate a SHA256 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.String)">
            <summary>
            Generate a SHA256 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate a SHA256 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:View.Sdk.Helpers.HashHelper.SHA256Hash(System.Data.DataTable)">
            <summary>
            Generate a SHA256 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.StreamHelper">
            <summary>
            Stream helpers.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.StreamHelper.ReadFully(System.IO.Stream)">
            <summary>
            Read a stream fully.
            </summary>
            <param name="stream">Stream.</param>
            <returns>Bytes.</returns>
        </member>
        <member name="T:View.Sdk.Helpers.TimeHelper">
            <summary>
            Time helper.
            </summary>
        </member>
        <member name="M:View.Sdk.Helpers.TimeHelper.TotalMsBetween(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Determine the total number of milliseconds between a start and end time.
            </summary>
            <param name="start">Start time.</param>
            <param name="end">End time.</param>
            <param name="decimalPlaces">Number of decimal places.</param>
            <returns>Milliseconds.</returns>
        </member>
        <member name="T:View.Sdk.HttpMethodEnum">
            <summary>
            HTTP method enum.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.UNKNOWN">
            <summary>
            UNKNOWN.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.GET">
            <summary>
            GET.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.PUT">
            <summary>
            PUT.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.POST">
            <summary>
            POST.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.DELETE">
            <summary>
            DELETE.
            </summary>
        </member>
        <member name="F:View.Sdk.HttpMethodEnum.PATCH">
            <summary>
            PATCH.
            </summary>
        </member>
        <member name="T:View.Sdk.IngestionQueueEntry">
            <summary>
            Ingestion queue entry.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ObjectKey">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ObjectVersion">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.Message">
            <summary>
            Processing message.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.StartUtc">
            <summary>
            Start timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SuccessUtc">
            <summary>
            Success timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.FailureUtc">
            <summary>
            Failure timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TotalMs">
            <summary>
            Total runtime of ingestion, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.TermProcessingMs">
            <summary>
            Total runtime of term processing, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.SchemaProcessingMs">
            <summary>
            Total runtime of schema processing, in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestionQueueEntry.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.IngestionQueueEntry.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.IngestQueueStatistics">
            <summary>
            Ingest queue statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestQueueStatistics.DocumentCount">
            <summary>
            Number of source documents.
            </summary>
        </member>
        <member name="P:View.Sdk.IngestQueueStatistics.TotalBytes">
            <summary>
            Total number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.IngestQueueStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.IworkFileTypeEnum">
            <summary>
            Apple iWork file type enum.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Keynote">
            <summary>
            Keynote.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Numbers">
            <summary>
            Numbers.
            </summary>
        </member>
        <member name="F:View.Sdk.IworkFileTypeEnum.Pages">
            <summary>
            Pages.
            </summary>
        </member>
        <member name="T:View.Sdk.Lexi.Implementations.CollectionMethods">
            <summary>
            Collection methods
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Collection methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.RetrieveStatistics(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.Create(View.Sdk.Collection,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.RetrieveTopTerms(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.CollectionMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Lexi.Implementations.EnumerateMethods">
            <summary>
            Enumerate methods
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.EnumerateMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Enumerate methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.EnumerateMethods.Enumerate(System.Guid,View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Lexi.Implementations.IngestQueueMethods">
            <summary>
            Ingest queue methods
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Ingest queue methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.Retrieve(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.IngestQueueMethods.RetrieveStatistics(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Lexi.Implementations.SearchMethods">
            <summary>
            Search methods
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Search methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.Search(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.SearchIncludeData(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.SearchIncludeTopTerms(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.SearchAsync(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.Enumerate(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SearchMethods.ExecuteSearchRequest(System.String,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Execute a search request to the specified URL with the given query.
            </summary>
            <param name="url">The API endpoint URL.</param>
            <param name="query">The search query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Search result.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.Implementations.SourceDocumentMethods">
            <summary>
            Source document methods
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Source document methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.RetrieveMany(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Retrieve(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Retrieve(System.Guid,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.RetrieveTopTerms(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.RetrieveStatistics(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Upload(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Delete(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Delete(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Lexi.Implementations.SourceDocumentMethods.Exists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Lexi.Interfaces.ICollectionMethods">
            <summary>
            Interface for collection methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve collections.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a collection.
            </summary>
            <param name="collectionGuid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.RetrieveStatistics(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve collection statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection statistics.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.Create(View.Sdk.Collection,System.Threading.CancellationToken)">
            <summary>
            Create collection.
            </summary>
            <param name="collection">Collection.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate collections.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>EnumerationResult containing collections.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.RetrieveTopTerms(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve top terms for a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="maxKeys">Maximum number of top terms to return. Default is 10.</param>
            <param name="token">Cancellation token.</param>
            <returns>Collection top terms.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ICollectionMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a collection exists.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if the collection exists.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.Interfaces.IEnumerateMethods">
            <summary>
            Interface for enumerate methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IEnumerateMethods.Enumerate(System.Guid,View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <summary>
            Enumerate a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.Interfaces.IIngestQueueMethods">
            <summary>
            Interface for ingest queue methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IIngestQueueMethods.Exists(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if an ingest queue entry exists.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IIngestQueueMethods.Retrieve(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Read an ingest queue entry.
            </summary>
            <param name="guid">GUID.</param>
            <param name="includeStats">Include statistics in the query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Ingest queue entry.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IIngestQueueMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Read ingest queue entries.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Ingest queue entries.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IIngestQueueMethods.Delete(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an ingest queue entry.
            </summary>
            <param name="guid">GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.IIngestQueueMethods.RetrieveStatistics(System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics for the ingest queue.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Ingest queue statistics.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.Interfaces.ISearchMethods">
            <summary>
            Interface for search methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISearchMethods.Search(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Search result.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISearchMethods.SearchIncludeData(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search a collection and include document data in the results.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Search result with document data included.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISearchMethods.SearchIncludeTopTerms(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search a collection and include top terms in the results.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Search result with top terms.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISearchMethods.SearchAsync(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search a collection asynchronously.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Search result.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISearchMethods.Enumerate(System.Guid,View.Sdk.CollectionSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Enumerate documents in a collection.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing source documents.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods">
            <summary>
            Interface for source document methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.RetrieveMany(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve documents.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of source documents.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Retrieve(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="includeData">Flag to indicate whether or not source document data should be included.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Retrieve(System.Guid,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="key">Key.</param>
            <param name="version">Version.</param>
            <param name="includeData">Flag to indicate whether or not source document data should be included.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.RetrieveTopTerms(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve top terms for a document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="maxKeys">Maximum number of top terms to return. Default is 10.</param>
            <param name="token">Cancellation token.</param>
            <returns>Document top terms.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.RetrieveStatistics(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve document statistics.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document statistics.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Upload(View.Sdk.SourceDocument,System.Threading.CancellationToken)">
            <summary>
            Upload a document.
            </summary>
            <param name="document">Source document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Source document.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Delete(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Delete(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="key">Document key.</param>
            <param name="version">Document version.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Lexi.Interfaces.ISourceDocumentMethods.Exists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a document exists.
            </summary>
            <param name="collectionGuid">Collection GUID.</param>
            <param name="documentGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="T:View.Sdk.Lexi.ViewLexiSdk">
            <summary>
            View Lexi search SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Lexi.ViewLexiSdk.Collection">
            <summary>
            Collection methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Lexi.ViewLexiSdk.SourceDocument">
            <summary>
            Source document methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Lexi.ViewLexiSdk.IngestQueue">
            <summary>
            Ingest queue methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Lexi.ViewLexiSdk.Enumerate">
            <summary>
            Enumerate methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Lexi.ViewLexiSdk.Search">
            <summary>
            Search methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Lexi.ViewLexiSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="T:View.Sdk.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ProcessingEndpoint">
            <summary>
            Data flow endpoint for processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ProcessingAccessKey">
            <summary>
            Access key for processing endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CleanupEndpoint">
            <summary>
            Data flow endpoint for cleanup processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CleanupAccessKey">
            <summary>
            Access key for cleanup endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.ImageTextExtraction">
            <summary>
            Boolean indicating whether or not text should be extracted from images.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.TopTerms">
            <summary>
            Number of top terms to request.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CaseInsensitive">
            <summary>
            Enable or disable case insensitive text processing.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.IncludeFlattened">
            <summary>
            Enable or disable inclusion of flattened representation of processed content.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.UdrEndpoint">
            <summary>
            Udr endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogType">
            <summary>
            Data catalog type.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogEndpoint">
            <summary>
            Data catalog endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogAccessKey">
            <summary>
            Data catalog access key.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.DataCatalogCollection">
            <summary>
            Data catalog collection identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.MaxContentLength">
            <summary>
            Maximum content length.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.RetentionMinutes">
            <summary>
            The number of minutes to retain the generated document.
            </summary>
        </member>
        <member name="P:View.Sdk.MetadataRule.CreatedUtc">
            <summary>
            Creation timestamp.
            </summary>
        </member>
        <member name="M:View.Sdk.MetadataRule.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.ModelApiTypeEnum">
            <summary>
            Model API type.
            </summary>
        </member>
        <member name="F:View.Sdk.ModelApiTypeEnum.Ollama">
            <summary>
            Ollama.
            </summary>
        </member>
        <member name="F:View.Sdk.ModelApiTypeEnum.OpenAi">
            <summary>
            OpenAi.
            </summary>
        </member>
        <member name="T:View.Sdk.ModelConfiguration">
            <summary>
            Model configuration.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.ModelName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.Embeddings">
            <summary>
            Model is capable of being used for embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.Completions">
            <summary>
            Model is capable of being used for embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.ContextSize">
            <summary>
            Gets or sets the context size (input tokens) for the model.
            Default: 4096. Valid range: 1 to Int32.Max.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.MaxOutputTokens">
            <summary>
            Gets or sets the maximum output tokens the model can generate.
            Default: 4096. Valid range: 1 to 2,000,000.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.Temperature">
            <summary>
            Gets or sets the temperature for output randomness.
            Default: 0.2. Valid range: 0.0 to 2.0.
            Lower values make output more deterministic, higher values more creative.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.TopP">
            <summary>
            Gets or sets the nucleus sampling parameter.
            Default: 1.0. Valid range: 0.0 to 1.0.
            Controls diversity via nucleus sampling: 0.5 means half of all likelihood-weighted options are considered.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.TopK">
            <summary>
            Gets or sets the top-k sampling parameter.
            Default: 40. Valid range: 1 to 100.
            Limits the number of highest probability vocabulary tokens to keep for top-k filtering.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.FrequencyPenalty">
            <summary>
            Gets or sets the frequency penalty to reduce repetition.
            Default: 0.0. Valid range: -2.0 to 2.0.
            Positive values decrease the likelihood of repeating tokens based on their frequency.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.PresencePenalty">
            <summary>
            Gets or sets the presence penalty to encourage topic diversity.
            Default: 0.0. Valid range: -2.0 to 2.0.
            Positive values decrease the likelihood of repeating any tokens that have appeared.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.EnableStreaming">
            <summary>
            Gets or sets whether streaming mode is enabled for this model.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.TimeoutMs">
            <summary>
            Request timeout.  Default is 30000 (30 seconds).
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelConfiguration.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.ModelConfiguration.#ctor">
            <summary>
            Model configuration.
            </summary>
        </member>
        <member name="T:View.Sdk.ModelEndpoint">
            <summary>
            Model endpoint.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.EndpointUrl">
            <summary>
            Endpoint URL, e.g. http://localhost:8000/
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.BearerToken">
            <summary>
            Bearer token.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.ApiType">
            <summary>
            Model API type.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.TimeoutMs">
            <summary>
            Request timeout.  Default is 30000 (30 seconds).
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelEndpoint.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.ModelEndpoint.#ctor">
            <summary>
            Model endpoint.
            </summary>
        </member>
        <member name="T:View.Sdk.ModelProfile">
            <summary>
            Model profiles.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.ModelConfigurationGUID">
            <summary>
            Model configuration GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.ModelEndpointGUID">
            <summary>
            Model endpoint GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.ModelProfile.CreatedUtc">
            <summary>
            Created.
            </summary>
        </member>
        <member name="M:View.Sdk.ModelProfile.#ctor">
            <summary>
            Model profile.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteErrorEnum">
            <summary>
            Multi delete error codes.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.ObjectNotFound">
            <summary>
            ObjectNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.PoolNotFound">
            <summary>
            PoolNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.BucketNotFound">
            <summary>
            BucketNotFound.
            </summary>
        </member>
        <member name="F:View.Sdk.MultiDeleteErrorEnum.InternalError">
            <summary>
            InternalError.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteRequest">
            <summary>
            Multi-delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteRequest.Quiet">
            <summary>
            Enable quiet mode.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteRequest.Objects">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="M:View.Sdk.MultiDeleteRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.MultiDeleteResult">
            <summary>
            Multi-delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Request">
            <summary>
            Request.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Quiet">
            <summary>
            Enable quiet mode.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Deleted">
            <summary>
            List of deleted objects.
            </summary>
        </member>
        <member name="P:View.Sdk.MultiDeleteResult.Errors">
            <summary>
            List of error objects.
            </summary>
        </member>
        <member name="M:View.Sdk.MultiDeleteResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Node">
            <summary>
            Node.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.InstanceType">
            <summary>
            Software instance type.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.LastStartUtc">
            <summary>
            Last start timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Node.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Node.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ObjectLock">
            <summary>
            Object lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.IsReadLock">
            <summary>
            Boolean indicating if this is a read lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.IsWriteLock">
            <summary>
            Boolean indicating if this is a write lock.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectLock.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectLock.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.ObjectMetadata">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ParentGUID">
            <summary>
            Parent GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.TenantName">
            <summary>
            Tenant name.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.PoolGUID">
            <summary>
            Pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.BucketName">
            <summary>
            Bucket name.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.EncryptionKeyGUID">
            <summary>
            Encryption key GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataCatalogDocumentGUID">
            <summary>
            Data catalog document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.CrawlOperationGUID">
            <summary>
            Crawl operation GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ProcessingSuccess">
            <summary>
            Boolean indicating if processing was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsLatest">
            <summary>
            Boolean indicating if this is the latest version.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsDeleteMarker">
            <summary>
            Boolean indicating if this is a delete marker.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.IsLocal">
            <summary>
            Boolean indicating if the object is local.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SourceUrl">
            <summary>
            Source URL.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.ExpirationUtc">
            <summary>
            Expiration timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.LastAccessUtc">
            <summary>
            Last access timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.LastModifiedUtc">
            <summary>
            Last modified timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectMetadata.DataTable">
            <summary>
            Data table.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectMetadata.Copy(View.Sdk.Serialization.Serializer,View.Sdk.ObjectMetadata,System.Boolean)">
            <summary>
            Create a copy.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="obj">Object metadata.</param>
            <param name="includeData">True to include data.</param>
            <returns>Object metadata.</returns>
        </member>
        <member name="T:View.Sdk.ObjectStatistics">
            <summary>
            Object statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectStatistics.Objects">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.ObjectStatistics.Bytes">
            <summary>
            Number of bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.ObjectStatistics.#ctor(System.Int32,System.Int64)">
            <summary>
            Instantiate.
            </summary>
            <param name="objects">Number of objects.</param>
            <param name="bytes">Number of bytes.</param>
        </member>
        <member name="T:View.Sdk.ObjectWriteModeEnum">
            <summary>
            Specify whether the object key or GUID is used to write to the storage pool as the object identifier.
            </summary>
        </member>
        <member name="F:View.Sdk.ObjectWriteModeEnum.KEY">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="F:View.Sdk.ObjectWriteModeEnum.GUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="T:View.Sdk.Permission">
            <summary>
            Permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.ResourceTypes">
            <summary>
            Resource types.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.OperationTypes">
            <summary>
            Operation types.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.PermissionType">
            <summary>
            Permission type.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.IsProtected">
            <summary>
            Is protected.
            </summary>
        </member>
        <member name="P:View.Sdk.Permission.CreatedUtc">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Permission.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Posting">
            <summary>
            A posting from a parsed document.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.Term">
            <summary>
            The token.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.Count">
            <summary>
            The frequency with which the token occurs.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.AbsolutePositions">
            <summary>
            The absolute positions in the token list where the token appears.
            </summary>
        </member>
        <member name="P:View.Sdk.Posting.RelativePositions">
            <summary>
            The relative positions in the token list where the token appears.
            </summary>
        </member>
        <member name="M:View.Sdk.Posting.#ctor">
            <summary>
            Instantiates the Token.
            </summary>
        </member>
        <member name="M:View.Sdk.Posting.#ctor(System.String)">
            <summary>
            Instantiates the Token.
            </summary>
            <param name="value">The token.</param>
        </member>
        <member name="T:View.Sdk.Processor.CleanupRequest">
            <summary>
            Cleanup request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.GUID">
            <summary>
            Cleanup request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Async">
            <summary>
            Boolean indicating whether or not the request should be processed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Tenant">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Pool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Bucket">
            <summary>
            Bucket metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.DataRepository">
            <summary>
            Data repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.Object">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupRequest.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.CleanupRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.CleanupResult">
            <summary>
            Cleanup result.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResult.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResult.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.CleanupResult.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.CleanupResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.CleanupMethods">
            <summary>
            Cleanup methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.CleanupMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
            <param name="sdk">View SDK base instance.</param>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.CleanupMethods.Process(View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.StoragePool,View.Sdk.BucketMetadata,View.Sdk.ObjectMetadata,View.Sdk.MetadataRule,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,View.Sdk.GraphRepository,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.LexiEmbeddingsMethods">
            <summary>
            Lexi embeddings methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.LexiEmbeddingsMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
            <param name="sdk">View SDK base instance.</param>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.LexiEmbeddingsMethods.Process(View.Sdk.SearchResult,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.ProcessorMethods">
            <summary>
            Processor methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.ProcessorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
            <param name="sdk">View SDK base instance.</param>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.ProcessorMethods.Process(System.Guid,System.Guid,View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.ProcessorMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.ProcessorMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.SemanticCellExtractionMethods">
            <summary>
            Semantic cell extraction methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.SemanticCellExtractionMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.SemanticCellExtractionMethods.Process(View.Sdk.Processor.SemanticCellExtractionRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.TypeDetectorMethods">
            <summary>
            Type detector methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.TypeDetectorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
            <param name="sdk">View SDK base instance.</param>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.TypeDetectorMethods.DetectType(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Implementations.UdrGeneratorMethods">
            <summary>
            UDR generator methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.UdrGeneratorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Instantiate.
            </summary>
            <param name="sdk">View SDK base instance.</param>
        </member>
        <member name="M:View.Sdk.Processor.Implementations.UdrGeneratorMethods.GenerateUdr(View.Sdk.UdrDocumentRequest,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.ICleanupMethods">
            <summary>
            Cleanup methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.ICleanupMethods.Process(View.Sdk.TenantMetadata,View.Sdk.Collection,View.Sdk.StoragePool,View.Sdk.BucketMetadata,View.Sdk.ObjectMetadata,View.Sdk.MetadataRule,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,View.Sdk.GraphRepository,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Cleanup a document.  This variant is used by the storage server.
            </summary>
            <param name="tenant">Tenant metadata.</param>
            <param name="collection">Collection metadata.</param>
            <param name="bucket">Bucket metadata.</param>
            <param name="pool">Storage pool metadata.</param>
            <param name="obj">Object metadata.</param>
            <param name="mdRule">Metadata rule.</param>
            <param name="embedRule">Embeddings rule.</param>
            <param name="vectorRepo">Vector repository.</param>
            <param name="graphRepo">Graph repository.</param>
            <param name="async">Boolean indicating if the task should be performed asynchronously.</param>
            <param name="token">Cancellation token.</param>
            <returns>Cleanup response.</returns>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.ILexiEmbeddingsMethods">
            <summary>
            Lexi embeddings methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.ILexiEmbeddingsMethods.Process(View.Sdk.SearchResult,View.Sdk.EmbeddingsRule,View.Sdk.VectorRepository,System.Threading.CancellationToken)">
            <summary>
            Process a document.
            </summary>
            <param name="results">Search results.</param>
            <param name="embedRule">Embeddings rule.</param>
            <param name="vectorRepo">Vector repository.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.IProcessorMethods">
            <summary>
            Processor methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.IProcessorMethods.Process(System.Guid,System.Guid,View.Sdk.ObjectMetadata,System.Threading.CancellationToken)">
            <summary>
            Process a document.  This variant is used by the storage server.
            </summary>
            <param name="mdRuleGuid">Metadata rule GUID.</param>
            <param name="embedRuleGuid">Embeddings rule GUID.</param>
            <param name="obj">Object metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Processor response.</returns>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.IProcessorMethods.Enumerate(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate processor tasks.
            </summary>
            <param name="maxKeys">Maximum number of keys to return.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result containing processor tasks.</returns>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.IProcessorMethods.Retrieve(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a processor task by GUID.
            </summary>
            <param name="guid">Processor task GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Processor task.</returns>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.ISemanticCellExtractionMethods">
            <summary>
            Semantic cell extraction methods interface (processing pipeline).
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.ISemanticCellExtractionMethods.Process(View.Sdk.Processor.SemanticCellExtractionRequest,System.Threading.CancellationToken)">
            <summary>
            Extract semantic cells from a document.
            </summary>
            <param name="request">Semantic cell extraction request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell extraction result.</returns>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.ITypeDetectorMethods">
            <summary>
            Type detector methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.ITypeDetectorMethods.DetectType(System.String,System.Threading.CancellationToken)">
            <summary>
            Detect the type of a document.
            </summary>
            <param name="jsonContent">JSON content to analyze.</param>
            <param name="token">Cancellation token.</param>
            <returns>Type detection response.</returns>
        </member>
        <member name="T:View.Sdk.Processor.Interfaces.IUdrGeneratorMethods">
            <summary>
            UDR generator methods interface.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.Interfaces.IUdrGeneratorMethods.GenerateUdr(View.Sdk.UdrDocumentRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Process document.
            </summary>
            <param name="doc">Document request.</param>
            <param name="filename">Filename containing data.  Setting this value will overwrite the 'Data' property in the document request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Document response.</returns>
        </member>
        <member name="T:View.Sdk.Processor.MqMessage">
            <summary>
            Message queue message.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Version">
            <summary>
            Message version.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Type">
            <summary>
            Type detection request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.MqMessage.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.MqMessage.#ctor">
            <summary>
            Message queue message.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.MqMessageTypeEnum">
            <summary>
            Message queue type.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.TypeDetectionRequest">
            <summary>
            TypeDetectionRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.TypeDetectionResponse">
            <summary>
            TypeDetectionResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.SemanticCellExtractionRequest">
            <summary>
            SemanticCellExtractionRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.SemanticCellExtractionResponse">
            <summary>
            SemanticCellExtractionResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.UdrGenerationRequest">
            <summary>
            UdrGenerationRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.UdrGenerationResponse">
            <summary>
            UdrGenerationResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsFindRequest">
            <summary>
            EmbeddingsFindRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsFindResponse">
            <summary>
            EmbeddingsFindResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsGenerationRequest">
            <summary>
            EmbeddingsGenerationRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.EmbeddingsGenerationResponse">
            <summary>
            EmbeddingsGenerationResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistDataCatalogRequest">
            <summary>
            PersistDataCatalogRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistDataCatalogResponse">
            <summary>
            PersistDataCatalogResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistVectorRequest">
            <summary>
            PersistVectorRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistVectorResponse">
            <summary>
            PersistVectorResponse.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistGraphRequest">
            <summary>
            PersistGraphRequest.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageTypeEnum.PersistGraphResponse">
            <summary>
            PersistGraphResponse.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.MqMessageVersionEnum">
            <summary>
            Message version.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.MqMessageVersionEnum.v1_0">
            <summary>
            Version 1.0.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorRequest">
            <summary>
            Processor request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorRequest.Object">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorResult">
            <summary>
            Processor result.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Type">
            <summary>
            Type result.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Udr">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Source">
            <summary>
            Source document in data catalog.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorResult.Vector">
            <summary>
            Embeddings document.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorResult.#ctor">
            <summary>
            Processor result.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTask">
            <summary>
            Processor task.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CrawlPlanGUID">
            <summary>
            Crawl plan GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CrawlOperationGUID">
            <summary>
            Crawl operation GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.MetadataRuleGUID">
            <summary>
            Metadata rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.EmbeddingsRuleGUID">
            <summary>
            Embeddings rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.AdditionalData">
            <summary>
            Additional data.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.LastUpdateUtc">
            <summary>
            UTC timestamp from last update.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTask.CreatedUtc">
            <summary>
            UTC timestamp from creation.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTask.#ctor">
            <summary>
            Processor task.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskRequest">
            <summary>
            Processor task request.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.Type">
            <summary>
            Processor task type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.InputFile">
            <summary>
            Input file handle.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskRequest.OutputFile">
            <summary>
            Output file handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTaskRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskResult">
            <summary>
            Processor task result.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.Type">
            <summary>
            Processor task type.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.Error">
            <summary>
            Error, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.InputFile">
            <summary>
            Input file handle.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ProcessorTaskResult.OutputFile">
            <summary>
            Output file handle.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ProcessorTaskResult.#ctor">
            <summary>
            Processor task result.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ProcessorTaskTypeEnum">
            <summary>
            Processor task type.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.Failure">
            <summary>
            Failure.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.Chunking">
            <summary>
            Chunking.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.EmbeddingsGeneration">
            <summary>
            EmbeddingsGeneration.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.FindEmbeddings">
            <summary>
            FindEmbeddings.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.Initiate">
            <summary>
            Initiate.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistGraph">
            <summary>
            PersistGraph.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistUdr">
            <summary>
            PersistUdr.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.PersistEmbeddings">
            <summary>
            PersistEmbeddings.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.SemanticCellExtraction">
            <summary>
            SemanticCellExtraction.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.TypeDetection">
            <summary>
            TypeDetection.
            </summary>
        </member>
        <member name="F:View.Sdk.Processor.ProcessorTaskTypeEnum.UdrGeneration">
            <summary>
            UdrGeneration.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.SemanticCellExtractionRequest">
            <summary>
            Semantic cell extraction request (processing pipeline).
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionRequest.DocumentType">
            <summary>
            Document type to parse.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionRequest.MetadataRule">
            <summary>
            Metadata rule with extractor configuration.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellExtractionRequest.Data">
            <summary>
            Base64-encoded document data.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.SemanticCellExtractionRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.SemanticCellMetadataRule">
            <summary>
            Semantic cell metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellMetadataRule.SemanticCellEndpoint">
            <summary>
            Endpoint for the semantic cell extractor service.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellMetadataRule.MinChunkContentLength">
            <summary>
            Minimum chunk content length.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellMetadataRule.MaxChunkContentLength">
            <summary>
            Maximum chunk content length.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.SemanticCellMetadataRule.ShiftSize">
            <summary>
            Shift size for chunking.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.SemanticCellMetadataRule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Processor.ViewProcessorSdk">
            <summary>
            View Processor SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.Processor">
            <summary>
            Processor methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.Cleanup">
            <summary>
            Cleanup methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.LexiEmbeddings">
            <summary>
            Lexi embeddings methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.TypeDetector">
            <summary>
            Type detector methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.UdrGenerator">
            <summary>
            UDR generator methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Processor.ViewProcessorSdk.SemanticCellExtraction">
            <summary>
            Semantic cell extraction methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Processor.ViewProcessorSdk.#ctor(System.Guid,System.String,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
            <param name="xToken">
            Optional token to be included as the <c>x-token</c> header in API requests that require additional authorization.
            This is used in cases where certain endpoints require an extra level of authentication.
            </param>
        </member>
        <member name="T:View.Sdk.LexiEmbeddingsRequest">
            <summary>
            Lexi embeddings request.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Async">
            <summary>
            Boolean indicating whether or not the request should be processed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Tenant">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.Results">
            <summary>
            Search results.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsRequest.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="M:View.Sdk.LexiEmbeddingsRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.LexiEmbeddingsResult">
            <summary>
            Lexi embeddings result.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.GUID">
            <summary>
            Processor request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.Async">
            <summary>
            Boolean indicating whether or not the task was executed asynchronously.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.LexiEmbeddingsResult.Vector">
            <summary>
            Embeddings documents.
            </summary>
        </member>
        <member name="M:View.Sdk.LexiEmbeddingsResult.#ctor">
            <summary>
            Lexi embeddings result.
            </summary>
        </member>
        <member name="T:View.Sdk.QueryFilter">
            <summary>
            A filter for the query.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.CreatedAfter">
            <summary>
            Timestamp, in UTC time, after which an entry must have been created.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.CreatedBefore">
            <summary>
            Timestamp, in UTC time, before which an entry must have been created.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Terms">
            <summary>
            List of terms upon which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.MimeTypes">
            <summary>
            List of content-types on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Prefixes">
            <summary>
            List of key prefix values on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.Suffixes">
            <summary>
            List of key suffix values on which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.QueryFilter.SchemaFilters">
            <summary>
            List of schema filters upon which to match.
            </summary>
        </member>
        <member name="M:View.Sdk.QueryFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Role">
            <summary>
            Role.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.Active">
            <summary>
            Is active.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.IsProtected">
            <summary>
            Is protected.
            </summary>
        </member>
        <member name="P:View.Sdk.Role.CreatedUtc">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Role.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.RolePermissionMap">
            <summary>
            Role Permission Map.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.RoleGUID">
            <summary>
            Role GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.PermissionGUID">
            <summary>
            Permission GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.Active">
            <summary>
            Is active.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.IsProtected">
            <summary>
            Is protected.
            </summary>
        </member>
        <member name="P:View.Sdk.RolePermissionMap.CreatedUtc">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.RolePermissionMap.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.RolePermissionMap.#ctor(System.Guid,System.Guid)">
            <summary>
            Instantiate.
            </summary>
            <param name="roleGuid">Role GUID.</param>
            <param name="permissionGuid">Permission GUID.</param>
        </member>
        <member name="T:View.Sdk.ScheduleIntervalEnum">
            <summary>
            Schedule interval enum.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.OneTime">
            <summary>
            OneTime.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.SecondsInterval">
            <summary>
            SecondsInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.MinutesInterval">
            <summary>
            MinutesInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.HoursInterval">
            <summary>
            HoursInterval.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleIntervalEnum.DaysInterval">
            <summary>
            DaysInterval.
            </summary>
        </member>
        <member name="T:View.Sdk.ScheduleTypeEnum">
            <summary>
            Schedule type.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleTypeEnum.Scheduled">
            <summary>
            Scheduled.
            </summary>
        </member>
        <member name="F:View.Sdk.ScheduleTypeEnum.Interactive">
            <summary>
            Interactive.
            </summary>
        </member>
        <member name="T:View.Sdk.SchemaConditionEnum">
            <summary>
            Available conditions for search filters.
            </summary> 
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Exists">
            <summary>
            The property exists.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Equals">
            <summary>
            The left and right terms are equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.NotEquals">
            <summary>
            The left and right terms are not equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.GreaterThan">
            <summary>
            The left term is greater than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.GreaterThanOrEqualTo">
            <summary>
            The left term is greater than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.LessThan">
            <summary>
            The left term is less than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.LessThanOrEqualTo">
            <summary>
            The left term is less than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsNull">
            <summary>
            The left term is null.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsNotNull">
            <summary>
            The left term is not null.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.Contains">
            <summary>
            The left term is contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.ContainsNot">
            <summary>
            The left term is not contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.StartsWith">
            <summary>
            The left term starts with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.EndsWith">
            <summary>
            The left term ends with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SchemaConditionEnum.IsType">
            <summary>
            The element is of a given type.
            </summary>
        </member>
        <member name="T:View.Sdk.SchemaFilter">
            <summary>
            A search filter.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Property">
            <summary>
            The schema element upon which to evaluate.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Condition">
            <summary>
            The condition by which the schema element, or its value, is evaluated.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaFilter.Value">
            <summary>
            The value to be evaluated using the specified condition against the specified schema element.
            When using GreaterThan, GreaterThanOrEqualTo, LessThan, or LessThanOrEqualTo, the value supplied must be convertible to decimal.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaFilter.#ctor(System.String,View.Sdk.SchemaConditionEnum,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="field">Field.</param>
            <param name="condition">Condition.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:View.Sdk.SchemaFilter.EvaluateValue(System.Object)">
            <summary>
            Evaluates a value against the search filter.
            </summary>
            <param name="value">Value.</param>
            <returns>True if matched.</returns>
        </member>
        <member name="T:View.Sdk.SchemaResult">
            <summary>
            Schema result.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Type">
            <summary>
            Data type.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Rows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Columns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Irregular">
            <summary>
            Flag to indicate if the geometry of the object is irregular.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.MaxDepth">
            <summary>
            Maximum depth observed in the object.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumObjects">
            <summary>
            Number of objects.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumArrays">
            <summary>
            Number of arrays.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.NumKeyValues">
            <summary>
            Number of key values.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Schema">
            <summary>
            Schema of the document.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Metadata">
            <summary>
            Metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.SchemaResult.Flattened">
            <summary>
            Flattened representation of the object.
            </summary>
        </member>
        <member name="M:View.Sdk.SchemaResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.SearchConditionEnum">
            <summary>
            Available conditions for search filters.
            </summary> 
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.Equals">
            <summary>
            The left and right terms are equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.NotEquals">
            <summary>
            The left and right terms are not equal to one another.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.GreaterThan">
            <summary>
            The left term is greater than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.GreaterThanOrEqualTo">
            <summary>
            The left term is greater than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.LessThan">
            <summary>
            The left term is less than the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.LessThanOrEqualTo">
            <summary>
            The left term is less than or equal to the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.IsNull">
            <summary>
            The left term is null.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.IsNotNull">
            <summary>
            The left term is not null.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.Contains">
            <summary>
            The left term is contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.ContainsNot">
            <summary>
            The left term is not contained within the right term (list).
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.StartsWith">
            <summary>
            The left term starts with the right term.
            </summary>
        </member>
        <member name="F:View.Sdk.SearchConditionEnum.EndsWith">
            <summary>
            The left term ends with the right term.
            </summary>
        </member>
        <member name="T:View.Sdk.SearchFilter">
            <summary>
            A search filter.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Field">
            <summary>
            The field upon which to match.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Condition">
            <summary>
            The condition by which the parsed document's content is evaluated against the supplied value.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchFilter.Value">
            <summary>
            The value to be evaluated using the specified condition against the parsed document's content.
            When using GreaterThan, GreaterThanOrEqualTo, LessThan, or LessThanOrEqualTo, the value supplied must be convertible to decimal.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchFilter.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchFilter.#ctor(System.String,View.Sdk.SearchConditionEnum,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="field">Field.</param>
            <param name="condition">SearchCondition.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:View.Sdk.SearchFilter.EvaluateValue(System.Object)">
            <summary>
            Evaluates a value against the search filter.
            </summary>
            <param name="value">Value.</param>
            <returns>True if matched.</returns>
        </member>
        <member name="T:View.Sdk.SearchResult">
            <summary>
            Search result.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.ProcessingRequestGUID">
            <summary>
            Processing request GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.EndOfResults">
            <summary>
            Boolean indicating end of results.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.ContinuationToken">
            <summary>
            Continuation token to use when continuing the search.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.RecordsRemaining">
            <summary>
            Number of candidate records remaining in the search.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Documents">
            <summary>
            Documents that matched the query.
            </summary>
        </member>
        <member name="P:View.Sdk.SearchResult.Embeddings">
            <summary>
            Embeddings documents generated from matched documents.
            </summary>
        </member>
        <member name="M:View.Sdk.SearchResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.PdfModeEnum">
            <summary>
            PDF mode.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.PdfModeEnum.FlatTextExtraction">
            <summary>
            FlatTextExtraction.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.PdfModeEnum.BoundingBoxExtraction">
            <summary>
            BoundingBoxExtraction.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.PdfOptions">
            <summary>
            PDF options.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.Mode">
            <summary>
            PDF processing mode.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.ReturnMarkup">
            <summary>
            True to indicate that the marked-up PDF including bounding boxes should be returned.
            Only applicable when Mode is set to BoundingBoxExtraction.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.PdfOptions.RetainArtifact">
            <summary>
            True to indicate that the marked-up PDF file should be preserved in the temporary directory.
            Only applicable when Mode is set to BoundingBoxExtraction.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.PdfOptions.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCell">
            <summary>
            Semantic cell.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.CellType">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Length">
            <summary>
            Length.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Binary">
            <summary>
            Binary data.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.UnorderedList">
            <summary>
            Unordered list elements.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.OrderedList">
            <summary>
            Ordered list elements.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Table">
            <summary>
            Data table.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Object">
            <summary>
            Object of semi-structured data such as JSON or XML.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Array">
            <summary>
            Array of semi-structured data such as JSON or XML.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Chunks">
            <summary>
            Chunks.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCell.Children">
            <summary>
            Children.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.#ctor(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell},System.Collections.Generic.List{View.Sdk.Semantic.SemanticChunk})">
            <summary>
            Instantiate.
            </summary>
            <param name="children">Child semantic cells.</param>
            <param name="chunks">Semantic chunks.</param>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FromDataRow(System.Data.DataRow)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <returns>SemanticCell.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FromDataTable(System.Data.DataTable,System.Boolean)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="distinct">True to only return distinct records.</param>
            <returns>List of SemanticCell.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllCells(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve all semantic cells in a list through recursion.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllCellsByType(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell},View.Sdk.Semantic.SemanticCellTypeEnum)">
            <summary>
            Retrieve all semantic cells in a list through recursion by type of semantic cell.
            </summary>
            <param name="cells">Semantic cells.</param>
            <param name="type">Type.</param>
            <returns>Semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllCellsWithChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve all semantic cells with chunks from a list through recursion.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve all semantic chunks.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.AllChunksBySHA256(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell},System.String)">
            <summary>
            Retrieve all semantic chunks matching a given SHA-256 value.
            </summary>
            <param name="cells">Semantic cells.</param>
            <param name="sha256Hash">SHA-256.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountEmbeddings(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of embeddings in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of embeddings.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticCells(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of semantic cells in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of semantic chunks in a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of chunks.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountBytes(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Count the number of bytes in chunks within a list of semantic cells.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Number of bytes.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountSemanticCells">
            <summary>
            Count the number of semantic cells in this semantic cell.
            </summary>
            <returns>Number of semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountEmbeddings">
            <summary>
            Count the number of embeddings contained within the semantic cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.CountBytes">
            <summary>
            Count the number of bytes contained within chunks within the semantic cell.
            </summary>
            <returns>Number of bytes.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.GetDistinctSHA256Hashes">
            <summary>
            Retrieve the distinct SHA-256 hash values from the chunks contained within in this cell and its children.
            </summary>
            <returns>SHA-256 hash values.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.GetDistinctSHA256Hashes(System.Collections.Generic.IEnumerable{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve the distinct SHA-256 hash values from the chunks contained within a list of semantic cells and their children.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>SHA-256 hash values.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCell.FindCellsWithChunks(System.Collections.Generic.List{View.Sdk.Semantic.SemanticCell})">
            <summary>
            Retrieve semantic cells that contain chunks.
            </summary>
            <param name="cells">Semantic cells.</param>
            <returns>Enumerable of cells that contain chunks.</returns>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellRequest">
            <summary>
            Semantic cell request.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MinChunkContentLength">
            <summary>
            Gets or sets the minimum length of chunk content.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.MaxChunkContentLength">
            <summary>
            Gets or sets the maximum length of chunk content.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellRequest.Data">
            <summary>
            Data.
            When serializing, convert to a base64-encoded string.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCellRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellResult">
            <summary>
            Semantic cell result.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResult.Success">
            <summary>
            Boolean indicating success.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResult.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResult.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticCellResult.Data">
            <summary>
            Additional data, if requested.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticCellResult.#ctor">
            <summary>
            Semantic cell result.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticCellTypeEnum">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.List">
            <summary>
            List.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:View.Sdk.Semantic.SemanticCellTypeEnum.Array">
            <summary>
            Array.
            </summary>
        </member>
        <member name="T:View.Sdk.Semantic.SemanticChunk">
            <summary>
            Semantic chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Start">
            <summary>
            Start position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.End">
            <summary>
            End position.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Length">
            <summary>
            Length.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Binary">
            <summary>
            Binary data.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Semantic.SemanticChunk.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Byte[],System.Collections.Generic.List{System.Single})">
            <summary>
            Instantiate.
            </summary>
            <param name="position">Position.</param>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="content">Text content.</param>
            <param name="binary">Binary content.</param>
            <param name="embeddings">Embeddings.</param>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.FromDataRow(System.Data.DataRow)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <returns>SemanticChunk.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.SemanticChunk.FromDataTable(System.Data.DataTable)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <returns>List of SemanticChunk.</returns>
        </member>
        <member name="T:View.Sdk.Semantic.ViewSemanticCellSdk">
            <summary>
            View Semantic Cell SDK.
            </summary>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/v1.0/tenants/tenant-guid/processing/semanticcell.</param>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.Process(View.Sdk.Semantic.SemanticCellRequest,System.Threading.CancellationToken)">
            <summary>
            Extract semantic cells from a document.
            </summary>
            <param name="scReq">Semantic cell extraction request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell response.</returns>
        </member>
        <member name="M:View.Sdk.Semantic.ViewSemanticCellSdk.Process(View.Sdk.DocumentTypeEnum,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Extract semantic cells from a document.
            </summary>
            <param name="docType">Document type.</param>
            <param name="data">Data.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell response.</returns>
        </member>
        <member name="T:View.Sdk.Serialization.DateTimeConverter">
            <summary>
            DateTime converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="dateTimeValue">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.ExceptionConverter`1">
            <summary>
            Exception converter.
            </summary>
            <typeparam name="TExceptionType">Exception type.</typeparam>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.CanConvert(System.Type)">
            <summary>
            Can convert.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <returns>True if convertible.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExceptionConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.ExpressionConverter">
            <summary>
            Expression converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.ExpressionConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">Options.</param>
            <returns>Expr.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.ExpressionConverter.Write(System.Text.Json.Utf8JsonWriter,ExpressionTree.Expr,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">Options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.IPAddressConverter">
            <summary>
            IP address converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.IPAddressConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>IPAddress.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.IPAddressConverter.Write(System.Text.Json.Utf8JsonWriter,System.Net.IPAddress,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.NameValueCollectionConverter">
            <summary>
            NameValueCollection converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.NameValueCollectionConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>NameValueCollection.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.NameValueCollectionConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Specialized.NameValueCollection,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.InstantiateConverters">
            <summary>
            Instantiation method to support fixups for various environments, e.g. Unity.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeJson``1(System.Byte[])">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">Bytes containing JSON.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize object to JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeJson(System.Exception,System.Boolean)">
            <summary>
            Serialize an exception to JSON.
            </summary>
            <param name="e">Exception.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.CopyObject``1(System.Object)">
            <summary>
            Copy an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="o">Object.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeXml``1(System.Byte[])">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">XML data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.DeserializeXml``1(System.String)">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="xml">XML string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.Serializer.SerializeXml(System.Object,System.Boolean)">
            <summary>
            Serialize XML.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>XML string.</returns>
        </member>
        <member name="T:View.Sdk.Serialization.StrictEnumConverter`1">
            <summary>
            Strict enum converter.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read.
            </summary>
            <param name="reader">Reader.</param>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write.
            </summary>
            <param name="writer">Writer.</param>
            <param name="value">Value.</param>
            <param name="options">JSON serializer options.</param>
        </member>
        <member name="T:View.Sdk.Serialization.StrictEnumConverterFactory">
            <summary>
            Strict enum converter factory.
            </summary>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverterFactory.CanConvert(System.Type)">
            <summary>
            Can convert.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <returns>True if convertible.</returns>
        </member>
        <member name="M:View.Sdk.Serialization.StrictEnumConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Create converter.
            </summary>
            <param name="typeToConvert">Type to convert.</param>
            <param name="options">JSON serializer options.</param>
            <returns>JsonConverter.</returns>
        </member>
        <member name="T:View.Sdk.SeverityEnum">
            <summary>
            Message severity.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Debug">
            <summary>
            Debug messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Info">
            <summary>
            Informational messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Warn">
            <summary>
            Warning messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Error">
            <summary>
            Error messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Alert">
            <summary>
            Alert messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Critical">
            <summary>
            Critical messages.
            </summary>
        </member>
        <member name="F:View.Sdk.SeverityEnum.Emergency">
            <summary>
            Emergency messages.
            </summary>
        </member>
        <member name="T:View.Sdk.SoftwareInstanceTypeEnum">
            <summary>
            Software instance type.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.ConfigServer">
            <summary>
            ConfigServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DataConnectorServer">
            <summary>
            DataConnectorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DirectorServer">
            <summary>
            DirectorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.DocumentProcessorServer">
            <summary>
            DocumentProcessorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.EmbeddingsServer">
            <summary>
            EmbeddingsServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.LexiServer">
            <summary>
            LexiServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.OrchestratorServer">
            <summary>
            OrchestratorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.ProcessorServer">
            <summary>
            ProcessorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.SemanticCellExtractorServer">
            <summary>
            SemanticCellExtractorServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.StorageServer">
            <summary>
            StorageServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.SwitchboardServer">
            <summary>
            SwitchboardServer.
            </summary>
        </member>
        <member name="F:View.Sdk.SoftwareInstanceTypeEnum.VectorServer">
            <summary>
            VectorServer.
            </summary>
        </member>
        <member name="T:View.Sdk.SourceDocument">
            <summary>
            Source document.
            </summary> 
        </member>
        <member name="P:View.Sdk.SourceDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ProcessingSuccess">
            <summary>
            Boolean indicating if processing was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectKey">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ObjectVersion">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.DocumentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SourceUrl">
            <summary>
            Source URL.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.MD5Hash">
            <summary>
            MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SHA1Hash">
            <summary>
            SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.SHA256Hash">
            <summary>
            SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.ExpirationUtc">
            <summary>
            Expiration timestamp, if any, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.Score">
            <summary>
            Document score.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocument.UdrDocument">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="M:View.Sdk.SourceDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.SourceDocumentStatistics">
            <summary>
            Source document statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.Terms">
            <summary>
            Term count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.DistinctTerms">
            <summary>
            Distinct terms.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.KeyValuePairs">
            <summary>
            Key-value count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticCells">
            <summary>
            Semantic cell count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticCellBytes">
            <summary>
            Semantic cell bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticChunks">
            <summary>
            Semantic chunk count.
            </summary>
        </member>
        <member name="P:View.Sdk.SourceDocumentStatistics.SemanticChunkBytes">
            <summary>
            Semantic chunk bytes.
            </summary>
        </member>
        <member name="M:View.Sdk.SourceDocumentStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.StoragePool">
            <summary>
            Storage pool.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.EncryptionKeyGUID">
            <summary>
            Encryption key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.WriteMode">
            <summary>
            Object key write mode.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.UseSsl">
            <summary>
            Enable or disable SSL.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Endpoint">
            <summary>
            Endpoint URL for the storage pool provider.
            This value should be of the form [protocol]://[hostname]:[port]/ where [protocol] is either http or https.
            This value is required for both Azure and any AWS S3 compatible storage systems (such as Minio).
            </summary> 
        </member>
        <member name="P:View.Sdk.StoragePool.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.SecretKey">
            <summary>
            Secret key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsRegion">
            <summary>
            AWS region.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBucket">
            <summary>
            AWS bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBaseDomain">
            <summary>
            Base URL for AWS S3 compatible storage platforms.  
            This value should be of the form '.hostname.com' to identify 'bucket' as the bucket in 'bucket.hostname.com'.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AwsBaseUrl">
            <summary>
            Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.
            For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.DiskDirectory">
            <summary>
            Disk directory.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AzureAccount">
            <summary>
            Azure account.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.AzureContainer">
            <summary>
            Azure container.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.Compress">
            <summary>
            Compression type.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.EnableReadCaching">
            <summary>
            Flag to enable or disable read caching.
            </summary>
        </member>
        <member name="P:View.Sdk.StoragePool.CreatedUtc">
            <summary>
            Creation timestamp, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.StoragePool.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.BucketAcl">
            <summary>
            Bucket access control list.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAcl.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAcl.Users">
            <summary>
            Users.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAcl.Entries">
            <summary>
            Entries.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.BucketAcl.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.BucketAclEntry">
            <summary>
            Bucket access control list entry.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.CanonicalUser">
            <summary>
            Canonical user.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.EnableRead">
            <summary>
            Enable read permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.EnableReadAcp">
            <summary>
            Enable read ACP permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.EnableWrite">
            <summary>
            Enable write permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.EnableWriteAcp">
            <summary>
            Enable write ACP permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.FullControl">
            <summary>
            Full control permission.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketAclEntry.CreatedUtc">
            <summary>
            Creation time, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.BucketAclEntry.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.BucketTag">
            <summary>
            Bucket tag.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.Key">
            <summary>
            Tag key.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.Value">
            <summary>
            Tag value.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.BucketTag.CreatedUtc">
            <summary>
            Created UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.BucketTag.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.Implementations.BucketMethods">
            <summary>
            Bucket methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Bucket methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.Create(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.RetrieveMetadata(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.RetrieveStatistics(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.RetrieveMany(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.ListObjects(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.Update(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.Delete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.Enumerate(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.RetrieveTags(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.CreateTag(System.Guid,System.Collections.Generic.List{View.Sdk.Storage.BucketTag},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.DeleteTag(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.RetrieveACL(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.CreateACL(System.String,View.Sdk.Storage.BucketAcl,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.BucketMethods.DeleteACL(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Storage.Implementations.MultipartUploadMethods">
            <summary>
            Multipart upload methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Multipart upload methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.Create(System.String,View.Sdk.Storage.MultipartUploadMetadata,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.RetrieveMany(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.Retrieve(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.DeleteUpload(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.CompleteUpload(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.UploadPart(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.RetrievePart(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.MultipartUploadMethods.DeletePart(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Storage.Implementations.ObjectMethods">
            <summary>
            Object methods implementation.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Object methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.Exists(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.Retrieve(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.RetrieveRange(System.String,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.RetrieveMetadata(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.CreateNonChunked(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.CreateChunked(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.CreateExpiration(System.String,System.String,View.Sdk.Expiration,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.RetrieveACL(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.CreateACL(System.String,System.String,View.Sdk.Storage.BucketAcl,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.DeleteACL(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.CreateTags(System.String,System.String,System.Collections.Generic.List{View.Sdk.Storage.BucketTag},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.RetrieveTags(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.DeleteTags(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Storage.Implementations.ObjectMethods.Reprocess(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Storage.Interfaces.IBucketMethods">
            <summary>
            Interface for bucket methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.Create(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Create a bucket.
            </summary>
            <param name="bucket">Bucket metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.RetrieveMetadata(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve bucket metadata.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.RetrieveStatistics(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve bucket statistics.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket statistics.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.RetrieveMany(System.Threading.CancellationToken)">
            <summary>
            Retrieve multiple buckets.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>List of bucket metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.ListObjects(System.String,System.Threading.CancellationToken)">
            <summary>
            Object list.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of bucket metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.Update(View.Sdk.BucketMetadata,System.Threading.CancellationToken)">
            <summary>
            Update bucket.
            </summary>
            <param name="bucket">Bucket metadata.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.Enumerate(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Enumerate bucket contents with pagination support.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="maxKeys">Maximum number of keys to return in the response. Default is 5.</param>
            <param name="token">Cancellation token.</param>
            <returns>BucketEnumerationResult containing objects in the bucket.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.RetrieveTags(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve bucket tags.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of bucket tags.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.CreateTag(System.Guid,System.Collections.Generic.List{View.Sdk.Storage.BucketTag},System.Threading.CancellationToken)">
            <summary>
            Create a bucket tag.
            </summary>
            <param name="buckedGuid">Bucket GUID.</param>
            <param name="tag">Bucket tag list.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created bucket tag.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.DeleteTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket tag.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.RetrieveACL(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve bucket acl.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Bucket acl.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.CreateACL(System.String,View.Sdk.Storage.BucketAcl,System.Threading.CancellationToken)">
            <summary>
            Create bucket acl.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="acl">Bucket acl.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created bucket acl.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IBucketMethods.DeleteACL(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete bucket acl.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Storage.Interfaces.IMultipartUploadMethods">
            <summary>
            Defines operations for managing multipart uploads and their parts.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.Create(System.String,View.Sdk.Storage.MultipartUploadMetadata,System.Threading.CancellationToken)">
            <summary>
            Initiates a new multipart upload session for a specified object in the given bucket.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="obj">Metadata describing the multipart upload.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning metadata for the initiated multipart upload.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.RetrieveMany(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all ongoing multipart uploads for the specified bucket.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning a list of multipart upload metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.Retrieve(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the metadata for a specific multipart upload.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning metadata for the specified multipart upload.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.DeleteUpload(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels and deletes a multipart upload.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning true if the deletion was successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.CompleteUpload(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Completes the multipart upload by assembling previously uploaded parts.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="data">The finalization data or part list used for assembly.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning the metadata of the completed object.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.UploadPart(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Uploads a single part of a multipart upload.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="partNumber">The sequence number of the part being uploaded.</param>
            <param name="data">The string data representing the part's content.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning metadata for the uploaded part.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.RetrievePart(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieves the data for a specific part of a multipart upload.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="partNumber">The sequence number of the part to retrieve.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning the string data of the requested part.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IMultipartUploadMethods.DeletePart(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific part from a multipart upload.
            </summary>
            <param name="bucketGuid">The unique identifier of the bucket.</param>
            <param name="uploadGuid">The unique identifier of the multipart upload.</param>
            <param name="partNumber">The sequence number of the part to delete.</param>
            <param name="token">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation, returning true if the deletion was successful.</returns>
        </member>
        <member name="T:View.Sdk.Storage.Interfaces.IObjectMethods">
            <summary>
            Interface for object methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.Exists(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Check if an object exists in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if the object exists.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.Retrieve(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an object from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Raw object data as string.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.RetrieveRange(System.String,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve a byte range from an object in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="startByte">Start byte position (inclusive).</param>
            <param name="endByte">End byte position (inclusive).</param>
            <param name="token">Cancellation token.</param>
            <returns>Raw object data as string for the specified range.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.RetrieveMetadata(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve object metadata from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an object from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.CreateNonChunked(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a non-chunked object in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="data">Raw object data as string.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object metadata of the created object.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.CreateChunked(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a chunked object in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="data">Raw chunked object data as string.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object metadata of the created object.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.CreateExpiration(System.String,System.String,View.Sdk.Expiration,System.Threading.CancellationToken)">
            <summary>
            Create an object with expiration in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="expiration">Expiration object with expiration date.</param>
            <param name="token">Cancellation token.</param>
            <returns>Return object metadata.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.RetrieveACL(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve object ACL from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object ACL.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.CreateACL(System.String,System.String,View.Sdk.Storage.BucketAcl,System.Threading.CancellationToken)">
            <summary>
            Create object ACL in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="acl">Object ACL.</param>
            <param name="token">Cancellation token.</param>
            <returns>Created object ACL.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.DeleteACL(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete object ACL from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.CreateTags(System.String,System.String,System.Collections.Generic.List{View.Sdk.Storage.BucketTag},System.Threading.CancellationToken)">
            <summary>
            Create tags for an object in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="tags">List of object tags.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of created object tags.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.RetrieveTags(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve tags for an object from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of object tags.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.DeleteTags(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete tags for an object from a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Storage.Interfaces.IObjectMethods.Reprocess(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Trigger reprocessing of an object in a bucket.
            </summary>
            <param name="bucketGuid">Bucket GUID.</param>
            <param name="objectKey">Object key.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:View.Sdk.Storage.MultipartUploadMetadata">
            <summary>
            Multipart upload metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.PoolGUID">
            <summary>
            Pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.OwnerGUID">
            <summary>
            Owner GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.UploadGUID">
            <summary>
            Upload GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.StartedUtc">
            <summary>
            Started UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.LastAccessUtc">
            <summary>
            Last access UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.CreatedUtc">
            <summary>
            Created UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.ExpirationUtc">
            <summary>
            Expiration UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.Owner">
            <summary>
            Owner information.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.MultipartUploadMetadata.Parts">
            <summary>
            Parts list.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.MultipartUploadMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Storage.PartMetadata">
            <summary>
            Part metadata for multipart uploads.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.PartMetadata.PartNumber">
            <summary>
            Part number.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.PartMetadata.ETag">
            <summary>
            ETag of the part.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.PartMetadata.Size">
            <summary>
            Size of the part in bytes.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.PartMetadata.LastModifiedUtc">
            <summary>
            Last modified UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.PartMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.PartMetadata.#ctor(System.Int32)">
            <summary>
            Instantiate with part number.
            </summary>
            <param name="partNumber">Part number.</param>
        </member>
        <member name="T:View.Sdk.Storage.ViewStorageSdk">
            <summary>
            View Storage SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.ViewStorageSdk.Bucket">
            <summary>
            Bucket methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.ViewStorageSdk.Object">
            <summary>
            Object methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Storage.ViewStorageSdk.MultipartUpload">
            <summary>
            Multipart upload methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Storage.ViewStorageSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8001.</param>
        </member>
        <member name="T:View.Sdk.TenantMetadata">
            <summary>
            Tenant metadata.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.AccountGUID">
            <summary>
            Account GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.ParentGUID">
            <summary>
            Parent GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.DefaultPoolGUID">
            <summary>
            Default pool GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Region">
            <summary>
            Region.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.S3BaseDomain">
            <summary>
            S3 base domain.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.RestBaseDomain">
            <summary>
            REST base domain.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantMetadata.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.TenantMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.TenantSetupResult">
            <summary>
            Tenant setup result.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Tenant">
            <summary>
            Tenant.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Credential">
            <summary>
            Credential.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.GraphRepository">
            <summary>
            Graph repository.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.EmbeddingsRule">
            <summary>
            Embeddings rule.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.TenantSetupResult.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="M:View.Sdk.TenantSetupResult.#ctor">
            <summary>
            Tenant setup result.
            </summary>
        </member>
        <member name="T:View.Sdk.TypeResult">
            <summary>
            Type detection results.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.MimeType">
            <summary>
            MIME type.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.Extension">
            <summary>
            Extension.
            </summary>
        </member>
        <member name="P:View.Sdk.TypeResult.Type">
            <summary>
            Data type.
            </summary>
        </member>
        <member name="M:View.Sdk.TypeResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UdrDataTableRequest">
            <summary>
            UDR data table processing request.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.DatabaseType">
            <summary>
            Database type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.IncludeFlattened">
            <summary>
            True to include a flattened representation of the source document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.CaseInsensitive">
            <summary>
            True to enable case insensitive processing.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.TopTerms">
            <summary>
            Number of top terms to include.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDataTableRequest.SqliteFileData">
            <summary>
            Sqlite file data.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDataTableRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UdrDocument">
            <summary>
            UDR document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Success">
            <summary>
            Indicates if the parser was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Timestamp">
            <summary>
            Start and end timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Error">
            <summary>
            Error response, if any.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.TypeResult">
            <summary>
            Type result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Type">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Terms">
            <summary>
            Terms identified through text extraction.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.TopTerms">
            <summary>
            Top terms and their count.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Schema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.Postings">
            <summary>
            Postings.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocument.SemanticCells">
            <summary>
            Semantic cells.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocument.GetTopTerms(System.Int32)">
            <summary>
            Retrieve top terms.
            </summary>
            <param name="count">Number of top terms to retrieve.</param>
            <returns>Dictionary containing terms and their counts.</returns>
        </member>
        <member name="T:View.Sdk.UdrDocumentRequest">
            <summary>
            UDR document request.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Type">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.ContentType">
            <summary>
            Content-type.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.IncludeFlattened">
            <summary>
            True to include a flattened representation of the source document.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.CaseInsensitive">
            <summary>
            True to enable case insensitive processing.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.TopTerms">
            <summary>
            Number of top terms to include.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.AdditionalData">
            <summary>
            Additional data, not used by the service.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.MetadataRule">
            <summary>
            Metadata rule.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Metadata">
            <summary>
            Metadata, attached to the result.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="P:View.Sdk.UdrDocumentRequest.ContentBytes">
            <summary>
            Data.
            </summary>
        </member>
        <member name="M:View.Sdk.UdrDocumentRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.UserMaster">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.FullName">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Notes">
            <summary>
            Notes.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.PasswordSha256">
            <summary>
            Password SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.IsProtected">
            <summary>
            Boolean indicating if the object is protected from deletion.
            </summary>
        </member>
        <member name="P:View.Sdk.UserMaster.CreatedUtc">
            <summary>
            Creation time, in UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.UserMaster.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.UserMaster.Redact(View.Sdk.Serialization.Serializer,View.Sdk.UserMaster)">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="user">User.</param>
            <returns>User.</returns>
        </member>
        <member name="M:View.Sdk.UserMaster.Redact(View.Sdk.Serialization.Serializer,System.Collections.Generic.List{View.Sdk.UserMaster})">
            <summary>
            Redact.
            </summary>
            <param name="serializer">Serializer.</param>
            <param name="users">Users.</param>
            <returns>List.</returns>
        </member>
        <member name="T:View.Sdk.UserRoleMap">
            <summary>
            User Role Map.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.RoleGUID">
            <summary>
            Role GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.Active">
            <summary>
            Is active.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.IsProtected">
            <summary>
            Is protected.
            </summary>
        </member>
        <member name="P:View.Sdk.UserRoleMap.CreatedUtc">
            <summary>
            Created UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.UserRoleMap.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.UserRoleMap.#ctor(System.Guid,System.Guid)">
            <summary>
            Instantiate.
            </summary>
            <param name="userGuid">User GUID.</param>
            <param name="roleGuid">Role GUID.</param>
        </member>
        <member name="T:View.Sdk.VectorRepository">
            <summary>
            Vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.RepositoryType">
            <summary>
            Type of vector repository.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.EndpointUrl">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Model">
            <summary>
            Embeddings model.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.Dimensionality">
            <summary>
            Dimensionality of embeddings.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseHostname">
            <summary>
            Database hostname.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.SchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseTable">
            <summary>
            Database table name.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabasePort">
            <summary>
            Database port.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabaseUser">
            <summary>
            Database user.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.DatabasePassword">
            <summary>
            Database password.
            </summary>
        </member>
        <member name="P:View.Sdk.VectorRepository.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.VectorRepository.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.VectorRepositoryTypeEnum">
            <summary>
            Vector repository type.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.MysqlHeatwave">
            <summary>
            MySQL.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.Oracle23AI">
            <summary>
            Oracle 23AI.
            </summary>
        </member>
        <member name="F:View.Sdk.VectorRepositoryTypeEnum.Pgvector">
            <summary>
            Pgvector.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.Implementations.DocumentMethods">
            <summary>
            Document methods
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Document methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.Exists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.Write(View.Sdk.Embeddings.EmbeddingsDocument,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.Delete(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.DeleteByFilter(System.Guid,View.Sdk.Vector.VectorDeleteRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.DocumentMethods.Retrieve(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Vector.Implementations.RepositoryMethods">
            <summary>
            Repository methods
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.RepositoryMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Repository methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.RepositoryMethods.EnumerateMany(View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.RepositoryMethods.Truncate(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.RepositoryMethods.GetStatistics(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Vector.Implementations.SemanticCellMethods">
            <summary>
            Semantic cell methods
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticCellMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Semantic cell methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticCellMethods.ReadMany(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticCellMethods.Read(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticCellMethods.Exists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Vector.Implementations.SemanticChunkMethods">
            <summary>
            Semantic chunk methods
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticChunkMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Semantic chunk methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticChunkMethods.ReadMany(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticChunkMethods.Read(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.SemanticChunkMethods.Exists(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Vector.Implementations.VectorMethods">
            <summary>
            Vector search and enumerate methods
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.VectorMethods.#ctor(View.Sdk.ViewSdkBase)">
            <summary>
            Search and enumerate methods.
            </summary>
            <param name="sdk">View SDK.</param>
        </member>
        <member name="M:View.Sdk.Vector.Implementations.VectorMethods.Query(View.Sdk.Vector.VectorQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.VectorMethods.Search(View.Sdk.Vector.VectorSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:View.Sdk.Vector.Implementations.VectorMethods.Find(View.Sdk.Embeddings.FindEmbeddingsRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:View.Sdk.Vector.Interfaces.IDocumentMethods">
            <summary>
            Interface for document methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IDocumentMethods.Exists(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a document exists.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IDocumentMethods.Write(View.Sdk.Embeddings.EmbeddingsDocument,System.Threading.CancellationToken)">
            <summary>
            Write a document.
            </summary>
            <param name="document">Embeddings document.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IDocumentMethods.Delete(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IDocumentMethods.DeleteByFilter(System.Guid,View.Sdk.Vector.VectorDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Delete documents by filter.
            </summary>
            <param name="repoGuid">Repository GUID.</param>
            <param name="deleteRequest">Delete request.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IDocumentMethods.Retrieve(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Embeddings document.</returns>
        </member>
        <member name="T:View.Sdk.Vector.Interfaces.IRepositoryMethods">
            <summary>
            Interface for repository methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IRepositoryMethods.EnumerateMany(View.Sdk.EnumerationQuery,System.Threading.CancellationToken)">
            <summary>
            Enumerate documents.
            </summary>
            <param name="query">Enumeration query.</param>
            <param name="token">Cancellation token.</param>
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IRepositoryMethods.Truncate(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Truncate repository.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if deleted.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IRepositoryMethods.GetStatistics(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get statistics for a repository.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Statistics.</returns>
        </member>
        <member name="T:View.Sdk.Vector.Interfaces.ISemanticCellMethods">
            <summary>
            Interface for semantic cell methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticCellMethods.ReadMany(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read semantic cells for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cells.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticCellMethods.Read(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a specific semantic cell for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic cell.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticCellMethods.Exists(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a specific semantic cell exists for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if the semantic cell exists.</returns>
        </member>
        <member name="T:View.Sdk.Vector.Interfaces.ISemanticChunkMethods">
            <summary>
            Interface for semantic chunk methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticChunkMethods.ReadMany(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read semantic chunks for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic chunks.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticChunkMethods.Read(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Read a specific semantic chunk for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="chunkGuid">Chunk GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>Semantic chunk.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.ISemanticChunkMethods.Exists(System.Guid,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check if a specific semantic chunk exists for a given document.
            </summary>
            <param name="repoGuid">Vector repository GUID.</param>
            <param name="docGuid">Document GUID.</param>
            <param name="cellGuid">Cell GUID.</param>
            <param name="chunkGuid">Chunk GUID.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if the semantic chunk exists.</returns>
        </member>
        <member name="T:View.Sdk.Vector.Interfaces.IVectorMethods">
            <summary>
            Interface for search and enumerate methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IVectorMethods.Query(View.Sdk.Vector.VectorQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Vector query.
            </summary>
            <param name="queryReq">Query request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IVectorMethods.Search(View.Sdk.Vector.VectorSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Vector search.
            </summary>
            <param name="searchReq">Search request.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of vector chunks.</returns>
        </member>
        <member name="M:View.Sdk.Vector.Interfaces.IVectorMethods.Find(View.Sdk.Embeddings.FindEmbeddingsRequest,System.Threading.CancellationToken)">
            <summary>
            Find existing embeddings.
            </summary>
            <param name="findReq">Find embeddings request.</param>
            <param name="token">Cancellation token.</param>
            <returns>Find embeddings result.</returns>
        </member>
        <member name="T:View.Sdk.Vector.VectorChunk">
            <summary>
            Vector chunk.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.DocumentGUID">
            <summary>
            Document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.SourceDocumentGUID">
            <summary>
            Source document GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.GraphRepositoryGUID">
            <summary>
            Graph repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.GraphNodeIdentifier">
            <summary>
            Graph node identifier.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellGUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellType">
            <summary>
            Semantic cell type.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellMD5Hash">
            <summary>
            Cell MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellSHA1Hash">
            <summary>
            Cell SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellSHA256Hash">
            <summary>
            Cell SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CellPosition">
            <summary>
            Cell position.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkGUID">
            <summary>
            Chunk GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkMD5Hash">
            <summary>
            Chunk MD5.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkSHA1Hash">
            <summary>
            Chunk SHA1.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkSHA256Hash">
            <summary>
            Chunk SHA256.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkPosition">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.ChunkLength">
            <summary>
            Chunk length.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Content">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Score">
            <summary>
            Score.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Distance">
            <summary>
            Distance.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.CreatedUtc">
            <summary>
            Creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorChunk.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>EmbeddingsDocument.</returns>
        </member>
        <member name="M:View.Sdk.Vector.VectorChunk.FromDataTable(System.Data.DataTable,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataTable.
            </summary>
            <param name="dt">DataTable.</param>
            <param name="serializer">Serializer.</param>
            <returns>List of EmbeddingsDocument.</returns>
        </member>
        <member name="T:View.Sdk.Vector.VectorDeleteRequest">
            <summary>
            Vector delete request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.CollectionGUID">
            <summary>
            Collection GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.BucketGUID">
            <summary>
            Bucket GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.DataRepositoryGUID">
            <summary>
            Data repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.ObjectKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorDeleteRequest.ObjectVersion">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorDeleteRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorQueryRequest">
            <summary>
            Vector query request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryRequest.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorQueryRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorQueryResult">
            <summary>
            Vector query result.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Success">
            <summary>
            Boolean indicating whether or not the operation was successful.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Timestamp">
            <summary>
            Timestamps.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorQueryResult.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorQueryResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorRepositoryStatistics">
            <summary>
            Vector repository statistics.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.VectorRepository">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.DocumentCount">
            <summary>
            Number of documents.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.TotalBytes">
            <summary>
            Total number of bytes as recorded through semantic cells.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.CellCount">
            <summary>
            Semantic cell count.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.ChunkCount">
            <summary>
            Chunk count.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.CollectionGUIDs">
            <summary>
            Collection GUIDs referenced in this repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.DataRepositoryGUIDs">
            <summary>
            Data repository GUIDs referenced in this repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.GraphRepositoryGUIDs">
            <summary>
            Graph repository GUIDs referenced in this repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.BucketGUIDs">
            <summary>
            Bucket GUIDs referenced in this repository.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorRepositoryStatistics.Models">
            <summary>
            List of models referenced in this vector repository.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorRepositoryStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorRepositoryStatistics.FromDataRow(System.Data.DataRow,View.Sdk.Serialization.Serializer)">
            <summary>
            Instantiate from DataRow.
            </summary>
            <param name="row">DataRow.</param>
            <param name="serializer">Serializer.</param>
            <returns>VectorRepositoryStatistics.</returns>
        </member>
        <member name="T:View.Sdk.Vector.VectorSearchRequest">
            <summary>
            Vector search request.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.SearchType">
            <summary>
            Search type.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.VectorRepositoryGUID">
            <summary>
            Vector repository GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.StartIndex">
            <summary>
            Starting index.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.MaxResults">
            <summary>
            Maximum number of results to retrieve.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.VectorSearchRequest.Embeddings">
            <summary>
            Embeddings.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.VectorSearchRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.VectorSearchTypeEnum">
            <summary>
            Vector search type.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.InnerProduct">
            <summary>
            InnerProduct.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.CosineDistance">
            <summary>
            CosineDistance.
            </summary>
        </member>
        <member name="F:View.Sdk.Vector.VectorSearchTypeEnum.L2Distance">
            <summary>
            L2Distance.
            </summary>
        </member>
        <member name="T:View.Sdk.Vector.ViewVectorSdk">
            <summary>
            View Vector SDK.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.ViewVectorSdk.Document">
            <summary>
            Document methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.ViewVectorSdk.Repository">
            <summary>
            Repository methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.ViewVectorSdk.Vector">
            <summary>
            Vector methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.ViewVectorSdk.SemanticCell">
            <summary>
            SemanticCell methods.
            </summary>
        </member>
        <member name="P:View.Sdk.Vector.ViewVectorSdk.SemanticChunk">
            <summary>
            SemanticChunk methods.
            </summary>
        </member>
        <member name="M:View.Sdk.Vector.ViewVectorSdk.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint URL, i.e. http://localhost:8000/.</param>
        </member>
        <member name="T:View.Sdk.ViewSdkBase">
            <summary>
            View SDK base class.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.LogRequests">
            <summary>
            Enable or disable logging of request bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.LogResponses">
            <summary>
            Enable or disable logging of response bodies.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.AccessKey">
            <summary>
            Access key.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Endpoint">
            <summary>
            Endpoint URL.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Serializer">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.TimeoutMs">
            <summary>
            Timeout, in milliseconds.  Default is 600 seconds.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.XToken">
            <summary>
            Optional xToken header value.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Email">
            <summary>
            Optional email address to include in the request headers. 
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.Password">
            <summary>
            Optional plain-text password to include in the request headers.
            </summary>
        </member>
        <member name="P:View.Sdk.ViewSdkBase.PasswordSha256">
            <summary>
            Optional SHA-256 hash of the password to include in the request headers.
            </summary>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="tenantGuid">Tenant GUID.</param>
            <param name="accessKey">Access key.</param>
            <param name="endpoint">Endpoint.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Log(View.Sdk.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.ValidateConnectivity(System.Threading.CancellationToken)">
            <summary>
            Validate connectivity.
            </summary>
            <param name="token">Cancellation token.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Create``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Create an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Post``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Execute a logic API.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Post``2(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Execute a logic API.
            </summary>
            <typeparam name="T1">Input type.</typeparam>
            <typeparam name="T2">Output type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if an object exists.
            </summary>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Retrieve``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Read an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.RetrieveMany``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Read objects.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>List.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Update``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Update an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token">Cancellation token.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <param name="url">URL.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Delete``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Delete an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="url">URL.</param>
            <param name="obj">Object.</param>
            <param name="token"></param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.Enumerate``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Executes a GET request to enumerate a list of objects from the specified URL.
            </summary>
            <typeparam name="T">The type of items in the enumeration result.</typeparam>
            <param name="url">The API endpoint URL to fetch the enumeration from.</param>
            <param name="token">Optional cancellation token.</param>
            <returns>The deserialized <see cref="T:View.Sdk.EnumerationResult`1"/> if successful; otherwise, null.</returns>
        </member>
        <member name="M:View.Sdk.ViewSdkBase.ReadResponse(RestWrapper.RestResponse,System.String,System.Threading.CancellationToken)">
            <summary>
            Read response data from RestResponse, handling both chunked and non-chunked responses.
            Do not use this method if you need to iterate over the response chunk by chunk.
            This method encodes incoming byte data as UTF-8 strings and should not be used for scenarios where binary data is required.
            </summary>
            <param name="resp">REST response.</param>
            <param name="url">URL from the request, useful for logging.</param>
            <param name="token">Cancellation token.</param>
            <returns>Response data as string.</returns>
        </member>
        <member name="T:View.Sdk.WebAuthenticationTypeEnum">
            <summary>
            Web authentication type.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.Basic">
            <summary>
            Basic.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="F:View.Sdk.WebAuthenticationTypeEnum.BearerToken">
            <summary>
            Bearer token.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEvent">
            <summary>
            Webhook event.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TargetGUID">
            <summary>
            Target GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.RuleGUID">
            <summary>
            Rule GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.EventType">
            <summary>
            Event type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Url">
            <summary>
            URL.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Uri">
            <summary>
            URI.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.ExpectStatus">
            <summary>
            HTTP status to expect on success.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.RetryIntervalMs">
            <summary>
            Retry interval in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.Attempt">
            <summary>
            Attempt number.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.MaxAttempts">
            <summary>
            Maximum attempts.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.HttpStatus">
            <summary>
            HTTP status last received.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.AddedUtc">
            <summary>
            Timestamp when added, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.LastAttemptUtc">
            <summary>
            Timestamp when last attempted, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.NextAttemptUtc">
            <summary>
            Timestamp for next attempt, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.LastFailureUtc">
            <summary>
            Timestamp for last failure, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.SuccessUtc">
            <summary>
            Timestamp for success, UTC.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEvent.FailedUtc">
            <summary>
            Timestamp for failed, UTC.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookEvent.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventArgs">
            <summary>
            Webhook event arguments.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEventArgs.Event">
            <summary>
            Webhook event.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookEventArgs.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookEventArgs.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventStatusEnum">
            <summary>
            Webhook event status enumeration.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Created">
            <summary>
            Created.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.AttemptFailed">
            <summary>
            AttemptFailed.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.TaskFailed">
            <summary>
            TaskFailed.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Succeeded">
            <summary>
            Succeeded.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventStatusEnum.Expired">
            <summary>
            Expired.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookEventTypeEnum">
            <summary>
            Webhook event type enumeration.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.ObjectWrite">
            <summary>
            ObjectWrite.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.UdrDocumentGenerated">
            <summary>
            UdrDocumentGenerated.
            </summary>
        </member>
        <member name="F:View.Sdk.WebhookEventTypeEnum.EmbeddingsGenerated">
            <summary>
            EmbeddingsGenerated.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookRule">
            <summary>
            Webhook rule.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TargetGUID">
            <summary>
            Target GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.EventType">
            <summary>
            Event type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.MaxAttempts">
            <summary>
            Maximum number of attempts.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.RetryIntervalMs">
            <summary>
            Retry interval in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.TimeoutMs">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookRule.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookRule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Sdk.WebhookTarget">
            <summary>
            Webhook target.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Url">
            <summary>
            URL.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.Uri">
            <summary>
            URI.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.ExpectStatus">
            <summary>
            HTTP status to expect for the request to be considered successful.
            </summary>
        </member>
        <member name="P:View.Sdk.WebhookTarget.CreatedUtc">
            <summary>
            Timestamp from creation, in UTC time.
            </summary>
        </member>
        <member name="M:View.Sdk.WebhookTarget.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:View.Models.NodeGroup">
            <summary>
            Node group.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.TenantGUID">
            <summary>
            Tenant GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:View.Models.NodeGroup.CreatedUtc">
            <summary>
            Creation timestamp, in UTC time.
            </summary>
        </member>
        <member name="M:View.Models.NodeGroup.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
    </members>
</doc>
